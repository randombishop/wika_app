{"version":3,"sources":["commons/utils/context.js","commons/utils/misc.js","commons/components/MainLogo.jsx","commons/components/NetworkButton.jsx","commons/components/AccountButton.jsx","commons/components/Header.jsx","commons/components/Splash.jsx","commons/components/account/AccountInfo.jsx","commons/components/account/AccountConnectModes.jsx","commons/components/account/AccountList.jsx","commons/components/account/AccountConnectWeb3.jsx","commons/components/account/AccountConnectWika.jsx","commons/components/account/AccountConnect.jsx","commons/components/account/AccountSelectMain.jsx","commons/components/account/AccountCreate.jsx","commons/components/account/AccountImport.jsx","commons/components/account/AccountSelect.jsx","commons/components/account/Account.jsx","commons/components/like/Like1.jsx","commons/components/like/Like2.jsx","commons/components/like/Like.jsx","commons/components/recommend/Recommend.jsx","commons/components/wallet/Wallet.jsx","commons/components/like/LikedPages.jsx","commons/components/authors/OwnedPages.jsx","commons/components/authors/ClaimPage.jsx","commons/components/debug/Keccak.jsx","commons/components/debug/Wip.jsx","commons/components/transaction/SignTransaction.jsx","commons/components/MainContent.jsx","commons/components/Footer.jsx","commons/components/App.jsx","background/network.js","background/transaction.js","background/crypto.js","background/storage.js","background/extension_port.js","background/background.js","background/utils.js","wika_bridge.js","index.js"],"names":["AppContext","React","createContext","copyToClipboard","inputId","document","getElementById","select","execCommand","convertToWika","value","formatWika","toFixed","formatUsd","shortenAddress","address","substr","bytesToString","array","out","i","len","c","char2","char3","length","String","fromCharCode","MainLogo","buttonStyle","backgroundColor","fontSize","color","Fab","size","sx","this","onClick","context","navigate","className","Component","contextType","NetworkButton","textTransform","height","network","ready","style","variant","type","renderStatus","AccountButton","display","alignItems","account","marginLeft","balance","wika","renderConnected","renderDisconnected","renderButtonContent","Header","headerStyle","background","padding","textAlign","titleStyle","networkStyle","position","top","right","accountStyle","Typography","props","title","Splash","renderColumn","image","text","Card","CardMedia","component","alt","width","marginTop","CardContent","gutterBottom","render","Grid","container","spacing","item","xs","AccountInfo","copyElement","element","disconnect","selectAccount","renderAccountBox","name","ListItem","ListItemAvatar","ListItemText","primary","secondary","usd","renderAddressBox","id","label","TextField","fullWidth","readOnly","InputProps","startAdornment","InputAdornment","href","renderDisconnectButton","Container","Button","renderDebug","JSON","stringify","renderInfo","addressRaw","AccountConnectModes","componentDidMount","getWeb3Data","getWikaData","setState","web3Wallets","window","BACKGROUND","web3Enable","then","result","web3Data","wikaData","WIKA_BRIDGE","accounts","handleModeChange","event","mode","target","continue","state","data","next","renderRadioChoice","FormControl","FormLabel","RadioGroup","onChange","FormControlLabel","control","Radio","renderMessage","message","renderContinueButton","disabled","align","AccountList","handleAccountChange","renderAccountItem","index","meta","accountName","Fragment","ListItemIcon","Divider","renderRadioGroup","List","map","AccountConnectWeb3","getAccounts","web3Accounts","handleProviderChange","provider","back","source","addressU8","decodeAddress","u8aToHex","renderProviderItem","MenuItem","version","renderSelectProvider","Box","InputLabel","Select","labelId","providers","renderAccountList","renderActions","AccountConnectWika","AccountConnect","cancelMode","selectedMode","selectMode","AccountSelectMain","renderFirstTime","marginBottom","import","create","enableContinue","renderSwitch","AccountCreate","generateAccount","console","log","handleAccountNameChange","handleCheckboxChange","checkSecretSaved","copySecret","phrase","renderNext","enabled","renderCopyButtonAdornment","copyButtonAdorn","endAdornment","FormGroup","Checkbox","AccountImport","handlePhraseInputChange","imported","importAccount","e","alert","clear","render2","AccountSelect","storage","get","list","view","addAccount","push","self","set","done","renderList","renderCreate","renderImport","CircularProgress","Account","env","Like1","handleNumLikeChange","numLikes","update","submitLike","params","url","referrer","sendTransaction","monitorLike","_mounted","txStatus","status","error","renderButton","paddingBottom","borderRadius","CardHeader","subheader","Stack","direction","Slider","CardActions","Like2","likesSubmittedCount","likesSubmittedAt","rewardWaitFactor","Like","getLikePrice","price","likePrice","catch","err","handleUrlChange","lookedUp","lookupUrl","subscribeToUrl","subscribeToLike","clearUrl","unsubscribe","unsubUrl","getUrl","urlLikes","Number","s","unsubLike","getLike","likesSubmittedRemaining","componentWillUnmount","renderInputAdornment","renderUrlInput","inputProps","renderUrlNumLikes","renderDivider","renderPart2","rewardPrct","rewardTarget","Recommend","Wallet","LikedPages","queryApi","apiEndpoint","fetch","response","json","urls","OwnedPages","ClaimPage","DEFAULT_ACCOUNT","NUM_BLOCKS_TO_WAIT","styleTextArea","fontFamily","styleButton","getOwnersRequestPrice","subscribeToBlockNumber","requestPrice","unsubBlockNumber","getBlockNumber","currentBlock","subscribeToUrlOwner","subscribeToOwnerRequest","subscribeToOwnerResult","unsubUrlOwner","owner","getUrlOwner","unsubOwnerRequest","requestBlock","requestAccount","getOwnerRequest","unsubOwnerResult","resultBlock","resultNumVotes","resultNumVotesYes","resultNumVotesMajority","resultIntro","resultMark","resultOutcome","getOwnerResult","unsubscribeUrl","submitRequest","monitorRequest","testUrl","copyMark","renderPart1","defaultValue","formatOwner","renderPart3","renderTestResult","testResult","renderPart4","currentRequester","renderSubmitRequest","renderMyRequest","renderOtherRequest","renderMyRequestProgress","blocks_done","progress","LinearProgress","renderMyRequestResult","icon","outcome","Keccak","updateText","generateHash","hash","keccakAsHex","copy","Wip","SignTransaction","transactionType","transactionParams","MainContent","mainStyle","overflow","pages","splash","like","recommend","wallet","liked_pages","owned_pages","claim_page","keccak","sign_transaction","getTitle","page","tab","renderPage","Footer","styleFooter","bottom","left","borderTop","styleMenu","buttonClicked","toggleMenu","toggle","menuOpened","renderMenuItem","renderMenu","Paper","MenuList","renderIcon","paddingTop","transactionSent","rejectTransaction","confirmTransaction","renderMainActions","renderTransactionButtons","renderAccountButton","App","getAccountFromStorage","getTabFromStorage","subscribeToBalance","_mountedAccount","_mountedTab","ping","signTransaction","txType","callback","find","x","findAccount","signTransactionCallback","connectNetwork","networkState","connect","unsubGetBalance","getBalance","balanceWika","free","balanceUsd","close","txParams","endpoint","getReady","api","Provider","require","ApiPromise","WsProvider","WikaNetwork","wsProvider","query","system","likes","owners","requests","results","number","getUrlInfo","Promise","all","ans","txLike","tx","txOwnerRequest","requestUrlCheck","createTransaction","Transaction","txMonitor","isInBlock","isFinalized","unsubTransaction","dispatchError","asModule","parseError","sendInExtension","signer","Keyring","addFromUri","signAndSend","sendUsingWeb3","web3FromSource","injector","sendTransactionInExtension","sendTransactionUsingWeb3","transaction","sendTransactionUsingWika","bytesToHex","byteArray","forEach","byte","toString","slice","newPair","StorageApp","key","localStorage","getItem","parse","setItem","StorageExt","chrome","local","ExtensionPort","registerListener","runtime","onMessageExternal","addListener","request","sender","sendResponse","documentId","debug","a","win","open","counter","check","wikaReactApp","setTimeout","cryptoReady","encryptWithAES","passphrase","AES","encrypt","decryptWithAES","ciphertext","decrypt","Utf8","mnemonicGenerate","location","split","initialize","networkType","networkUrl","cryptoWaitReady","port","WikaBridge","sendMessage","lastError","ReactDOM","StrictMode","ref"],"mappings":"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","file":"static/js/main.d9592216.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AppContext = React.createContext();\n\nexport default AppContext ;\n","\n\nconst BALANCE_UNIT = 1000000000000;\nconst WIKA_TO_USD = 0.02 ;\n\n\n\n\n\n\n\n// Copy to clipboard\n\nfunction copyToClipboard(inputId) {\n    var copyText = document.getElementById(inputId);\n    copyText.select();\n    document.execCommand(\"copy\");\n}\n\n\n\n// Formatting stuff\n\nfunction convertToWika(value) {\n    return value / BALANCE_UNIT;\n}\n\nfunction formatWika(value) {\n    if (value != null) {\n        return value.toFixed(2) + ' W';\n    } else {\n        return '-';\n    }\n}\n\nfunction wikaToUsd(value) {\n    if (value!=null) {\n        return value * WIKA_TO_USD ;\n    } else {\n        return null;\n    }\n}\n\nfunction formatUsd(value) {\n    if (value != null) {\n        return value.toFixed(2) + ' US$';\n    } else {\n        return '-';\n    }\n}\n\nfunction shortenText(text) {\n    const maxLength = 50;\n    if (text == null) {\n        return \"\";\n    } else if (text.length > maxLength) {\n        return text.substr(0, maxLength) + '...';\n    } else {\n        return text;\n    }\n}\n\nfunction shortenAddress(address) {\n    if (address == null) {\n        return \"\";\n    } else {\n        return address.substr(0,5) + '...' + address.substr(44) ;\n    }\n}\n\n\n\n\n// Convert Hex/Bytes/String...\n\nfunction hexToBytes(hex) {\n    if (hex == null) {\n        return null;\n    }\n    if (hex.substr(0, 2) === '0x') {\n        hex = hex.substr(2);\n    }\n    for (var bytes = [], c = 0; c < hex.length; c += 2) {\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    }\n    return bytes;\n}\n\nfunction bytesToString(array) {\n    if (array==null) return null ;\n    var out, i, len, c;\n    var char2, char3;\n\n    out = \"\";\n    len = array.length;\n    i = 0;\n    while (i < len) {\n        c = array[i++];\n        switch (c >> 4) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                // 0xxxxxxx\n                out += String.fromCharCode(c);\n                break;\n            case 12:\n            case 13:\n                // 110x xxxx   10xx xxxx\n                char2 = array[i++];\n                out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n                break;\n            case 14:\n                // 1110 xxxx  10xx xxxx  10xx xxxx\n                char2 = array[i++];\n                char3 = array[i++];\n                out += String.fromCharCode(((c & 0x0F) << 12) |\n                    ((char2 & 0x3F) << 6) |\n                    ((char3 & 0x3F) << 0));\n                break;\n            default:\n                break;\n        }\n    }\n    return out;\n}\n\nfunction bytesToHex(byteArray) {\n  var s = '0x';\n  byteArray.forEach(function (byte) {\n      s += ('0' + (byte & 0xFF).toString(16)).slice(-2);\n  });\n  return s;\n}\n\n\n\n\n\n// Find an account by address\nfunction findAccount(accounts, address) {\n    if (accounts) {\n        return accounts.find(x => (x.address===address)) ;\n    } else {\n        return null ;\n    }\n}\n\n\n\n\n\nexport {\n    copyToClipboard,\n    convertToWika, formatWika, wikaToUsd, formatUsd, shortenText, shortenAddress,\n    hexToBytes, bytesToString, bytesToHex,\n    findAccount\n} ;\n","import React from 'react';\nimport Fab from '@mui/material/Fab';\n\n\nimport AppContext from \"../utils/context\";\n\n\nclass MainLogo extends React.Component {\n\n    static contextType = AppContext;\n\n    buttonStyle = {\n        backgroundColor: 'white',\n        '&:hover': {\n          backgroundColor: '#e0f5fd',\n        },\n        fontSize: '28px',\n        color: '#1976d2'\n    }\n\n    render() {\n        return (\n            <Fab size=\"medium\"\n                 sx={this.buttonStyle}\n                 aria-label=\"home\"\n                 onClick={() => this.context.navigate('splash')}>\n                <i className=\"far fa-thumbs-up\"></i>\n            </Fab>\n        );\n    }\n\n}\n\n\nexport default MainLogo ;\n\n\n\n","import React from 'react';\nimport Fab from '@mui/material/Fab';\n\nimport AppContext from '../utils/context' ;\n\n\n\nclass NetworkButton extends React.Component {\n\n    static contextType = AppContext;\n\n    buttonStyle = {\n        backgroundColor: 'white',\n        '&:hover': {\n          backgroundColor: '#e0f5fd',\n        },\n        textTransform: 'none',\n        fontSize: '11px',\n        height: '18px'\n    }\n\n    renderStatus() {\n        if (this.context.network.ready) {\n            return <i style={{color:'green'}} className=\"fas fa-check\"></i> ;\n        } else {\n            return <i style={{color:'orange'}} className=\"fas fa-spinner\"></i> ;\n        }\n    }\n\n    render() {\n        return (\n            <Fab size=\"small\" variant=\"extended\" sx={this.buttonStyle}>\n                <i className=\"fas fa-network-wired\"></i>\n                &nbsp;&nbsp;\n                {this.context.network.type}\n                &nbsp;&nbsp;\n                {this.renderStatus()}\n            </Fab>\n        );\n    }\n\n}\n\n\nexport default NetworkButton ;\n\n\n\n","import React from 'react';\nimport Identicon from \"@polkadot/react-identicon\";\nimport Fab from '@mui/material/Fab';\n\n\nimport AppContext from '../utils/context' ;\nimport {formatWika} from \"../utils/misc\";\n\n\nclass AccountButton extends React.Component {\n\n    static contextType = AppContext;\n\n    buttonStyle = {\n        backgroundColor: 'white',\n        '&:hover': {\n          backgroundColor: '#e0f5fd',\n        },\n    }\n\n    renderDisconnected() {\n        return (\n            <span>\n                <i className=\"far fa-user-circle\"></i>\n                &nbsp;\n                Connect\n            </span>\n        );\n    }\n\n    renderConnected() {\n        return (\n            <div style={{display:'flex', alignItems: 'center'}}>\n                <Identicon size={30} value={this.context.account.address}/>\n                <div style={{marginLeft:'10px'}}>{formatWika(this.context.balance.wika)}</div>\n            </div>\n        );\n    }\n\n    renderButtonContent() {\n        if (this.context.account) {\n            return this.renderConnected() ;\n        } else {\n            return this.renderDisconnected() ;\n        }\n    }\n\n    render() {\n        return (\n            <Fab size=\"small\" variant=\"extended\" sx={this.buttonStyle}\n                 onClick={() => this.context.navigate('account')}>\n                {this.renderButtonContent()}\n            </Fab>\n        );\n    }\n\n}\n\n\nexport default AccountButton ;\n\n\n\n","import React from 'react';\nimport Typography from '@mui/material/Typography' ;\n\n\nimport AppContext from \"../utils/context\";\nimport MainLogo from \"./MainLogo\";\nimport NetworkButton from \"./NetworkButton\";\nimport AccountButton from \"./AccountButton\";\n\n\nclass Header extends React.Component {\n\n    static contextType = AppContext;\n\n    headerStyle = {\n        display: 'flex',\n        alignItems: 'center',\n        background: '#F9F9F9',\n        padding: '5px 15px',\n        textAlign: 'center'\n    }\n\n    titleStyle = {\n        marginLeft:'10px'\n    }\n\n    networkStyle = {\n        position: 'absolute',\n        top: '4px',\n        right: '15px',\n    }\n\n    accountStyle = {\n        position: 'absolute',\n        top: '35px',\n        right: '15px'\n    }\n\n    render() {\n        return (\n            <div style={this.headerStyle}>\n                <MainLogo />\n                <Typography variant=\"h5\" color=\"primary\" style={this.titleStyle}>\n                    {this.props.title}\n                </Typography>\n                <div style={this.networkStyle}>\n                    <NetworkButton />\n                </div>\n                <div style={this.accountStyle}>\n                    <AccountButton />\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Header ;\n\n\n\n","import React from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\n\n\nimport AppContext from \"../utils/context\";\n\n\nclass Splash extends React.Component {\n\n    static contextType = AppContext;\n\n    renderColumn = (title, image, text) => {\n        return (\n             <Card>\n              <CardMedia\n                component=\"img\"\n                image={image}\n                alt=\"\"\n                sx={{width:'80%', marginLeft:'10%', marginTop:'10px'}}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h6\" component=\"div\">\n                  {title}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {text}\n                </Typography>\n              </CardContent>\n            </Card>\n        ) ;\n    }\n\n    render = () => {\n        return (\n            <div>\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    {this.renderColumn(\n                        \"Consumers\",\n                        \"images/splash1.png\",\n                        \"Like your favorite pages and reward the authors and previous likers.\")}\n                  </Grid>\n                  <Grid item xs={4}>\n                    {this.renderColumn(\n                        \"Authors\",\n                        \"images/splash2.png\",\n                        \"Register any web page and Wika users will be able to reward you directly.\")}\n                  </Grid>\n                  <Grid item xs={4}>\n                    {this.renderColumn(\n                        \"Everyone\",\n                        \"images/splash3.png\",\n                        \"Protect your privacy and promote quality content.\")}\n                  </Grid>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Splash ;\n\n\n","import React from \"react\";\nimport Identicon from '@polkadot/react-identicon';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\n\n\nimport AppContext from \"../../utils/context\";\nimport {copyToClipboard, formatWika, formatUsd} from \"../../utils/misc\";\n\n\nclass AccountInfo extends React.Component {\n\n    static contextType = AppContext;\n\n    copyElement = (element) => () => {\n        copyToClipboard(element) ;\n    }\n\n    disconnect = () => {\n        this.context.selectAccount(null) ;\n    }\n\n\n    renderAccountBox = () => {\n        let name = this.context.account.name ;\n        let address = this.context.account.address ;\n        return (\n            <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar>\n                  <Identicon value={address} size={40}/>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={name}\n                  secondary={formatWika(this.context.balance.wika) + ' / ' + formatUsd(this.context.balance.usd)}\n                />\n            </ListItem>\n        ) ;\n    }\n\n    renderAddressBox = (id, label, value) => {\n        return (\n            <TextField\n                id={id}\n                label={label}\n                variant=\"outlined\"\n                fullWidth={true}\n                readOnly={true}\n                value={value}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                        <a href=\"/#\" onClick={this.copyElement(id)}>\n                            <i className=\"far fa-copy\"></i>\n                        </a>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n        ) ;\n    }\n\n    renderDisconnectButton = () => {\n        return (\n            <Container sx={{textAlign:'center'}}>\n                <Button variant=\"outlined\" onClick={this.disconnect}>\n                    Disconnect this account\n                    &nbsp;&nbsp;&nbsp;\n                    <i className=\"fas fa-sign-out-alt\"></i>\n                </Button>\n            </Container>) ;\n    }\n\n    renderDebug = () => {\n        return (<div>\n                    {JSON.stringify(this.context.account)}\n                </div>) ;\n    }\n\n    renderInfo = () => {\n        return (\n            <div>\n                {this.renderAccountBox()}\n                <br/><br/>\n                {this.renderAddressBox(\"account_address_substrate_element\",\n                                       \"Address in Substrate format\",\n                                       this.context.account.address)}\n                <br/><br/>\n                {this.renderAddressBox(\"account_address_raw_element\",\n                                       \"Address in raw format\",\n                                       this.context.account.addressRaw)}\n                <br/><br/>\n                {this.renderDisconnectButton()}\n            </div>);\n    }\n\n    render = () => {\n        return this.renderInfo() ;\n    }\n\n}\n\nexport default AccountInfo;\n\n\n","import React from \"react\";\nimport Typography from '@mui/material/Typography';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass AccountConnectModes extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'web3',\n            web3Data: null,\n            wikaData: null\n        };\n    }\n\n    componentDidMount = () => {\n        this.getWeb3Data();\n        this.getWikaData() ;\n    }\n\n    getWeb3Data = () => {\n        this.setState({web3Wallets: null}, () => {\n            window.BACKGROUND.web3Enable(\"Wika Network\").then((result) => {\n                this.setState({web3Data: result});\n            });\n        });\n    }\n\n    getWikaData = () => {\n        this.setState({wikaData: null}, () => {\n            window.WIKA_BRIDGE.accounts((result) => {\n                this.setState({wikaData: result});\n            }) ;\n        });\n    }\n\n    handleModeChange = (event) => {\n        this.setState({mode:event.target.value}) ;\n    };\n\n    continue = () => {\n        const mode = this.state.mode ;\n        const data = mode ==='web3' ? this.state.web3Data :  this.state.wikaData ;\n        this.props.next(mode, data) ;\n    }\n\n\n\n\n\n    renderRadioChoice = () => {\n        return (\n            <FormControl>\n              <FormLabel id=\"account-mode-radio-label\">Wallet management mode</FormLabel>\n              <RadioGroup\n                aria-labelledby=\"account-mode-radio-label\"\n                name=\"radio-buttons-group\"\n                value={this.state.mode}\n                onChange={this.handleModeChange}\n              >\n                <FormControlLabel value=\"web3\" control={<Radio />} label=\"Web3 wallet (for example polkadot.js)\" />\n                <FormControlLabel value=\"wika\" control={<Radio />} label=\"Wika Browser Extension\" />\n              </RadioGroup>\n            </FormControl>\n          );\n    }\n\n    renderMessage = () => {\n        let message = \"\" ;\n        if (this.state.mode==='wika') {\n            if (this.state.wikaData && this.state.wikaData.length>0) {\n                message = `Wika browser extension detected and accounts are configured.\n                           Let's go!`\n            } else {\n                message = `No Wika Extension accounts detected.\n                           Please install it and make sure you have an account already set up.`\n            }\n        } else if (this.state.mode==='web3') {\n            if (this.state.web3Data && this.state.web3Data.length>0) {\n                message = `Polkadot wallets detected and authorized with this app.\n                           Let's go!`\n            } else {\n                message = `No Polkadot wallets detected.\n                           Please install one and make sure you authorize this app to use it.`\n            }\n        }\n        return (<Typography variant=\"body1\">{message}</Typography>) ;\n    }\n\n    renderContinueButton = () => {\n        let disabled = true ;\n        if (this.state.mode==='web3' && this.state.web3Data && this.state.web3Data.length>0) {\n            disabled = false ;\n        }\n        if (this.state.mode==='wika' && this.state.wikaData && this.state.wikaData.length>0) {\n            disabled = false ;\n        }\n        return (\n            <Container align=\"right\">\n                <Button variant=\"contained\"\n                        disabled={disabled}\n                        onClick={this.continue}>\n                    Continue\n                </Button>\n            </Container>\n        ) ;\n    }\n\n    render = () => {\n        return (\n            <div>\n                {this.renderRadioChoice()}\n                <br/><br/>\n                {this.renderMessage()}\n                <br/><br/>\n                {this.renderContinueButton()}\n            </div>\n         );\n    }\n\n}\n\nexport default AccountConnectModes;\n\n\n","import React from \"react\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Identicon from '@polkadot/react-identicon';\nimport Radio from '@mui/material/Radio';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport RadioGroup from '@mui/material/RadioGroup';\n\n\nimport {shortenAddress} from '../../utils/misc' ;\n\n\nclass AccountList extends React.Component {\n\n    handleAccountChange = (event) => {\n        this.props.selectAccount(event.target.value) ;\n    };\n\n    renderAccountItem = (item, index) => {\n        let name = \"\" ;\n        if (item.meta) {\n            name = item.meta.name;\n        } else if (item.accountName) {\n            name = item.accountName ;\n        } else if (item.name) {\n            name = item.name ;\n        }\n\n        return (\n            <React.Fragment key={index}>\n                <ListItem alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                      <Identicon value={item.address} size={40}/>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={name}\n                      secondary={shortenAddress(item.address)}\n                    />\n                    <ListItemIcon>\n                        <Radio value={index} />\n                    </ListItemIcon>\n                </ListItem>\n                <Divider />\n            </React.Fragment>\n        ) ;\n    }\n\n    renderDebug = () => {\n      return (\n        <div>\n            <p>{JSON.stringify(this.props.accounts)}</p>\n            <br/><br/>\n            <p>{JSON.stringify(this.props.account)}</p>\n        </div>\n      );\n    }\n\n    renderRadioGroup = () => {\n      return (\n        <RadioGroup\n           name=\"radio-buttons-group\"\n           value={this.props.account}\n           onChange={this.handleAccountChange}\n        >\n            <List width=\"100%\">\n              <Divider />\n              {this.props.accounts.map(this.renderAccountItem)}\n            </List>\n        </RadioGroup>\n      );\n    }\n\n    render = () => {\n      return this.renderRadioGroup() ;\n    }\n\n}\n\nexport default AccountList;\n\n\n","import React from \"react\";\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\n\n\n\nimport AccountList from './AccountList' ;\n\n\nclass AccountConnectWeb3 extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            provider: 0,\n            accounts: [],\n            account: 0\n        };\n    }\n\n    componentDidMount = () => {\n        this.getAccounts();\n    }\n\n    getAccounts = () => {\n        this.setState({accounts: []}, () => {\n            window.BACKGROUND.web3Accounts().then((result) => {\n                this.setState({accounts: result});\n            });\n        });\n    }\n\n    handleProviderChange = (event) => {\n        this.setState({provider:event.target.value}) ;\n    };\n\n    selectAccount = (account) => {\n        this.setState({account:account}) ;\n    };\n\n    back = () => {\n        this.props.back() ;\n    }\n\n    continue = () => {\n        let account = this.state.accounts[this.state.account] ;\n        let address = account.address ;\n        let name = account.meta.name ;\n        let source = account.meta.source ;\n        let addressU8 = window.BACKGROUND.decodeAddress(address) ;\n        let addressRaw = window.BACKGROUND.u8aToHex(addressU8) ;\n        let data = {\n            mode: 'web3',\n            name: name,\n            address: address,\n            addressRaw: addressRaw,\n            source: source\n        };\n        this.props.next(data) ;\n    }\n\n\n    renderProviderItem = (item, index) => {\n        return <MenuItem key={index} value={index}>{item.name + ' ('  + item.version + ')'}</MenuItem>\n    }\n\n    renderSelectProvider = () => {\n        return (\n            <Box width=\"100%\">\n              <FormControl fullWidth>\n                <InputLabel id=\"select-web3-provider-label\">Web3 Provider</InputLabel>\n                <Select\n                  labelId=\"select-web3-provider-label\"\n                  label=\"Web3 Provider\"\n                  value={this.state.provider}\n                  onChange={this.handleProviderChange}\n                >\n                  {this.props.providers.map(this.renderProviderItem)}\n                </Select>\n              </FormControl>\n            </Box>\n        );\n    }\n\n    renderAccountList = () => {\n      return (\n        <AccountList accounts={this.state.accounts}\n                              account={this.state.account}\n                              selectAccount={this.selectAccount} />\n      );\n    }\n\n    renderActions = () => {\n        return (\n            <Container align=\"right\">\n                <Button color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={this.back}>\n                    Back\n                </Button>\n                &nbsp;&nbsp;\n                <Button color=\"primary\"\n                        variant=\"contained\"\n                        onClick={this.continue}>\n                    Continue\n                </Button>\n            </Container>\n        ) ;\n    }\n\n    render = () => {\n        return (\n           <div>\n                {this.renderSelectProvider()}\n                {this.renderAccountList()}\n                <br/><br/>\n                {this.renderActions()}\n            </div>\n        );\n    }\n\n}\n\nexport default AccountConnectWeb3;\n\n\n","import React from \"react\";\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\n\n\nimport AccountList from './AccountList' ;\n\n\nclass AccountConnectWika extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: 0\n        };\n    }\n\n    selectAccount = (account) => {\n        this.setState({account:account}) ;\n    };\n\n    back = () => {\n        this.props.back() ;\n    }\n\n    continue = () => {\n        let account = this.props.accounts[this.state.account] ;\n        let data = {\n            mode: 'wika',\n            name: account.name ,\n            address: account.address,\n            addressRaw: account.addressRaw\n        };\n        this.props.next(data) ;\n    }\n\n\n\n\n    renderAccountList = () => {\n      return (\n        <AccountList accounts={this.props.accounts}\n                     account={this.state.account}\n                     selectAccount={this.selectAccount} />\n      );\n    }\n\n    renderActions = () => {\n        return (\n            <Container align=\"right\">\n                <Button color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={this.back}>\n                    Back\n                </Button>\n                &nbsp;&nbsp;\n                <Button color=\"primary\"\n                        variant=\"contained\"\n                        onClick={this.continue}>\n                    Continue\n                </Button>\n            </Container>\n        ) ;\n    }\n\n    render = () => {\n        return (\n           <div>\n                {this.renderAccountList()}\n                <br/><br/>\n                {this.renderActions()}\n            </div>\n        );\n    }\n\n}\n\nexport default AccountConnectWika;\n\n\n","import React from \"react\";\n\n\nimport AppContext from \"../../utils/context\";\nimport AccountConnectModes from \"./AccountConnectModes\";\nimport AccountConnectWeb3 from \"./AccountConnectWeb3\";\nimport AccountConnectWika from \"./AccountConnectWika\";\n\n\nclass AccountConnect extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedMode: null,\n            data: null,\n        }\n    }\n\n    cancelMode = () => {\n        this.setState({selectedMode: null}) ;\n    }\n\n    selectMode = (mode, data) => {\n        this.setState({\n            selectedMode: mode,\n            data: data\n        }) ;\n    }\n\n    selectAccount = (account) => {\n        this.context.selectAccount(account) ;\n    }\n\n    render = () => {\n        if (!this.state.selectedMode) {\n            return <AccountConnectModes next={this.selectMode} /> ;\n        } else {\n            if (this.state.selectedMode==='web3') {\n                return (<AccountConnectWeb3\n                            providers={this.state.data}\n                            back={this.cancelMode}\n                            next={this.selectAccount} />) ;\n            } else {\n                return (<AccountConnectWika\n                            accounts={this.state.data}\n                            back={this.cancelMode}\n                            next={this.selectAccount} />) ;\n           }\n        }\n    }\n\n}\n\nexport default AccountConnect ;\n\n\n","import React from \"react\";\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\n\n\nimport AccountList from './AccountList' ;\n\n\nclass AccountSelectMain extends React.Component {\n\n    renderFirstTime = () => {\n        return (\n            <div>\n                <Typography variant='h6'>\n                    Set-up your Wika address\n                </Typography>\n                <Divider sx={{marginBottom:'15px'}} />\n                <Typography variant='body1'>\n                    Wika Network is built in the Polkadot eco-system.\n                    You can <a onClick={this.props.import} href=\"/#\">IMPORT</a> an existing Polkadot address if you already have one,\n                    or <a onClick={this.props.create} href=\"/#\">CREATE</a> a new one from scratch.\n                </Typography>\n            </div>\n        );\n    }\n\n    renderAccountList = () => {\n      return (\n        <AccountList accounts={this.props.accounts}\n                     account={this.props.account}\n                     selectAccount={this.props.selectAccount} />\n      );\n    }\n\n    renderActions = () => {\n        const enableContinue = this.props.accounts.length>0 ;\n        return (\n            <Container align=\"right\">\n                <Button color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={this.props.import}>\n                    Import\n                </Button>\n                &nbsp;&nbsp;\n                <Button color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={this.props.create}>\n                    Create\n                </Button>\n                &nbsp;&nbsp;\n                <Button color=\"primary\"\n                        variant=\"contained\"\n                        disabled={!enableContinue}\n                        onClick={this.props.next}>\n                    Continue\n                </Button>\n            </Container>\n        ) ;\n    }\n\n    renderSwitch = () => {\n        if (this.props.accounts.length>0) {\n            return this.renderAccountList();\n        } else {\n            return this.renderFirstTime();\n        }\n    }\n\n    render = () => {\n        return (\n           <div>\n                {this.renderSwitch()}\n                <br/><br/>\n                {this.renderActions()}\n            </div>\n        );\n    }\n\n}\n\nexport default AccountSelectMain;\n\n\n","import React from \"react\";\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Divider from '@mui/material/Divider';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\n\nimport {copyToClipboard} from \"../../utils/misc\";\n\n\nclass AccountCreate extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accountName: \"\",\n            address: null,\n            addressRaw: null,\n            phrase: \"\",\n            checkSecretSaved: false\n        } ;\n    }\n\n    componentDidMount = () => {\n        let account = window.BACKGROUND.generateAccount() ;\n        console.log('newAccount', account) ;\n        this.setState(account) ;\n    }\n\n    handleAccountNameChange = (event) => {\n        this.setState({accountName: event.target.value}) ;\n    }\n\n    handleCheckboxChange = () => {\n        this.setState({checkSecretSaved: !this.state.checkSecretSaved}) ;\n    }\n\n    copySecret = () => {\n        copyToClipboard(\"account_secret_element\") ;\n    }\n\n    next = () => {\n        const account = {\n            name: this.state.accountName,\n            address: this.state.address,\n            addressRaw: this.state.addressRaw,\n            phrase: this.state.phrase\n        }\n        this.props.next(account) ;\n    }\n\n\n\n\n\n    renderNext = () => {\n        let enabled = this.state.address && this.state.addressRaw && this.state.phrase && this.state.checkSecretSaved ;\n        return (<Container align=\"right\">\n                    <Button color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={this.props.back}>\n                        Back\n                    </Button>\n                    &nbsp;&nbsp;\n                    <Button color=\"primary\"\n                            variant=\"contained\"\n                            onClick={this.next}\n                            disabled={!enabled}>\n                        Continue\n                    </Button>\n                </Container>);\n    }\n\n    renderCopyButtonAdornment = () => {\n        return (\n            <InputAdornment position=\"end\">\n                <Button onClick={this.copySecret} variant=\"contained\" color=\"secondary\"><i className=\"fas fa-copy\"></i></Button>\n            </InputAdornment>\n        ) ;\n    }\n\n    render() {\n        let copyButtonAdorn = {endAdornment: this.renderCopyButtonAdornment()} ;\n        return (\n            <div>\n\n                <Typography variant='h6'>\n                    Create a new Wika address\n                </Typography>\n\n                <Divider/><br/><br/>\n\n                <TextField\n                    label=\"Account name\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    value={this.state.accountName}\n                    onChange={this.handleAccountNameChange}\n                />\n\n                <br/><br/>\n\n                <TextField\n                    id=\"account_secret_element\"\n                    label=\"Your 12-words phrase\"\n                    variant=\"outlined\"\n                    readOnly={true}\n                    fullWidth={true}\n                    value={this.state.phrase}\n                    InputProps={copyButtonAdorn} />\n\n                <br/><br/>\n\n                <Typography variant='body2'>\n                    <strong><i className=\"fas fa-exclamation-circle\"></i> Never share this phrase with anyone!</strong>\n                    <br/>\n                    The 12-words phrase can be used to restore your wallet. Write it down and keep it in a safe place.\n                    <br/>\n                    <strong>Loose your secret = loose your wallet!</strong>\n                </Typography>\n\n                <br/><br/>\n\n                <FormGroup>\n                  <FormControlLabel control={<Checkbox  value={this.state.checkSecretSaved}\n                                                        onChange={this.handleCheckboxChange}/>}\n                                    label=\"I have safely saved my secret phrase.\" />\n                </FormGroup>\n\n                <br/><br/>\n\n                {this.renderNext()}\n\n            </div>\n        );\n    }\n\n}\n\nexport default AccountCreate;\n\n\n","import React from \"react\";\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Divider from '@mui/material/Divider';\n\n\nclass AccountImport extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accountName: \"\",\n            imported: false,\n            address: null,\n            addressRaw: null,\n            phrase: \"\"\n        } ;\n    }\n\n    handlePhraseInputChange = (event) => {\n        if (!this.state.imported) {\n            this.setState({phrase: event.target.value}) ;\n        }\n    }\n\n    handleAccountNameChange = (event) => {\n        this.setState({accountName: event.target.value}) ;\n    }\n\n    import = () => {\n        try {\n            let account = window.BACKGROUND.importAccount(this.state.phrase) ;\n            account.imported = true ;\n            this.setState(account) ;\n        } catch (e) {\n            alert(e)\n        }\n    }\n\n    clear = () => {\n        this.setState({\n            imported: false,\n            address: null,\n            addressRaw: null,\n            phrase: \"\"\n        }) ;\n    }\n\n    next = () => {\n        const account = {\n            name: this.state.accountName,\n            address: this.state.address,\n            addressRaw: this.state.addressRaw,\n            phrase: this.state.phrase\n        }\n        this.props.next(account) ;\n    }\n\n    render2() {\n        if (this.state.imported) {\n            return (\n                <React.Fragment>\n                    <TextField\n                        label=\"Account name\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                        value={this.state.accountName}\n                        onChange={this.handleAccountNameChange}\n                    />\n\n                    <br/><br/>\n\n                    <TextField\n                        label=\"Public Address\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                        value={this.state.address}\n                        readOnly={true}\n                    />\n\n                    <br/><br/>\n\n                    <Container align=\"right\">\n                        <Button color=\"secondary\"\n                            variant=\"contained\"\n                            onClick={this.props.back}>\n                            Back\n                        </Button>\n                        &nbsp;&nbsp;\n                        <Button color=\"secondary\"\n                            variant=\"contained\"\n                            onClick={this.clear}>\n                            Clear\n                        </Button>\n                        &nbsp;&nbsp;\n                        <Button color=\"primary\"\n                                variant=\"contained\"\n                                onClick={this.next}>\n                            Continue\n                        </Button>\n                    </Container>\n\n                </React.Fragment>\n            ) ;\n        } else {\n            return (\n                <Container align=\"right\">\n                    <Button color=\"secondary\"\n                            variant=\"contained\"\n                            onClick={this.props.back}>\n                            Back\n                    </Button>\n                    &nbsp;&nbsp;\n                    <Button color=\"primary\"\n                            variant=\"contained\"\n                            onClick={this.import}>\n                       Import\n                    </Button>\n                </Container>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n\n                <Typography variant='h6'>\n                    Import your existing address\n                </Typography>\n\n                <Divider/><br/><br/>\n\n                <TextField\n                    id=\"account_secret_element\"\n                    label=\"Your 12-words phras\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    value={this.state.phrase}\n                    onChange={this.handlePhraseInputChange}\n                    readOnly={this.state.imported}\n                />\n\n                <br/><br/>\n\n                {this.render2()}\n\n            </div>\n        );\n    }\n\n}\n\nexport default AccountImport;\n\n\n","import React from \"react\";\nimport CircularProgress from '@mui/material/CircularProgress';\n\n\nimport AppContext from \"../../utils/context\";\nimport AccountSelectMain from './AccountSelectMain' ;\nimport AccountCreate from './AccountCreate' ;\nimport AccountImport from './AccountImport' ;\n\n\nclass AccountSelect extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            view: 'list',\n            accounts: null,\n            account: 0\n        };\n    }\n\n    componentDidMount = () => {\n        window.BACKGROUND.storage.get('accounts', (accounts) => {\n            if (accounts && accounts.length>0) {\n                this.setState({accounts:accounts});\n            } else {\n                this.setState({accounts:[]});\n            }\n        });\n    }\n\n    list = () => {\n        this.setState({view:'list'});\n    }\n\n    create = () => {\n        this.setState({view:'create'});\n    };\n\n    import = () => {\n        this.setState({view:'import'});\n    };\n\n    addAccount = (account) => {\n        let accounts = this.state.accounts ;\n        if (!accounts) {\n            accounts = [] ;\n        }\n        accounts.push(account) ;\n        let self = this ;\n        window.BACKGROUND.storage.set('accounts', accounts, () => {\n            self.setState({view:'list', accounts:accounts});\n        }) ;\n    }\n\n    selectAccount = (account) => {\n        this.setState({account:account});\n    };\n\n    done = () => {\n        let accounts = this.state.accounts ;\n        let account = accounts[this.state.account] ;\n        console.log('done with account selection', account) ;\n        this.context.selectAccount(account) ;\n    }\n\n\n\n    renderList = () => {\n        return <AccountSelectMain accounts={this.state.accounts}\n                                  account={this.state.account}\n                                  selectAccount={this.selectAccount}\n                                  create={this.create}\n                                  import={this.import}\n                                  next={this.done} /> ;\n    }\n\n    renderCreate = () => {\n        return <AccountCreate next={this.addAccount}\n                              back={this.list}  /> ;\n    }\n\n    renderImport = () => {\n        return <AccountImport next={this.addAccount}\n                              back={this.list}  /> ;\n    }\n\n    renderSwitch = () => {\n        switch (this.state.view) {\n            case 'list': return this.renderList() ;\n            case 'create': return this.renderCreate() ;\n            case 'import': return this.renderImport() ;\n            default: return \"?\" ;\n        }\n    }\n\n    render = () => {\n        if (this.state.accounts) {\n            return this.renderSwitch();\n        } else {\n            return <CircularProgress /> ;\n        }\n    }\n\n}\n\nexport default AccountSelect;\n\n\n","import React from \"react\";\n\n\nimport AppContext from \"../../utils/context\";\nimport AccountInfo from \"./AccountInfo\";\nimport AccountConnect from \"./AccountConnect\";\nimport AccountSelect from \"./AccountSelect\";\n\n\nclass Account extends React.Component {\n\n    static contextType = AppContext;\n\n    render = () => {\n        if (this.context.account) {\n            return <AccountInfo /> ;\n        } else {\n            const env = window.BACKGROUND.env;\n            if (env==='app') {\n                return <AccountConnect />;\n            } else {\n                return <AccountSelect />;\n            }\n        }\n    }\n\n}\n\nexport default Account ;\n\n\n","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Container from '@mui/material/Container';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\nimport CardActions from '@mui/material/CardActions';\nimport Fab from '@mui/material/Fab';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass Like1 extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            numLikes: 1\n        };\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n    }\n\n    componentWillUnmount() {\n       this._mounted = false;\n    }\n\n    handleNumLikeChange = (event) => {\n        this.setState({numLikes: event.target.value}, this.update) ;\n    }\n\n    submitLike = () => {\n        let params = {url: this.props.url,\n                      referrer: this.state.referrer,\n                      numLikes: this.state.numLikes} ;\n        let account = this.context.account ;\n        window.BACKGROUND.sendTransaction('like', params, account, this.monitorLike) ;\n    }\n\n    monitorLike = (result) => {\n        console.log('monitorLike', result);\n        if (this._mounted) {\n            this.setState({txStatus: result.status}) ;\n        }\n        if (result.error) {\n            alert(result.error) ;\n        }\n    }\n\n\n\n\n    renderButton = () => {\n        if (this.state.txStatus==null) {\n            return (\n                <Fab color=\"primary\" variant=\"extended\" onClick={this.submitLike}>\n                    Send {this.state.numLikes} &nbsp;<i className=\"fas fa-thumbs-up\"></i>\n                </Fab>\n            );\n        } else {\n            return (\n                <CircularProgress />\n            ) ;\n        }\n    }\n\n    render = () => {\n        return (\n            <React.Fragment>\n\n               <Container align=\"center\">\n                   <Card sx={{width: '75%', paddingBottom: '10px', borderRadius: '25px'}}>\n                        <CardHeader title=\"Like transaction\"\n                                    subheader={this.props.url}\n                        />\n                        <CardContent>\n                            <Stack direction=\"row\" sx={{width:'75%'}}>\n                                <Slider aria-label=\"Number of likes\" value={this.state.numLikes} onChange={this.handleNumLikeChange} />\n                            </Stack>\n                        </CardContent>\n                        <CardActions>\n                            <Container>{this.renderButton()}</Container>\n                        </CardActions>\n                   </Card>\n               </Container>\n\n            </React.Fragment>\n        );\n    }\n\n}\n\n\nexport default Like1 ;\n","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\n\nclass Like2 extends React.Component {\n\n\n    render = () => {\n        return (\n            <Container align=\"center\">\n                   <Card sx={{width: '75%', paddingBottom: '10px', borderRadius: '25px'}}>\n                        <CardHeader title=\"Thank you!\"\n                                    subheader={this.props.url}\n                        />\n                        <CardContent>\n                            <Typography>\n                                You sent <strong>{this.props.likesSubmittedCount} likes</strong>.\n                            </Typography>\n                            <br/>\n                            <Typography>\n                                You are ranked <strong>#{this.props.likesSubmittedAt+1}</strong> on the queue of people who liked this page,\n                                therefore, you will start receiving rewards when it hits {(this.props.likesSubmittedAt*this.props.rewardWaitFactor)+2} likes.\n                            </Typography>\n                        </CardContent>\n                   </Card>\n            </Container>\n        );\n    }\n\n}\n\nexport default Like2 ;\n\n\n","import React from 'react';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\n\n\nimport AppContext from \"../../utils/context\";\nimport {convertToWika} from \"../../utils/misc\";\nimport Like1 from \"./Like1\";\nimport Like2 from \"./Like2\";\n\n\nclass Like extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lookedUp:false,\n            url: \"\",\n            referrer: null,\n            likePrice: null,\n            rewardPrct: '33%',\n            rewardTarget: 1.33,\n            rewardWaitFactor: 4,\n            urlLikes: null,\n            likesSubmittedAt: null,\n            likesSubmittedCount: null,\n            likesSubmittedRemaining: null\n        }\n    }\n\n    componentDidMount() {\n        this.getLikePrice() ;\n    }\n\n    getLikePrice = () => {\n        let self = this;\n        window.BACKGROUND.network.getLikePrice((result) => {\n            let price = convertToWika(result) ;\n            self.setState({likePrice:price}) ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    handleUrlChange = (event) => {\n        if (this.state.lookedUp) return ;\n        this.setState({url: event.target.value}) ;\n    }\n\n    lookupUrl = () => {\n        this.subscribeToUrl() ;\n        this.subscribeToLike() ;\n        this.setState({lookedUp:true}) ;\n    }\n\n    clearUrl = () => {\n        this.unsubscribe() ;\n        this.setState({\n            lookedUp:false,\n            url:\"\",\n            likesSubmittedCount:null,\n        }) ;\n    }\n\n    subscribeToUrl = () => {\n        let self = this;\n        if (self.unsubUrl) {\n            self.unsubUrl() ;\n            self.unsubUrl = null ;\n        }\n        let url = this.state.url;\n        window.BACKGROUND.network.getUrl(url, (result) => {\n            let urlLikes = Number(result[0]) ;\n            self.setState({urlLikes:urlLikes}) ;\n        }).then((s) => {\n            self.unsubUrl = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    subscribeToLike = () => {\n        let self = this;\n        if (self.unsubLike) {\n            self.unsubLike() ;\n            self.unsubLike = null ;\n        }\n        let address = this.context.account.address;\n        let url = this.state.url;\n        window.BACKGROUND.network.getLike(address, url, (result) => {\n            self.setState({\n                likesSubmittedAt:Number(result[0]),\n                likesSubmittedCount:Number(result[1]),\n                likesSubmittedRemaining:Number(result[2])\n            }) ;\n        }).then((s) => {\n            self.unsubLike = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    componentWillUnmount = () => {\n        this.unsubscribe() ;\n    }\n\n    unsubscribe = () => {\n        if (this.unsubUrl) {\n            this.unsubUrl() ;\n        }\n        if (this.unsubLike) {\n            this.unsubLike() ;\n        }\n    }\n\n\n\n\n\n    renderInputAdornment = () => {\n        return (\n            <InputAdornment position=\"end\">\n                {this.state.lookedUp?\n                <Button onClick={this.clearUrl} variant=\"contained\" color=\"secondary\"><i className=\"fas fa-backspace\"></i></Button>\n                :<Button onClick={this.lookupUrl} variant=\"contained\" color=\"primary\"><i className=\"fas fa-search\"></i></Button>}\n            </InputAdornment>\n        ) ;\n    }\n\n    renderUrlInput = () => {\n        let inputProps = {endAdornment: this.renderInputAdornment()} ;\n        return (<TextField\n                    id=\"lookup-url-input\"\n                    label=\"Lookup URL status\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    value={this.state.url}\n                    onChange={this.handleUrlChange}\n                    InputProps={inputProps} />) ;\n    }\n\n    renderUrlNumLikes = () => {\n        if (this.state.lookedUp && this.state.urlLikes!=null) {\n            return (\n                <Typography variant=\"body2\" sx={{marginTop:\"5px\"}} >\n                    This page received <strong>{this.state.urlLikes} likes</strong>.\n                </Typography>) ;\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderDivider = () => {\n        if (this.state.lookedUp) {\n            return (<Divider />) ;\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderPart2 = () => {\n        if (this.state.lookedUp && this.state.likesSubmittedCount!=null) {\n            if (this.state.likesSubmittedCount>0) {\n                return <Like2\n                    urlLikes={this.state.urlLikes}\n                    likesSubmittedCount={this.state.likesSubmittedCount}\n                    likesSubmittedAt={this.state.likesSubmittedAt}\n                    rewardWaitFactor={this.state.rewardWaitFactor}\n                />\n            } else {\n                return <Like1\n                    url={this.state.url}\n                    urlLikes={this.state.urlLikes}\n                    likePrice={this.state.likePrice}\n                />\n            }\n        }\n    }\n\n    render = () => {\n        return (\n            <div>\n                {this.renderUrlInput()}\n                {this.renderUrlNumLikes()}\n                <br/>\n                <br/>\n                {this.renderPart2()}\n            </div>\n        ) ;\n    }\n\n}\n\nexport default Like ;\n\n\n\n","import React from 'react';\n\n\nclass Recommend extends React.Component {\n\n    render() {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Recommend ;\n\n\n","import React from 'react';\n\n\nclass Wallet extends React.Component {\n\n    render() {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Wallet ;\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass LikedPages extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {urls: null};\n    }\n\n    componentDidMount = () => {\n        this.queryApi() ;\n    }\n\n    queryApi = () => {\n        const self = this;\n        const address = this.context.account.address;\n        const url = this.context.apiEndpoint.url + '/user/' + address + '/liked_urls' ;\n        console.log(url) ;\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {self.setState({urls: data});});\n    }\n\n    render() {\n        return (\n            <div>\n                {JSON.stringify(this.context.apiEndpoint)}\n                <br/>\n                {JSON.stringify(this.state.urls)}\n            </div>\n        );\n    }\n\n}\n\nexport default LikedPages ;\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass OwnedPages extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {urls: null};\n    }\n\n    componentDidMount = () => {\n        this.queryApi() ;\n    }\n\n    queryApi = () => {\n        const self = this;\n        const address = this.context.account.address;\n        const url = this.context.apiEndpoint.url + '/user/' + address + '/owned_urls' ;\n        console.log(url) ;\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {self.setState({urls: data});});\n    }\n\n    render() {\n        return (\n            <div>\n                {JSON.stringify(this.context.apiEndpoint)}\n                <br/>\n                {JSON.stringify(this.state.urls)}\n            </div>\n        );\n    }\n\n}\n\nexport default OwnedPages ;\n\n\n","import React from \"react\";\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Container from '@mui/material/Container';\nimport LinearProgress from '@mui/material/LinearProgress';\n\n\nimport AppContext from \"../../utils/context\";\nimport {bytesToString, convertToWika, copyToClipboard} from \"../../utils/misc\";\n\n\nclass ClaimPage extends React.Component {\n\n    static contextType = AppContext;\n\n    DEFAULT_ACCOUNT = \"5C4hrfjw9DjXZTzV3MwzrrAr9P1MJhSrvWGWqi1eSuyUpnhM\" ;\n\n    NUM_BLOCKS_TO_WAIT = 10 ;\n\n    styleTextArea = {\n        fontFamily: 'monospace',\n        fontSize: '9px'\n    }\n\n    styleButton = {\n        padding: 0,\n        marginBottom: '4px'\n    }\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lookedUp:false,\n            url: \"\",\n            requestPrice: null,\n            owner: null,\n            requestBlock: null,\n            requestAccount: null,\n            currentBlock: null,\n            txStatus: null,\n            testResult: null\n        } ;\n    }\n\n\n    // INITIALIZATION\n    // --------------------------------\n\n    componentDidMount = () => {\n        this.getOwnersRequestPrice() ;\n        this.subscribeToBlockNumber() ;\n        this._mounted = true;\n    }\n\n    getOwnersRequestPrice = () => {\n        let self = this;\n        window.BACKGROUND.network.getOwnersRequestPrice((result) => {\n            let price = convertToWika(result) ;\n            self.setState({requestPrice:price}) ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    subscribeToBlockNumber = () => {\n        let self = this;\n        if (self.unsubBlockNumber) {\n            self.unsubBlockNumber() ;\n            self.unsubBlockNumber = null ;\n        }\n        window.BACKGROUND.network.getBlockNumber((result) => {\n            self.setState({\n                currentBlock:Number(result)\n            }) ;\n        }).then((s) => {\n            self.unsubBlockNumber = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n\n\n\n    // Lookup URL\n    // --------------------------------\n\n    handleUrlChange = (event) => {\n        this.setState({url: event.target.value}) ;\n    }\n\n    lookupUrl = () => {\n        this.setState({\n            lookedUp: true\n        }) ;\n        this.subscribeToUrlOwner() ;\n        this.subscribeToOwnerRequest() ;\n        this.subscribeToOwnerResult() ;\n    }\n\n    subscribeToUrlOwner = () => {\n        let self = this;\n        if (self.unsubUrlOwner) {\n            self.unsubUrlOwner() ;\n            self.unsubUrlOwner = null ;\n        }\n        let url = self.state.url;\n        this.setState({owner:null}, () => {\n            window.BACKGROUND.network.getUrlOwner(url, (result) => {\n                self.setState({\n                    owner: \"\" + result\n                });\n            }).then((s) => {\n                self.unsubUrlOwner = s;\n            }).catch((err) => {\n                alert(err);\n            });\n        }) ;\n    }\n\n    subscribeToOwnerRequest = () => {\n        let self = this;\n        if (self.unsubOwnerRequest) {\n            self.unsubOwnerRequest() ;\n            self.unsubOwnerRequest = null ;\n        }\n        let url = self.state.url;\n        let clearState = {\n            requestBlock: null,\n            requestAccount: null\n        } ;\n        this.setState(clearState, () => {\n            window.BACKGROUND.network.getOwnerRequest(url, (result) => {\n                self.setState({\n                    requestBlock: Number(result[0]),\n                    requestAccount: \"\"+result[1]\n                });\n            }).then((s) => {\n                self.unsubOwnerRequest = s;\n            }).catch((err) => {\n                alert(err);\n            });\n        }) ;\n    }\n\n    subscribeToOwnerResult = () => {\n        let self = this;\n        if (self.unsubOwnerResult) {\n            self.unsubOwnerResult() ;\n            self.unsubOwnerResult = null ;\n        }\n        let url = self.state.url;\n        let clearState = {\n            resultBlock: null,\n            resultNumVotes: null,\n            resultNumVotesYes: null,\n            resultNumVotesMajority: null,\n            resultIntro: null,\n            resultMark: null,\n            resultOutcome: null\n        } ;\n        this.setState(clearState, () => {\n            window.BACKGROUND.network.getOwnerResult(url, (result) => {\n                let data = {\n                    resultBlock: Number(result[0]),\n                    resultNumVotes: Number(result[1]),\n                    resultNumVotesYes: Number(result[2]),\n                    resultNumVotesMajority: Number(result[3]),\n                    resultIntro: result[4],\n                    resultMark: result[5],\n                    resultOutcome: result[6]\n                };\n                console.log('ownerResult', data) ;\n                self.setState(data);\n            }).then((s) => {\n                self.unsubOwnerResult = s;\n            });\n        }) ;\n    }\n\n    unsubscribeUrl = () => {\n        if (this.unsubUrlOwner) {\n            this.unsubUrlOwner() ;\n        }\n        if (this.unsubOwnerRequest) {\n            this.unsubOwnerRequest() ;\n        }\n        if (this.unsubOwnerResult) {\n            this.unsubOwnerResult() ;\n        }\n    }\n\n    clearUrl = () => {\n        this.unsubscribeUrl() ;\n        this.setState({\n            lookedUp:false,\n            url:\"\",\n            owner: null\n        }) ;\n    }\n\n\n\n    // Submit and monitor the request\n    // --------------------------------\n\n    submitRequest = () => {\n        let url = this.state.url ;\n        let account = this.context.account ;\n        window.BACKGROUND.sendTransaction('owner_request', {url:url}, account, this.monitorRequest) ;\n    }\n\n    monitorRequest = (result) => {\n        console.log('monitorRequest', result);\n        if (this._mounted) {\n            this.setState({txStatus: result.status}) ;\n        }\n        if (result.error) {\n            alert(result.error) ;\n        }\n    }\n\n\n    // Test the webpage ownership off-chain\n    // --------------------------------------\n\n    testUrl = () => {\n        /*let self = this;\n        let url = self.context.url ;\n        fetch(url, {\n              method: \"GET\",\n            })\n            .then(response => console.log(response))\n            .catch(err => console.log(err));*/\n    };\n\n\n    // Utils\n    // --------------------------------------\n\n    copyMark = () => {\n        copyToClipboard(\"wika_mark_element\") ;\n    };\n\n\n    // Clean-up when done\n    // --------------------------------------\n\n    componentWillUnmount = () => {\n        this._mounted = false;\n        if (this.unsubUrlOwner) {\n            this.unsubUrlOwner() ;\n        }\n        if (this.unsubOwnerRequest) {\n            this.unsubOwnerRequest() ;\n        }\n        if (this.unsubOwnerResult) {\n            this.unsubOwnerResult() ;\n        }\n        if (this.unsubBlockNumber) {\n            this.unsubBlockNumber() ;\n        }\n    }\n\n\n\n\n\n\n\n\n    // FRONT-END Part 1\n    // --------------------------------------\n\n    renderInputAdornment = () => {\n        return (\n            <InputAdornment position=\"end\">\n                {this.state.lookedUp?\n                <Button onClick={this.clearUrl} variant=\"contained\" color=\"secondary\"><i className=\"fas fa-backspace\"></i></Button>\n                :<Button onClick={this.lookupUrl} variant=\"contained\" color=\"primary\"><i className=\"fas fa-search\"></i></Button>}\n            </InputAdornment>\n        ) ;\n    }\n\n    renderPart1 = () => {\n        let inputProps = {endAdornment: this.renderInputAdornment()} ;\n        return (<TextField\n                    id=\"lookup-url-input\"\n                    label=\"Lookup URL status\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    value={this.state.url}\n                    onChange={this.handleUrlChange}\n                    disabled={this.state.lookedUp}\n                    InputProps={inputProps} />) ;\n    }\n\n\n\n\n\n\n    // FRONT-END Part 2\n    // --------------------------------------\n\n    renderPart2 = () => {\n        if (this.state.lookedUp && this.state.owner!=null) {\n            return (\n                 <TextField\n                    label=\"Current owner\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    defaultValue={this.formatOwner(this.state.owner)}\n                    disabled={true} />) ;\n        } else {\n            return \"\";\n        }\n    }\n\n    formatOwner = (owner) => {\n        if (owner===this.DEFAULT_ACCOUNT) {\n            return \"-\" ;\n        } else if (owner===this.context.account.address) {\n            return \"You are the owner!\" ;\n        } else {\n            return owner ;\n        }\n    }\n\n\n\n\n\n\n    // FRONT-END Part 3\n    // --------------------------------------\n\n    renderPart3 = () => {\n        if (this.state.lookedUp && this.state.owner!=null && this.state.owner!==this.context.account.address) {\n           return (\n                 <React.Fragment>\n                    <Divider />\n                    <br/>\n                    <Typography variant=\"subtitle1\" >\n                        Preparation\n                    </Typography>\n\n                    <Typography variant=\"subtitle2\" >\n                        1. Copy this mark\n                    </Typography>\n                    <br/>\n                    <TextField\n                        label=\"Ownership mark\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                        defaultValue={\"wika.network/author/\" + this.context.account.addressRaw}\n                        disabled={true}\n                        InputProps={{endAdornment:<InputAdornment position=\"end\">\n                                                    <Button onClick={this.copyMark}\n                                                            variant=\"contained\"\n                                                            color=\"primary\">Copy this</Button>\n                                                   </InputAdornment>}}/>\n                    <br/><br/>\n\n                    <Typography variant=\"subtitle2\" >\n                        2. Insert it in your webpage as proof of ownership <br/>\n                        <small>(Use an invisible img or link for example.)</small>\n                    </Typography>\n\n                    <br/>\n\n                    <Typography variant=\"subtitle2\" >\n                        3. Submit your request <br/>\n                        <small>Note that the request fee is {this.state.requestPrice} W</small>\n                    </Typography>\n\n                </React.Fragment>\n            ) ;\n        } else {\n            return \"\";\n        }\n    }\n\n    renderTestResult = () => {\n        if (this.state.testResult==null) {\n            return \"\" ;\n        } else if (this.state.testResult===true) {\n            return \"YES\" ;\n        } else {\n            return \"NO\" ;\n        }\n    }\n\n\n\n    // FRONT-END Part 4\n    // --------------------------------------\n\n    renderPart4 = () => {\n        if (this.state.lookedUp) {\n            let currentRequester = this.state.requestAccount ;\n            if (currentRequester==null || currentRequester===this.DEFAULT_ACCOUNT) {\n                return this.renderSubmitRequest() ;\n            } else if (currentRequester===this.context.account.address) {\n                return this.renderMyRequest() ;\n            } else {\n                return this.renderOtherRequest() ;\n            }\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderSubmitRequest = () => {\n        if (this.state.owner!==this.context.address) {\n            return (\n                <Container align=\"center\">\n                    {this.state.txStatus==null?\n                     <Button color=\"primary\" variant=\"contained\"\n                             onClick={this.submitRequest}>Submit your request</Button>:\n                     <CircularProgress />\n                    }\n                </Container>\n            ) ;\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderMyRequestProgress = () => {\n        let blocks_done = this.state.currentBlock - this.state.requestBlock ;\n        let progress = 100 * blocks_done / this.NUM_BLOCKS_TO_WAIT ;\n        return (\n            <React.Fragment>\n                <Divider />\n                <br/>\n                <Typography variant=\"subtitle2\" >\n                    Waiting for verification results ({blocks_done}/{this.NUM_BLOCKS_TO_WAIT})...\n                </Typography>\n                <LinearProgress variant=\"determinate\" value={progress} />\n            </React.Fragment>\n        )\n    }\n\n    renderMyRequestResult = () => {\n        let icon = this.state.resultOutcome===true?\"fas fa-vote-yea\":\"fas fa-times\" ;\n        let outcome = this.state.resultOutcome===true?\"approved\":\"rejected\" ;\n        return (\n            <React.Fragment>\n                <hr/>\n                <br/>\n                <Typography variant=\"body1\">\n                    <i className={icon}></i>\n                    &nbsp;&nbsp;\n                    Your request was {outcome}.\n                </Typography>\n                <br/>\n                <Typography variant=\"body2\">\n                    Verifications: <strong>{this.state.resultNumVotes}</strong>\n                </Typography>\n                <br/>\n                <Typography variant=\"body2\">\n                    Approvals: <strong>{this.state.resultNumVotesYes}</strong>\n                </Typography>\n                <br/>\n                <Typography variant=\"body2\">\n                    Evidence data:\n                </Typography>\n                <br/>\n                <TextField\n                    label=\"Page intro\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    defaultValue={bytesToString(this.state.resultIntro)}\n                    disabled={true} />\n                <br/>\n                <TextField\n                    label=\"Mark found\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    defaultValue={bytesToString(this.state.resultMark)}\n                    disabled={true} />\n            </React.Fragment>\n        )\n    }\n\n    renderMyRequest = () => {\n        if (this.state.resultBlock===0) {\n            return this.renderMyRequestProgress() ;\n        } else {\n            return this.renderMyRequestResult() ;\n        }\n    }\n\n    renderOtherRequest = () => {\n        return (\n            <Typography variant=\"body1\" >\n                <i className=\"fas fa-exclamation-triangle\"></i> &nbsp;\n                There is currently another user trying to claim ownership for this URL.\n            </Typography>\n        )\n    }\n\n\n\n\n\n\n    // And finally the render function!\n    // --------------------------------------\n\n\n    render() {\n        return (\n            <div>\n                {this.renderPart1()}\n                <br/><br/>\n                {this.renderPart2()}\n                <br/><br/>\n                {this.renderPart3()}\n                <br/><br/>\n                {this.renderPart4()}\n            </div>\n        );\n    }\n\n}\n\n\nexport default ClaimPage ;\n\n\n","import React from \"react\";\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\n\n\n\nimport {copyToClipboard} from \"../../utils/misc\";\n\n\nclass Keccak extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state={\n            text:\"\",\n            hash:\"\"\n        }\n    }\n\n    updateText = (event) => {\n        this.setState({text:event.target.value}) ;\n    }\n\n    generateHash = () => {\n        let text = this.state.text ;\n        let hash = window.BACKGROUND.keccakAsHex(text) ;\n        console.log('generateHash: ' + text + ' -> ' + hash) ;\n        this.setState({\n            hash:hash\n        }) ;\n    }\n\n    copy = () => {\n        copyToClipboard(\"keccak_hash_element\") ;\n    }\n\n    renderInputAdornment = () => {\n        return (\n            <InputAdornment position=\"end\">\n                <Button onClick={this.generateHash} variant=\"contained\" color=\"primary\">Hash</Button>\n            </InputAdornment>\n        ) ;\n    }\n\n    render() {\n        let inputProps = {endAdornment: this.renderInputAdornment()} ;\n        return (\n            <div>\n                <TextField\n                    id=\"input-text-to-kekkak\"\n                    label=\"Text\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    value={this.state.text}\n                    onChange={this.updateText}\n                    InputProps={inputProps} />\n                <br/> <br/>\n                <TextField\n                    id=\"keccak_hash_element\"\n                    label=\"Hash\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    value={this.state.hash}\n                    readOnly={true} />\n                <br/>\n                <br/>\n                <Container align=\"right\">\n                        <Button variant=\"contained\" color=\"primary\"\n                             onClick={this.copy}>\n                            Copy to clipboard\n                        </Button>\n                </Container>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Keccak ;\n\n","import React from 'react';\n\n\nclass Wip extends React.Component {\n\n    render() {\n        return (\n            <div>\n            </div>\n        );\n    }\n\n}\n\nexport default Wip ;\n\n\n","import React from 'react';\nimport Typography from '@mui/material/Typography';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass SignTransaction extends React.Component {\n\n    static contextType = AppContext;\n\n    render() {\n        return (\n            <div>\n                <Typography variant='h6'>\n                    Transaction type: {this.context.transactionType}\n                </Typography>\n                {JSON.stringify(this.context.transactionParams)}\n            </div>\n        );\n    }\n\n}\n\nexport default SignTransaction ;\n\n\n","import React from \"react\";\n\n\nimport AppContext from '../utils/context' ;\nimport Header from \"./Header\";\nimport Splash from \"./Splash\";\nimport Account from \"./account/Account\";\nimport Like from \"./like/Like\";\nimport Recommend from \"./recommend/Recommend\";\nimport Wallet from \"./wallet/Wallet\";\nimport LikedPages from \"./like/LikedPages\";\nimport OwnedPages from \"./authors/OwnedPages\";\nimport ClaimPage from \"./authors/ClaimPage\";\nimport Keccak from \"./debug/Keccak\";\nimport Wip from \"./debug/Wip\";\nimport SignTransaction from \"./transaction/SignTransaction\";\n\n\nclass MainContent extends React.Component {\n\n    static contextType = AppContext;\n\n    mainStyle = {\n        padding: '30px 20px 15px 20px',\n        height: '415px',\n        background: \"linear-gradient(171.17deg, #B5FFB4 -41.33%, #E1F6FF 12.71%, #FFF496 105.58%, #FED5FF 154.44%)\",\n        overflow: \"scroll\"\n    }\n\n    pages = {\n        splash: {title:\"Welcome to Wika!\", component:<Splash />} ,\n        like: {title:\"Like a web page\", component:<Like />} ,\n        recommend: {title:\"Recommendations\", component:<Recommend />} ,\n        wallet: {title:\"Wallet\", component:<Wallet />} ,\n        account: {title:\"Account\", component:<Account />} ,\n        liked_pages: {title:\"Liked pages\", component:<LikedPages />} ,\n        owned_pages: {title:\"Owned pages\", component:<OwnedPages />} ,\n        claim_page: {title:\"Claim page ownership\", component:<ClaimPage />} ,\n        keccak: {title:\"Keccak\", component:<Keccak />},\n        sign_transaction: {title:\"Sign a Transaction\", component:<SignTransaction />}\n    }\n\n    getTitle = () => {\n        let page = this.pages[this.context.tab] ;\n        if (page) {\n            return page.title ;\n        } else {\n            return \"WIP\" ;\n        }\n    }\n\n    renderPage = () => {\n        let page = this.pages[this.context.tab] ;\n        if (page) {\n            return page.component ;\n        } else {\n            return <Wip /> ;\n        }\n    }\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <Header title={this.getTitle()} />\n                <div style={this.mainStyle}>\n                    {this.renderPage()}\n                </div>\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default MainContent ;\n","import React from 'react';\nimport Paper from '@mui/material/Paper';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Fab from '@mui/material/Fab';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport AppContext from \"../utils/context\";\n\n\nclass Footer extends React.Component {\n\n    static contextType = AppContext;\n\n    styleFooter = {\n        backgroundColor: '#F9F9F9',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        height: '60px',\n        padding: '10px 50px',\n        borderTop: '1px dashed lightgray'\n    }\n\n    styleMenu = {\n        position: 'absolute',\n        bottom: '85px',\n        right: '5px'\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuOpened: false,\n        };\n    }\n\n    buttonClicked = (value) => {\n        if (value==='toggleMenu') {\n            this.toggleMenu() ;\n        } else {\n            this.navigate(value) ;\n        }\n    }\n\n    toggleMenu = () => {\n        let toggle = !this.state.menuOpened ;\n        this.setState({menuOpened:toggle}) ;\n    }\n\n    navigate = (tab) => {\n        this.setState({menuOpened:false}) ;\n        this.context.navigate(tab);\n    }\n\n\n\n\n    renderMenuItem = (icon, text, target) => {\n        return (\n            <MenuItem onClick={() => this.navigate(target)}>\n              <ListItemIcon>\n                <i className={'far '+icon}></i>\n              </ListItemIcon>\n              <ListItemText>\n                {text}\n              </ListItemText>\n            </MenuItem>\n        ) ;\n    }\n\n    renderMenu = () => {\n        if (this.state.menuOpened) {\n            return (\n                <Paper style={this.styleMenu}>\n                    <MenuList>\n                        {this.renderMenuItem('fa-user', 'Account', 'account')}\n                        {this.renderMenuItem('fa-heart', 'Liked pages', 'liked_pages')}\n                        {this.renderMenuItem('fa-bookmark', 'Owned pages', 'owned_pages')}\n                        {this.renderMenuItem('fa-registered', 'Claim page ownership', 'claim_page')}\n                        {this.renderMenuItem('fa-file-code', 'Keccak 256', 'keccak')}\n                        {this.renderMenuItem('fa-handshake', 'Blockchains', 'blockchains')}\n                        {this.renderMenuItem('fa-save', 'Settings', 'settings')}\n                        {this.renderMenuItem('fa-gem', 'About', 'about')}\n                    </MenuList>\n                </Paper>\n            );\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderIcon = (label, icon, target) => {\n        let color = \"default\" ;\n        if (target === this.context.tab) {\n            color = \"primary\" ;\n        }\n        return (<Grid item xs={3} align=\"center\">\n                    <Fab size=\"small\"\n                         color={color}\n                         aria-label=\"icon\"\n                         onClick={() => this.buttonClicked(target)}\n                         sx={{fontSize: '18px', marginBottom:'5px'}}>\n                        <i className={'far '+icon}></i>\n                    </Fab>\n                    <br/>\n                    <Typography variant=\"subtitle2\" color={color} onClick={() => this.buttonClicked(target)}>\n                        {label}\n                    </Typography>\n                </Grid>);\n    }\n\n    renderAccountButton() {\n        return (\n            <Container align=\"center\" sx={{paddingTop:'7px'}}>\n                <Fab variant=\"extended\" color=\"primary\"\n                     onClick={() => this.context.navigate('account')}>\n                    Connect your account\n                </Fab>\n            </Container>\n        ) ;\n    }\n\n    renderMainActions() {\n        return (\n            <React.Fragment>\n              <Grid container spacing={2}>\n                {this.renderIcon('Like', 'fa-thumbs-up', 'like')}\n                {this.renderIcon('Buy', 'fa-credit-card', 'buy')}\n                {this.renderIcon('Send', 'fa-paper-plane', 'wallet')}\n                {this.renderIcon('More', 'fa-plus-square', 'toggleMenu')}\n              </Grid>\n              {this.renderMenu()}\n            </React.Fragment>\n        ) ;\n    }\n\n    renderTransactionButtons() {\n        if (this.context.transactionSent) {\n            return (\n                <Container sx={{paddingTop:'7px'}} align=\"center\">\n                    <CircularProgress />\n                </Container>\n            ) ;\n        } else {\n            return (\n                <Container align=\"center\" sx={{paddingTop:'7px'}}>\n                    <Fab variant=\"extended\" color=\"secondary\"\n                         onClick={this.context.rejectTransaction}>\n                        Reject\n                    </Fab>\n                    &nbsp;&nbsp;\n                    <Fab variant=\"extended\" color=\"primary\"\n                         onClick={this.context.confirmTransaction}>\n                        Confirm\n                    </Fab>\n                </Container>\n            ) ;\n        }\n    }\n\n    renderSwitch() {\n        if (this.context.account) {\n            if (this.context.tab !== 'sign_transaction') {\n                return this.renderMainActions() ;\n            } else {\n                return this.renderTransactionButtons() ;\n            }\n        } else {\n            if (this.context.tab !== 'account') {\n                return this.renderAccountButton() ;\n            } else {\n                return \"\" ;\n            }\n        }\n    }\n\n    render() {\n        return (<div style={this.styleFooter}>\n                    {this.renderSwitch()}\n                </div>) ;\n    }\n\n}\n\n\nexport default Footer ;\n\n\n\n","import React from \"react\";\n\n\nimport AppContext from '../utils/context' ;\nimport {convertToWika, wikaToUsd, findAccount} from \"../utils/misc\";\nimport MainContent from './MainContent' ;\nimport Footer from './Footer' ;\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tab: null,\n            transactionType: null,\n            transactionParams: null,\n            transactionSent: false,\n            network: {\n                type: window.BACKGROUND.network.type,\n                url: window.BACKGROUND.network.endpoint,\n                ready: window.BACKGROUND.network.getReady()\n            },\n            api: {\n                type: \"Test API\",\n                url: \"https://api-test.wika.network\"\n            },\n            account: null,\n            balance: {\n                wika:null,\n                usd:null\n            }\n        };\n    }\n\n    componentDidMount = () => {\n        this.getAccountFromStorage() ;\n        this.getTabFromStorage() ;\n    }\n\n    getAccountFromStorage = () => {\n        let self = this ;\n        window.BACKGROUND.storage.get('account', (result) => {\n            self.setState({account:result}, () => {\n                self.subscribeToBalance() ;\n                self._mountedAccount = true ;\n                self._mounted = self._mountedTab && self._mountedAccount ;\n            });\n        })\n    }\n\n    getTabFromStorage = () => {\n        let self = this ;\n        window.BACKGROUND.storage.get('tab', (result) => {\n            if (!result) {\n                result = 'splash';\n            }\n            self.setState({tab:result}, () => {\n                self._mountedTab = true ;\n                self._mounted = self._mountedTab && self._mountedAccount ;\n            });\n        })\n    }\n\n    ping = () => {\n        console.log('pong') ;\n    }\n\n    signTransaction = (txType, params, address, callback) => {\n        const self = this ;\n        console.log('signTransaction -> data', txType, params, address, this._mounted) ;\n        window.BACKGROUND.storage.get('accounts', (accounts) => {\n            const account = findAccount(accounts, address) ;\n            console.log('signTransaction -> account', account) ;\n            if (account) {\n                self.signTransactionCallback = callback ;\n                self.selectAccount(account) ;\n                self.setState({\n                    tab: 'sign_transaction',\n                    transactionType: txType,\n                    transactionParams: params,\n                    transactionSent: false\n                }) ;\n            }\n        }) ;\n    }\n\n    connectNetwork = (callback) => {\n        let self = this ;\n        let networkState = self.state.network ;\n        networkState.ready = false ;\n        self.setState({network:networkState}, () => {\n            let network = window.BACKGROUND.network ;\n            network.connect(networkState.type, networkState.url, () => {\n                networkState.ready = true ;\n                self.setState({network:networkState}, ) ;\n            }) ;\n        }) ;\n    }\n\n    subscribeToBalance = () => {\n        let self = this;\n        if (self.unsubGetBalance) {\n            self.unsubGetBalance() ;\n            self.unsubGetBalance = null ;\n        }\n        let clearBalance = {\n            wika:null,\n            usd:null\n        } ;\n        self.setState({balance:clearBalance}, () => {\n            if (self.state.account && self.state.network.ready) {\n            let address = self.state.account.address;\n            window.BACKGROUND.network.getBalance(address, (result) => {\n                let balanceWika = convertToWika(result.data.free) ;\n                let balanceUsd = wikaToUsd(balanceWika) ;\n                self.setState({\n                    balance:{\n                        wika:balanceWika,\n                        usd:balanceUsd\n                    }\n                });\n            }).then((s) => {\n                self.unsubGetBalance = s ;\n            });\n        }\n        }) ;\n    }\n\n    selectAccount = (account) => {\n        console.log('App.selectAccount', account) ;\n        window.BACKGROUND.storage.set('account', account) ;\n        this.setState({account: account}, this.subscribeToBalance) ;\n    }\n\n    navigate = (tab) => {\n        window.BACKGROUND.storage.set('tab', tab) ;\n        this.setState({tab: tab});\n    }\n\n    rejectTransaction = () => {\n        this.signTransactionCallback('rejected') ;\n        window.close() ;\n    }\n\n    confirmTransaction = () => {\n        const txType = this.state.transactionType ;\n        const txParams = this.state.transactionParams ;\n        const account = this.state.account ;\n        this.setState({transactionSent: true}) ;\n        window.BACKGROUND.sendTransaction(txType, txParams, account, (result) => {\n            if (result.status==='In block') {\n                this.signTransactionCallback('confirmed') ;\n                window.close() ;\n            }\n        }) ;\n    }\n\n    componentWillUnmount = () => {\n        this._mounted = false;\n        if (this.unsubGetBalance) {\n            this.unsubGetBalance() ;\n        }\n    }\n\n\n\n\n\n    render() {\n        return (\n            <div className=\"wika-app\">\n                <AppContext.Provider value={{\n                    // Context data\n                    tab: this.state.tab,\n                    network: this.state.network,\n                    account: this.state.account,\n                    balance: this.state.balance,\n                    // Context functions\n                    navigate: this.navigate,\n                    selectAccount: this.selectAccount,\n                    // API Endpoint\n                    apiEndpoint: this.state.api,\n                    // Transaction signing\n                    transactionSent: this.state.transactionSent,\n                    transactionType: this.state.transactionType,\n                    transactionParams: this.state.transactionParams,\n                    rejectTransaction: this.rejectTransaction,\n                    confirmTransaction: this.confirmTransaction\n                }}>\n                    <MainContent />\n                    <Footer />\n                </AppContext.Provider>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","const {ApiPromise, WsProvider} = require('@polkadot/api') ;\n\n\nclass WikaNetwork {\n\n    constructor() {\n        this.type = null ;\n        this.endpoint = null ;\n        this.api = null ;\n    }\n\n    connect = (type, endpoint, callback) => {\n        let self = this ;\n        self.type = null ;\n        self.endpoint = null ;\n        self.api = null ;\n        self.wsProvider = new WsProvider(endpoint) ;\n        return ApiPromise.create({ provider: self.wsProvider })\n            .then((api) => {\n                self.type = type ;\n                self.endpoint = endpoint ;\n                self.api = api ;\n                callback() ;\n            }) ;\n    }\n\n    getReady = () => {\n        return (this.api != null) ;\n    }\n\n    disconnect = (callback) => {\n        return this.api.disconnect().then(callback) ;\n    }\n\n    getBalance = (address, callback) => {\n        return this.api.query.system.account(address, callback) ;\n    }\n\n    getUrl = (url, callback) => {\n        return this.api.query.likes.urls(url, callback) ;\n    }\n\n    getLike = (address, url, callback) => {\n        return this.api.query.likes.likes(address, url, callback) ;\n    }\n\n    getLikePrice = (callback) => {\n        return this.api.query.likes.likePrice(callback) ;\n    }\n\n    getOwnersRequestPrice = (callback) => {\n        return this.api.query.owners.requestPrice(callback) ;\n    }\n\n    getUrlOwner = (url, callback) => {\n        return this.api.query.owners.owners(url, callback) ;\n    }\n\n    getOwnerRequest = (url, callback) => {\n        return this.api.query.owners.requests(url, callback) ;\n    }\n\n    getOwnerResult = (url, callback) => {\n        return this.api.query.owners.results(url, callback) ;\n    }\n\n    getBlockNumber = (callback) => {\n        return this.api.query.system.number(callback) ;\n    }\n\n    getUrlInfo = (address, url, callback) => {\n        Promise.all([this.api.query.likes.urls(url),this.api.query.likes.likes(address, url)])\n            .then((result) => {\n                let ans = {\n                    urlLikes: Number(result[0][0]),\n                    likesSubmittedAt: Number(result[1][0]),\n                    likesSubmittedCount:Number(result[1][1]),\n                    likesSubmittedRemaining:Number(result[1][2])\n                } ;\n                callback(ans) ;\n            }) ;\n    }\n\n    txLike = (url, referrer, numLikes) => {\n        return this.api.tx.likes.like(url, referrer, numLikes) ;\n    }\n\n    txOwnerRequest = (url) => {\n        return this.api.tx.owners.requestUrlCheck(url) ;\n    }\n\n}\n\nexport default WikaNetwork ;","import {Keyring} from '@polkadot/api';\nimport {web3FromSource} from '@polkadot/extension-dapp';\n\n\n// Parse error returned from polkadot API\nfunction parseError(result) {\n    console.log(JSON.stringify(result));\n    if (result.dispatchError) {\n        try {\n            let data = result.dispatchError.asModule;\n            let index = data.index;\n            let error = data.error;\n            return \"Transaction error (\" + index + \",\" + error + \")\";\n        } catch (err) {\n            return \"Transaction error\";\n        }\n    } else {\n        return null;\n    }\n}\n\n\nfunction createTransaction(txType, params) {\n    switch (txType) {\n        case 'like': return window.BACKGROUND.network.txLike(params.url, params.referrer, params.numLikes) ;\n        case 'owner_request': return window.BACKGROUND.network.txOwnerRequest(params.url) ;\n        default: return null ;\n    }\n}\n\nfunction sendTransaction(txType, params, account, callback) {\n    if (window.BACKGROUND.env === 'ext') {\n        sendTransactionInExtension(txType, params, account, callback) ;\n    } else {\n        if (account.mode === 'web3') {\n            sendTransactionUsingWeb3(txType, params, account, callback) ;\n        } else if (account.mode === 'wika') {\n            sendTransactionUsingWika(txType, params, account, callback) ;\n        }\n    }\n}\n\nfunction sendTransactionInExtension(txType, params, account, callback) {\n    let tx = createTransaction(txType, params) ;\n    let t = new Transaction(tx, account, callback) ;\n    t.sendInExtension() ;\n}\n\nfunction sendTransactionUsingWeb3(txType, params, account, callback) {\n    let tx = createTransaction(txType, params) ;\n    let t = new Transaction(tx, account, callback) ;\n    t.sendUsingWeb3() ;\n}\n\nfunction sendTransactionUsingWika(txType, params, account, callback) {\n    window.WIKA_BRIDGE.transaction(txType, params, account, callback);\n}\n\n\n\n// Transaction\nclass Transaction {\n\n    constructor(tx, account, callback) {\n        this.tx = tx ;\n        this.account = account ;\n        this.callback = callback ;\n    }\n\n    txMonitor = (result) => {\n        let status = result.status ;\n        if (status.isInBlock) {\n            this.callback({status:'In block'}) ;\n        } else if (status.isFinalized) {\n            this.unsubTransaction();\n            let result = {status:null} ;\n            let err = parseError(result) ;\n            if (err) {\n                result.error = err ;\n            }\n            this.callback(result) ;\n        }\n    }\n\n    sendInExtension = () => {\n        let address = this.account.address ;\n        let keyring = new Keyring({ type: 'sr25519' });\n        let signer = keyring.addFromUri(this.account.phrase);\n        console.log('sendTransactionLocal', address, signer);\n        let self = this ;\n        self.callback({status:'Sending'}) ;\n        self.tx.signAndSend(signer, self.txMonitor).then((s) => {\n            self.unsubTransaction = s;\n        }).catch((err) => {\n            self.callback({status:null, error:err}) ;\n        }) ;\n    }\n\n    sendUsingWeb3 = () => {\n        let source = this.account.source ;\n        let address = this.account.address ;\n        console.log('sendTransactionWeb3', source, address);\n        let self = this ;\n        web3FromSource(source).then((injector) => {\n            self.callback({status:'Sending'}) ;\n            self.tx.signAndSend(address, {signer: injector.signer}, self.txMonitor).then((s) => {\n                self.unsubTransaction = s;\n            }).catch((err) => {\n                self.callback({status:null, error:err}) ;\n            }) ;\n        });\n    }\n\n}\n\nexport default sendTransaction ;\n","import AES from 'crypto-js/aes';\nimport Utf8 from 'crypto-js/enc-utf8';\nimport { Keyring } from '@polkadot/api';\nimport { mnemonicGenerate } from '@polkadot/util-crypto';\n\n\nfunction bytesToHex(byteArray) {\n  var s = '0x';\n  byteArray.forEach(function (byte) {\n      s += ('0' + (byte & 0xFF).toString(16)).slice(-2);\n  });\n  return s;\n}\n\nfunction encryptWithAES(text, passphrase)  {\n  return AES.encrypt(text, passphrase).toString();\n};\n\nfunction decryptWithAES(ciphertext, passphrase) {\n  const bytes = AES.decrypt(ciphertext, passphrase);\n  const originalText = bytes.toString(Utf8);\n  return originalText;\n};\n\nfunction importAccount(phrase) {\n  let keyring = new Keyring({ type: 'sr25519' });\n  let newPair = keyring.addFromUri(phrase) ;\n  let account = {\n      address: newPair.address,\n      addressRaw: bytesToHex(newPair.addressRaw),\n      phrase: phrase,\n      accountName: '<Account Name>'\n  } ;\n  return account ;\n}\n\nfunction generateAccount() {\n  let phrase = mnemonicGenerate(12);\n  return importAccount(phrase) ;\n}\n\n\nexport {\n    encryptWithAES,\n    decryptWithAES,\n    importAccount,\n    generateAccount\n} ;\n\n\n","\n\n\nclass StorageApp {\n\n  get = (key, callback) => {\n    var item = window.localStorage.getItem(key) ;\n    if (item) {\n        item = JSON.parse(item);\n    }\n    callback(item) ;\n  }\n\n  set = (key, value, callback) => {\n    const item = JSON.stringify(value) ;\n    window.localStorage.setItem(key, item) ;\n    if (callback) {\n        callback() ;\n    }\n  }\n\n}\n\nclass StorageExt {\n\n  get = (key, callback) => {\n    window.chrome.storage.local.get([key], (result) => {\n        callback(result[key]) ;\n    }) ;\n  }\n\n  set = (key, value, callback) => {\n    const data = {} ;\n    data[key] = value ;\n    window.chrome.storage.local.set(data, callback) ;\n  }\n\n}\n\nexport {StorageApp, StorageExt}","\n\nconst POPUP_PARAMS = \"scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,width=500,height=630,left=400,top=100\" ;\n\n\nclass ExtensionPort {\n\n    constructor() {\n        this.registerListener() ;\n    }\n\n    registerListener = () => {\n        let self = this ;\n        window.chrome.runtime.onMessageExternal.addListener(\n          function(request, sender, sendResponse) {\n            const source = sender.documentId ;\n            const message = request.message ;\n            switch (message) {\n                case 'ping': return self.ping(source, request, sendResponse) ;\n                case 'accounts': return self.accounts(source, request, sendResponse) ;\n                case 'transaction': return self.transaction(source, request, sendResponse) ;\n                default: return self.debug(source, request, sendResponse) ;\n            }\n          }\n        );\n    }\n\n    ping = (source, request, sendResponse) => {\n        sendResponse('pong') ;\n    }\n\n    accounts = (source, request, sendResponse) => {\n        window.BACKGROUND.storage.get('accounts', (list) => {\n            var ans = [] ;\n            if (list) {\n                ans = list.map((a) => {\n                    return {address: a.address,\n                            addressRaw: a.addressRaw,\n                            name: a.name} ;\n                })\n            }\n            sendResponse(ans) ;\n        }) ;\n    }\n\n    transaction = (source, request, sendResponse) => {\n        function done(outcome) {\n            if (outcome === 'confirmed') {\n                sendResponse({status:null}) ;\n            } else {\n                sendResponse({status:null, err:'Transaction was not confirmed'}) ;\n            }\n        }\n        const win = window.open(\"index.html\", \"extension_popup\", POPUP_PARAMS) ;\n        var counter = 0 ;\n        function check() {\n            counter++ ;\n            if(win.wikaReactApp && win.wikaReactApp._mounted) {\n                win.wikaReactApp.signTransaction(request.txType,\n                                                 request.params,\n                                                 request.address,\n                                                 done);\n            } else if (counter<250) {\n                setTimeout(check, 10);\n            } else {\n                sendResponse({status:null, err:'Could not open the Wika extension'}) ;\n            }\n        }\n        check() ;\n    }\n\n    debug = (source, request, sendResponse) => {\n        const data = {\n            message: 'debug',\n            source: source,\n            request: request\n        }\n        sendResponse(data) ;\n    }\n\n}\n\n\nexport default ExtensionPort ;","import {web3Enable, web3Accounts} from '@polkadot/extension-dapp';\nimport {u8aToHex} from '@polkadot/util';\nimport {cryptoWaitReady, keccakAsHex, decodeAddress} from '@polkadot/util-crypto';\n\n\nimport {getEnvironment} from './utils.js' ;\nimport WikaNetwork from './network.js' ;\nimport sendTransaction from './transaction.js' ;\nimport {encryptWithAES, decryptWithAES, importAccount, generateAccount} from './crypto.js' ;\nimport {StorageApp, StorageExt} from './storage.js' ;\nimport ExtensionPort from './extension_port.js' ;\n\n\nconsole.log('EXECUTING BACKGROUND SCRIPT') ;\n\n\n// Pointers to background functions\nwindow.BACKGROUND = {\n    cryptoReady: false,\n    web3Wallets: null,\n    network: new WikaNetwork(),\n    encryptWithAES: encryptWithAES,\n    decryptWithAES: decryptWithAES,\n    importAccount: importAccount,\n    generateAccount: generateAccount,\n    web3Enable: web3Enable,\n    web3Accounts: web3Accounts,\n    u8aToHex: u8aToHex,\n    decodeAddress: decodeAddress,\n    keccakAsHex: keccakAsHex,\n    sendTransaction: sendTransaction\n}\n\n// Environment 'app' vs 'ext'\nconst env = getEnvironment() ;\nwindow.BACKGROUND.env = env ;\nconsole.log('Detected env = '+env) ;\n\n// Storage implementation\nwindow.BACKGROUND.storage = (env==='app')?new StorageApp():new StorageExt() ;\n\n// Crypto and network initialization, must be called before starting the app\nwindow.BACKGROUND.initialize = (networkType, networkUrl, callback) => {\n    cryptoWaitReady().then(() => {\n        window.BACKGROUND.cryptoReady = true;\n        window.BACKGROUND.network.connect(networkType, networkUrl, () => {\n            window.BACKGROUND.web3Enable(\"Wika Network\").then((result) => {\n                window.BACKGROUND.web3Wallets = result ;\n                callback() ;\n            });\n        }) ;\n    }) ;\n}\n\n// One time initialization if we are in extension\nif (env === 'ext') {\n    const defaultNetworkType = \"Wika Testnet\" ;\n    const defaultNetworkUrl = \"wss://testnode3.wika.network:443\" ;\n    window.BACKGROUND.initialize(defaultNetworkType, defaultNetworkUrl, () => {\n        console.log('BACKGROUND init done.')\n    }) ;\n}\n\n// Instantiate Extension bridge\nif (env === 'ext') {\n    window.BACKGROUND.port = new ExtensionPort() ;\n}\n\n","function getEnvironment() {\n    const url = window.location.href\n    const env = (url.split(':')[0] === 'chrome-extension') ? 'ext' : 'app'\n    return env ;\n}\n\nexport {\n    getEnvironment\n} ;","const wikaExtensionId = \"ggmlfkkonbpgadcefifckbldnkfjajae\";\n\nclass WikaBridge {\n\n    sendMessage = (message, callback) => {\n        try {\n            window.chrome.runtime.sendMessage(wikaExtensionId, message, (response, error) => {\n                if (window.chrome.runtime.lastError) {\n                    console.log('WikaBridge Error: '+JSON.stringify(window.chrome.runtime.lastError)) ;\n                    callback(null) ;\n                } else if (response) {\n                    console.log('WikaBridge response', response) ;\n                    callback(response) ;\n                } else {\n                    console.log('WikaBridge response empty') ;\n                    callback(null) ;\n                }\n            });\n        } catch (e) {\n            callback(null) ;\n        }\n    }\n\n    ping = (callback) => {\n        this.sendMessage({message:'ping'}, callback) ;\n    }\n\n    accounts = (callback) => {\n        this.sendMessage({message:'accounts'}, callback) ;\n    }\n\n    transaction = (txType, params, account, callback) => {\n        const message = {\n            message:'transaction',\n            txType: txType,\n            params: params,\n            address: account['address']\n        } ;\n        callback({status:'Confirming'}) ;\n        this.sendMessage(message, callback) ;\n    }\n\n}\n\nexport default WikaBridge ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './commons/components/App';\nimport './commons/css/wika.css';\nimport './commons/css/awesome.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport './background/background.js';\nimport WikaBridge from './wika_bridge';\n\n\nwindow.WIKA_BRIDGE = new WikaBridge() ;\n\nconst defaultNetworkType = \"Wika Testnet\" ;\nconst defaultNetworkUrl = \"wss://testnode3.wika.network:443\" ;\nwindow.BACKGROUND.initialize(defaultNetworkType, defaultNetworkUrl, () => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App ref={(x) => {window.wikaReactApp = x;}}/>\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n}) ;\n\n\n\n\n"],"sourceRoot":""}