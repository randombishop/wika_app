{"version":3,"sources":["utils/misc.js","utils/network.js","utils/context.js","components/NetworkButton.jsx","components/AccountButton.jsx","components/NavBar.jsx","components/Splash.jsx","components/like/Like1.jsx","components/like/Like2.jsx","components/like/Like.jsx","components/recommend/Recommend.jsx","components/wallet/Wallet.jsx","components/account/AccountConnectEnablingWeb3.jsx","components/account/AccountConnectSelect.jsx","components/account/Account.jsx","components/account/AccountConnect.jsx","components/like/LikedPages.jsx","components/authors/ClaimPage.jsx","components/debug/Keccak.jsx","components/debug/Wip.jsx","components/MainContent.jsx","App.jsx","index.js"],"names":["copyToClipboard","inputId","document","getElementById","select","execCommand","convertToWika","value","formatWika","toFixed","formatUsd","bytesToString","array","out","i","len","c","char2","char3","length","String","fromCharCode","parseError","result","console","log","JSON","stringify","dispatchError","data","asModule","index","error","err","WikaNetwork","endpoint","connect","callback","self","wsProvider","WsProvider","ApiPromise","create","provider","then","api","disconnect","getBalance","address","query","system","account","getUrl","url","likes","urls","getLike","getLikePrice","likePrice","getOwnersRequestPrice","owners","requestPrice","getUrlOwner","getOwnerRequest","requests","getOwnerResult","results","getBlockNumber","number","getUrlInfo","Promise","all","ans","urlLikes","Number","likesSubmittedAt","likesSubmittedCount","likesSubmittedRemaining","txLike","injector","referrer","numLikes","tx","like","signAndSend","signer","txOwnerRequest","requestUrlCheck","txLikeExt","source","memory","monitor","status","isInBlock","isFinalized","unsubTransaction","web3FromSource","s","catch","setState","txStatus","this","AppContext","React","createContext","NetworkButton","buttonStyle","height","paddingTop","paddingBottom","lineHeight","context","network","style","color","className","fontSize","type","renderStatus","Component","contextType","AccountButton","onClick","navigate","display","marginRight","size","marginBottom","name","balance","wika","renderConnected","renderDisconnected","NavBar","props","styleMenu","position","top","left","backgroundColor","padding","borderRadius","opacity","toggleMenu","toggle","state","menuOpened","tab","renderMenu","href","buttonClass","Fragment","src","alt","renderAccountOnly","Splash","layoutStyle","gridAutoColumns","gridAutoFlow","columnStyle","textAlign","imageStyle","width","Like1","handleNumLikeChange","event","target","update","submitLike","wikaNetwork","monitorLike","alert","renderButton","disabled","render","marginTop","min","max","onChange","marginLeft","readOnly","Like2","rewardWaitFactor","Like","price","handleUrlChange","lookupUrl","subscribeToUrl","subscribeToLike","lookedUp","clearUrl","unsubscribe","unsubUrl","unsubLike","componentWillUnmount","renderPart1","renderPart2","rewardPrct","rewardTarget","Recommend","Wallet","AccountConnectEnablingWeb3","componentDidMount","enableWeb3","wallets","web3Enable","renderSwitch","renderWait","renderNone","renderOk","role","renderWalletsTable","next","renderWalletsRows","wallet","push","version","AccountConnectSelect","styleItem","margin","styleBox1","flex","styleBox2","styleBox3","alignItems","getAccounts","accounts","web3Accounts","selectAccount","meta","addressU8","decodeAddress","addressRaw","u8aToHex","renderListAccounts","Account","styleInputBox","copyElement","element","usd","id","AccountConnect","web3Enabled","LikedPages","apiEndpoint","ClaimPage","DEFAULT_ACCOUNT","NUM_BLOCKS_TO_WAIT","styleTextArea","fontFamily","styleButton","subscribeToBlockNumber","unsubBlockNumber","currentBlock","subscribeToUrlOwner","subscribeToOwnerRequest","subscribeToOwnerResult","unsubUrlOwner","owner","unsubOwnerRequest","requestBlock","requestAccount","unsubOwnerResult","resultBlock","resultNumVotes","resultNumVotesYes","resultNumVotesMajority","resultIntro","resultMark","resultOutcome","unsubscribeUrl","submitRequest","monitorRequest","testUrl","copyMark","defaultValue","formatOwner","renderPart3","paddingRight","paddingLeft","renderTestResult","testResult","renderPart4","currentRequester","renderSubmitRequest","renderMyRequest","renderOtherRequest","renderMyRequestProgress","blocks_done","renderMyRequestResult","icon","Keccak","updateText","text","generateHash","hash","keccakAsHex","copy","Wip","MainContent","App","loadCrypto","cryptoState","crypto","cryptoWaitReady","connectNetwork","networkState","subscribeToBalance","unsubGetBalance","balanceWika","free","balanceUsd","Provider","ReactDOM","StrictMode","ref","x","window","wikaReactApp"],"mappings":"0TAIA,SAASA,EAAgBC,GACNC,SAASC,eAAeF,GAC9BG,SACTF,SAASG,YAAY,QAGzB,SAASC,EAAcC,GACnB,OAAOA,EAXU,KAcrB,SAASC,EAAWD,GAChB,OAAa,MAATA,EACOA,EAAME,QAAQ,GAAK,KAEnB,IAYf,SAASC,EAAUH,GACf,OAAa,MAATA,EACOA,EAAME,QAAQ,GAAK,OAEnB,IA4Bf,SAASE,EAAcC,GACnB,GAAW,MAAPA,EAAa,OAAO,KACxB,IAAIC,EAAKC,EAAGC,EAAKC,EACbC,EAAOC,EAKX,IAHAL,EAAM,GACNE,EAAMH,EAAMO,OACZL,EAAI,EACGA,EAAIC,GAEP,QADAC,EAAIJ,EAAME,OACG,GACT,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EAEDD,GAAOO,OAAOC,aAAaL,GAC3B,MACJ,KAAK,GACL,KAAK,GAEDC,EAAQL,EAAME,KACdD,GAAOO,OAAOC,cAAmB,GAAJL,IAAa,EAAc,GAARC,GAChD,MACJ,KAAK,GAEDA,EAAQL,EAAME,KACdI,EAAQN,EAAME,KACdD,GAAOO,OAAOC,cAAmB,GAAJL,IAAa,IAC5B,GAARC,IAAiB,GACT,GAARC,IAAiB,GAMnC,OAAOL,EAGX,SAASS,EAAWC,GAEhB,GADAC,QAAQC,IAAIC,KAAKC,UAAUJ,KACvBA,EAAOK,cAUP,OAAO,KATP,IACI,IAAIC,EAAON,EAAOK,cAAcE,SAGhC,MAAO,sBAFKD,EAAKE,MAEsB,IAD3BF,EAAKG,MACoC,IACvD,MAAOC,GACL,MAAO,qB,ICOJC,E,aAlHX,WAAYC,GAAW,IAAD,gCAKtBC,QAAU,SAACC,GACP,IAAIC,EAAO,EAEX,OADAA,EAAKC,WAAa,IAAIC,IAAWF,EAAKH,UAC/BM,IAAWC,OAAO,CAAEC,SAAUL,EAAKC,aACrCK,MAAK,SAACC,GACHP,EAAKO,IAAMA,EACXR,QAXU,KAetBS,WAAa,SAACT,GACV,OAAO,EAAKQ,IAAIC,aAAaF,KAAKP,IAhBhB,KAmBtBU,WAAa,SAACC,EAASX,GACnB,OAAO,EAAKQ,IAAII,MAAMC,OAAOC,QAAQH,EAASX,IApB5B,KAuBtBe,OAAS,SAACC,EAAKhB,GACX,OAAO,EAAKQ,IAAII,MAAMK,MAAMC,KAAKF,EAAKhB,IAxBpB,KA2BtBmB,QAAU,SAACR,EAASK,EAAKhB,GACrB,OAAO,EAAKQ,IAAII,MAAMK,MAAMA,MAAMN,EAASK,EAAKhB,IA5B9B,KA+BtBoB,aAAe,SAACpB,GACZ,OAAO,EAAKQ,IAAII,MAAMK,MAAMI,UAAUrB,IAhCpB,KAmCtBsB,sBAAwB,SAACtB,GACrB,OAAO,EAAKQ,IAAII,MAAMW,OAAOC,aAAaxB,IApCxB,KAuCtByB,YAAc,SAACT,EAAKhB,GAChB,OAAO,EAAKQ,IAAII,MAAMW,OAAOA,OAAOP,EAAKhB,IAxCvB,KA2CtB0B,gBAAkB,SAACV,EAAKhB,GACpB,OAAO,EAAKQ,IAAII,MAAMW,OAAOI,SAASX,EAAKhB,IA5CzB,KA+CtB4B,eAAiB,SAACZ,EAAKhB,GACnB,OAAO,EAAKQ,IAAII,MAAMW,OAAOM,QAAQb,EAAKhB,IAhDxB,KAmDtB8B,eAAiB,SAAC9B,GACd,OAAO,EAAKQ,IAAII,MAAMC,OAAOkB,OAAO/B,IApDlB,KAuDtBgC,WAAa,SAACrB,EAASK,EAAKhB,GACxBiC,QAAQC,IAAI,CAAC,EAAK1B,IAAII,MAAMK,MAAMC,KAAKF,GAAK,EAAKR,IAAII,MAAMK,MAAMA,MAAMN,EAASK,KAC3ET,MAAK,SAACrB,GACH,IAAIiD,EAAM,CACNC,SAAUC,OAAOnD,EAAO,GAAG,IAC3BoD,iBAAkBD,OAAOnD,EAAO,GAAG,IACnCqD,oBAAoBF,OAAOnD,EAAO,GAAG,IACrCsD,wBAAwBH,OAAOnD,EAAO,GAAG,KAE7Cc,EAASmC,OAhEC,KAuEtBM,OAAS,SAAC9B,EAAS+B,EAAU1B,EAAK2B,EAAUC,EAAU5C,GAElD,OADS,EAAKQ,IAAIqC,GAAG5B,MAAM6B,KAAK9B,EAAK2B,EAAUC,GACrCG,YAAYpC,EAAS,CAACqC,OAAQN,EAASM,QAAShD,IAzExC,KA4EtBiD,eAAiB,SAACtC,EAAS+B,EAAU1B,EAAKhB,GAEtC,OADS,EAAKQ,IAAIqC,GAAGtB,OAAO2B,gBAAgBlC,GAClC+B,YAAYpC,EAAS,CAACqC,OAAQN,EAASM,QAAShD,IA9ExC,KAiFtBmD,UAAY,SAACC,EAAQzC,EAASK,EAAK2B,EAAUC,EAAU5C,GACnDb,QAAQC,IAAIgE,EAAQzC,EAASK,EAAK2B,EAAUC,GAC5C,IAAI3C,EAAO,EACPoD,EAAS,GACTC,EAAU,SAACpE,GACX,IAAIqE,EAASrE,EAAOqE,OACpB,GAAIA,EAAOC,UACPxD,EAAS,CAACuD,OAAO,kBACd,GAAIA,EAAOE,YAAa,CAC3BJ,EAAOK,mBACP,IAAI9D,EAAMX,EAAWC,GAEjBc,EADAJ,EACS,CAAC2D,OAAO,QAAS3D,IAAKA,GAEtB,CAAC2D,OAAO,WAI7BI,YAAeP,GAAQ7C,MAAK,SAACmC,GACzB1C,EAAS,CAACuD,OAAO,YACjBtD,EAAKwC,OAAO9B,EAAS+B,EAAU1B,EAAK2B,EAAUC,EAAUU,GAAS/C,MAAK,SAACqD,GACnEP,EAAOK,iBAAmBE,KAC3BC,OAAM,SAACjE,GACNK,EAAK6D,SAAS,CAACC,SAAU,OACzB/D,EAAS,CAACuD,OAAO,QAAS3D,IAAKA,WAxGvCoE,KAAKlE,SAAWA,EAChBkE,KAAKxD,IAAM,QCLJyD,EAFIC,IAAMC,gB,OCInBC,E,4MAIFC,YAAc,CACVC,OAAQ,OACRC,WAAY,MACZC,cAAe,MACfC,WAAY,U,kDAGhB,WACI,OAAQT,KAAKU,QAAQC,QAAQpB,QACzB,IAAK,YAAa,OAAO,mBAAGqB,MAAO,CAACC,MAAM,SAAUC,UAAU,iBAC9D,IAAK,eAAgB,OAAO,mBAAGF,MAAO,CAACC,MAAM,OAAQC,UAAU,iBAC/D,IAAK,aAAc,OAAO,mBAAGF,MAAO,CAACC,MAAM,UAAWC,UAAU,mBAChE,QAAS,MAAO,M,oBAIxB,WACI,OACI,yBAAQA,UAAU,oBAAoBF,MAAOZ,KAAKK,YAAlD,UACI,uBAAMO,MAAO,CAACG,SAAS,QAAvB,UACI,mBAAGD,UAAU,yBADjB,WAGKd,KAAKU,QAAQC,QAAQK,KAH1B,WAKKhB,KAAKiB,kBAEV,uBACA,sBAAML,MAAO,CAACG,SAAS,QAAvB,SACKf,KAAKU,QAAQC,QAAQ3D,a,GAhCdkD,IAAMgB,WAA5Bd,EAEKe,YAAclB,EAuCVG,Q,QCtCTgB,E,4MAIFf,YAAc,CACVC,OAAQ,OACRC,WAAY,MACZC,cAAe,MACfC,WAAY,U,wDAGhB,WAAsB,IAAD,OACjB,OACI,yBAAQK,UAAU,oBAAoBF,MAAOZ,KAAKK,YAAagB,QAAS,kBAAM,EAAKX,QAAQY,SAAS,YAApG,UACI,uBAAMV,MAAO,CAACG,SAAS,QAAvB,UACI,mBAAGD,UAAU,uBADjB,8BAKA,uBACA,sBAAMF,MAAO,CAACG,SAAS,QAAvB,+C,6BAOZ,WAAmB,IAAD,OACd,OACI,wBAAQD,UAAU,oBAAoBF,MAAOZ,KAAKK,YAAagB,QAAS,kBAAM,EAAKX,QAAQY,SAAS,YAApG,SACI,sBAAKV,MAAO,CAACW,QAAQ,QAArB,UACI,qBAAKX,MAAO,CAACY,YAAY,QAAzB,SACI,cAAC,IAAD,CAAWC,KAAM,GAAIvH,MAAO8F,KAAKU,QAAQ5D,QAAQH,YAErD,sBAAKiE,MAAO,CAACG,SAAS,QAAtB,UACI,qBAAKH,MAAO,CAACc,aAAa,OAA1B,SAAmC1B,KAAKU,QAAQ5D,QAAQ6E,OACxD,8BAAMxH,EAAW6F,KAAKU,QAAQkB,QAAQC,kB,oBAO1D,WACI,OAAI7B,KAAKU,QAAQ5D,QACNkD,KAAK8B,kBAEL9B,KAAK+B,yB,GA/CI7B,IAAMgB,WAA5BE,EAEKD,YAAclB,EAoDVmB,QCpDTY,E,kDAcF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAXVC,UAAY,CACRC,SAAU,WACVC,IAAK,OACLC,KAAM,QACNC,gBAAiB,YACjBC,QAAS,OACTC,aAAc,OACdC,QAAS,OAGM,EAKnBC,WAAa,WACT,IAAIC,GAAU,EAAKC,MAAMC,WACzB,EAAK/C,SAAS,CAAC+C,WAAWF,KAPX,EAUnBrB,SAAW,SAACwB,GACR,EAAKhD,SAAS,CAAC+C,YAAW,IAC1B,EAAKnC,QAAQY,SAASwB,IAZP,EAenBC,WAAa,WACT,OAAI,EAAKH,MAAMC,WAEP,uBAAOjC,MAAO,EAAKsB,UAAnB,SACI,8BACI,+BACI,6BAAI,mBAAGc,KAAK,KAAK3B,QAAS,kBAAM,EAAKC,SAAS,YAA1C,uBACJ,6BAAI,mBAAG0B,KAAK,KAAK3B,QAAS,kBAAM,EAAKC,SAAS,gBAA1C,2BACJ,6BAAI,mBAAG0B,KAAK,KAAK3B,QAAS,kBAAM,EAAKC,SAAS,gBAA1C,2BACJ,6BAAI,mBAAG0B,KAAK,KAAK3B,QAAS,kBAAM,EAAKC,SAAS,eAA1C,oCACJ,6BAAI,mBAAG0B,KAAK,KAAK3B,QAAS,kBAAM,EAAKC,SAAS,WAA1C,0BACJ,6BAAI,mBAAG0B,KAAK,KAAK3B,QAAS,kBAAM,EAAKC,SAAS,gBAA1C,2BACJ,6BAAI,mBAAG0B,KAAK,KAAK3B,QAAS,kBAAM,EAAKC,SAAS,UAA1C,4BAMb,IAjCI,EAqCnB2B,YAAc,SAACH,GACX,OAAI,EAAKpC,QAAQoC,MAAQA,EACd,WAEA,aAvCX,EAAKF,MAAQ,CAACC,YAAY,GAFX,E,qDA6CnB,WAAqB,IAAD,OAChB,OAAI7C,KAAKU,QAAQ5D,QAET,eAAC,IAAMoG,SAAP,WACI,6BAAI,mBAAGF,KAAK,KAAKlC,UAAWd,KAAKiD,YAAY,QAAS5B,QAAS,kBAAM,EAAKC,SAAS,SAA/E,oBACJ,6BAAI,mBAAG0B,KAAK,KAAKlC,UAAWd,KAAKiD,YAAY,aAAc5B,QAAS,kBAAM,EAAKC,SAAS,cAApF,2BACJ,6BAAI,mBAAG0B,KAAK,KAAKlC,UAAWd,KAAKiD,YAAY,UAAW5B,QAAS,kBAAM,EAAKC,SAAS,WAAjF,sBACJ,6BAAI,mBAAG0B,KAAK,KAAKlC,UAAWd,KAAKiD,YAAY,QAAS5B,QAASrB,KAAK0C,WAAhE,SAA4E,mBAAG5B,UAAU,oBAC5Fd,KAAK+C,gBAIP,K,oBAIf,WAAU,IAAD,OACL,OACI,gCACI,+BACI,6BACI,oBAAGC,KAAK,KAAKlC,UAAWd,KAAKiD,YAAY,UAAW5B,QAAS,kBAAM,EAAKX,QAAQY,SAAS,WAAzF,UACI,qBAAK6B,IAAI,oBAAoBC,IAAI,KADrC,8CAOHpD,KAAKqD,uBAEV,+BACI,6BAAI,cAAC,EAAD,MACJ,6BAAI,cAAC,EAAD,gB,GA3FHnD,IAAMgB,WAArBc,EAEKb,YAAclB,EAkGV+B,QCzGTsB,E,4MAIFC,YAAc,CAAChC,QAAS,OAAQiC,gBAAiB,MAAOC,aAAc,U,EAEtEC,YAAc,CAACnB,QAAS,OAAQxB,SAAU,OAAQ4C,UAAW,U,EAE7DC,WAAa,CAACC,MAAO,QAASvD,OAAQ,Q,4CAEtC,WAAU,IAAD,OACL,OACI,sBAAKQ,UAAU,eAAeF,MAAO,CAAC+C,UAAW,UAAjD,UACI,8DACA,sBAAK/C,MAAOZ,KAAKuD,YAAjB,UACI,sBAAK3C,MAAOZ,KAAK0D,YAAjB,UACI,wEACA,qBAAKP,IAAI,qBAAqBC,IAAI,GAAGxC,MAAOZ,KAAK4D,aAFrD,IAEoE,uBAAK,uBAFzE,0EAKA,sBAAKhD,MAAOZ,KAAK0D,YAAjB,UACI,iEACA,qBAAKP,IAAI,qBAAqBC,IAAI,GAAGxC,MAAOZ,KAAK4D,aAFrD,IAEoE,uBAAK,uBAFzE,gMAOA,sBAAKhD,MAAOZ,KAAK0D,YAAjB,UACI,+DACA,qBAAKP,IAAI,qBAAqBC,IAAI,GAAGxC,MAAOZ,KAAK4D,aAFrD,IAEoE,uBAAK,uBAFzE,8NAQJ,uBACA,8GACuB,MAAtB5D,KAAKU,QAAQ5D,QACV,wBAAQgE,UAAU,UAAUO,QAAS,kBAAM,EAAKX,QAAQY,SAAS,YAAjE,+DAGF,U,GAzCGpB,IAAMgB,WAArBoC,EAEKnC,YAAclB,EA+CVqD,QC/CTQ,E,kDAIF,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IAMV8B,oBAAsB,SAACC,GACnB,EAAKlE,SAAS,CAAClB,SAAUoF,EAAMC,OAAO/J,OAAQ,EAAKgK,SARpC,EAWnBC,WAAa,WACT,IAAIlI,EAAI,eACJe,EAAMf,EAAKgG,MAAMjF,IACjB2B,EAAW1C,EAAK2G,MAAMjE,SACtBC,EAAW3C,EAAK2G,MAAMhE,SACtBQ,EAASnD,EAAKyE,QAAQ5D,QAAQsC,OAC9BzC,EAAUV,EAAKyE,QAAQ5D,QAAQH,QACnCgD,YAAeP,GAAQ7C,MAAK,SAACmC,GACzBzC,EAAK6D,SAAS,CAACC,SAAU,eAAe,WACpC9D,EAAKyE,QAAQ0D,YAAY3F,OAAO9B,EAAS+B,EAAU1B,EAAK2B,EAAUC,EAAU3C,EAAKoI,aAAa9H,MAAK,SAACqD,GAChG3D,EAAKyD,iBAAmBE,KACzBC,OAAM,SAACjE,GACNK,EAAK6D,SAAS,CAACC,SAAU,OACzBuE,MAAM1I,aAxBH,EA8BnByI,YAAc,SAACnJ,GACX,IAAIqE,EAASrE,EAAOqE,OACpB,GAAIA,EAAOC,UACP,EAAKM,SAAS,CAACC,SAAU,qBACtB,GAAIR,EAAOE,YAAa,CAC3B,EAAKK,SAAS,CAACC,SAAU,OACzB,EAAKL,mBACL,IAAI9D,EAAMX,EAAWC,GACjBU,GACA0I,MAAM1I,KAvCC,EA4CnB2I,aAAe,WACX,OAAyB,MAArB,EAAK3B,MAAM7C,SAEP,yBAAQsB,QAAS,EAAK8C,WAAtB,kBACU,EAAKvB,MAAMhE,SADrB,IAC+B,mBAAGkC,UAAU,wBAK5C,yBAAQ0D,UAAQ,EAAhB,UACI,mBAAG1D,UAAU,mBADjB,IACwC,EAAK8B,MAAM7C,aAtD5C,EA4DnB0E,OAAS,WACL,OACI,eAAC,IAAMvB,SAAP,WAEI,oDACuB,mCAAS,EAAKjB,MAAM7D,SAApB,YADvB,OAIA,uBAEA,0DAEA,yEACA,uBAAO4C,KAAK,SAEZ,8DACA,sBAAKJ,MAAO,CAACW,QAAQ,QAArB,UACI,qBAAKX,MAAO,CAAC8D,UAAU,QAAvB,SACI,uBAAO9D,MAAO,CAACiD,MAAM,SACd7C,KAAK,QAAQ2D,IAAI,IAAIC,IAAI,MACzB1K,MAAO,EAAK0I,MAAMhE,SAClBiG,SAAU,EAAKd,wBAE1B,qBAAKnD,MAAO,CAAC8D,UAAU,OAAQI,WAAW,QAA1C,SACI,mCAAS,EAAKlC,MAAMhE,SAApB,IAA8B,mBAAGkC,UAAU,6BAInD,8DACA,uBAAOF,MAAO,CAAC+C,UAAU,SAClB3C,KAAK,OACL+D,UAAQ,EACR7K,MAAOC,EAAW,EAAK8H,MAAM5E,UAAU,EAAKuF,MAAMhE,YAGxD,EAAK2F,mBA7Fd,EAAK3B,MAAQ,CACThE,SAAU,GAHC,E,uBAJHsB,IAAMgB,WAApB4C,EAEK3C,YAAclB,EA0GV6D,QCjHTkB,E,4MAGFP,OAAS,WACL,OACI,eAAC,IAAMvB,SAAP,WACI,oDACuB,mCAAS,EAAKjB,MAAM7D,SAApB,YADvB,OAGA,6CACgB,mCAAS,EAAK6D,MAAM1D,oBAApB,YADhB,OAGA,gDACmB,uCAAU,EAAK0D,MAAM3D,iBAAiB,KADzD,yGAE+D,EAAK2D,MAAM3D,iBAAiB,EAAK2D,MAAMgD,iBAAkB,EAFxH,iB,yBAZI/E,IAAMgB,WAsBX8D,ICbTE,E,kDAIF,WAAYjD,GAAQ,IAAD,8BACf,cAAMA,IAoBV7E,aAAe,WACX,IAAInB,EAAI,eACRA,EAAKyE,QAAQ0D,YAAYhH,cAAa,SAAClC,GACnC,IAAIiK,EAAQlL,EAAciB,GAC1Be,EAAK6D,SAAS,CAACzC,UAAU8H,OAC1BtF,OAAM,SAACjE,GACN0I,MAAM1I,OA3BK,EA+BnBwJ,gBAAkB,SAACpB,GACf,EAAKlE,SAAS,CAAC9C,IAAKgH,EAAMC,OAAO/J,SAhClB,EAmCnBmL,UAAY,WACR,EAAKC,iBACL,EAAKC,kBACL,EAAKzF,SAAS,CAAC0F,UAAS,KAtCT,EAyCnBC,SAAW,WACP,EAAKC,cACL,EAAK5F,SAAS,CACV0F,UAAS,EACTxI,IAAI,GACJuB,oBAAoB,QA9CT,EAkDnB+G,eAAiB,WACb,IAAIrJ,EAAI,eACJA,EAAK0J,WACL1J,EAAK0J,WACL1J,EAAK0J,SAAW,MAEpB,IAAI3I,EAAM,EAAK4F,MAAM5F,IACrBf,EAAKyE,QAAQ0D,YAAYrH,OAAOC,GAAK,SAAC9B,GAClC,IAAIkD,EAAWC,OAAOnD,EAAO,IAC7Be,EAAK6D,SAAS,CAAC1B,SAASA,OACzB7B,MAAK,SAACqD,GACL3D,EAAK0J,SAAW/F,KACjBC,OAAM,SAACjE,GACN0I,MAAM1I,OA/DK,EAmEnB2J,gBAAkB,WACd,IAAItJ,EAAI,eACJA,EAAK2J,YACL3J,EAAK2J,YACL3J,EAAK2J,UAAY,MAErB,IAAIjJ,EAAU,EAAK+D,QAAQ5D,QAAQH,QAC/BK,EAAM,EAAK4F,MAAM5F,IACrBf,EAAKyE,QAAQ0D,YAAYjH,QAAQR,EAASK,GAAK,SAAC9B,GAC5Ce,EAAK6D,SAAS,CACVxB,iBAAiBD,OAAOnD,EAAO,IAC/BqD,oBAAoBF,OAAOnD,EAAO,IAClCsD,wBAAwBH,OAAOnD,EAAO,SAE3CqB,MAAK,SAACqD,GACL3D,EAAK2J,UAAYhG,KAClBC,OAAM,SAACjE,GACN0I,MAAM1I,OApFK,EAwFnBiK,qBAAuB,WACnB,EAAKH,eAzFU,EA4FnBA,YAAc,WACN,EAAKC,UACL,EAAKA,WAEL,EAAKC,WACL,EAAKA,aAjGM,EAqGnBE,YAAc,WACV,OACI,eAAC,IAAM5C,SAAP,WACI,wCACA,uBAAOlC,KAAK,OACL9G,MAAO,EAAK0I,MAAM5F,IAClB6H,SAAU,EAAKO,gBACfZ,SAAU,EAAK5B,MAAM4C,WAE3B,EAAK5C,MAAM4C,SACZ,wBAAQnE,QAAS,EAAKoE,SAAU3E,UAAU,WAA1C,mBACC,wBAAQO,QAAS,EAAKgE,UAAtB,mCAhHM,EAqHnBU,YAAc,WACV,GAAI,EAAKnD,MAAM4C,UAA4C,MAAhC,EAAK5C,MAAMrE,oBAClC,OAAI,EAAKqE,MAAMrE,oBAAoB,EACxB,cAAC,EAAD,CACHH,SAAU,EAAKwE,MAAMxE,SACrBG,oBAAqB,EAAKqE,MAAMrE,oBAChCD,iBAAkB,EAAKsE,MAAMtE,iBAC7B2G,iBAAkB,EAAKrC,MAAMqC,mBAG1B,cAAC,EAAD,CACHjI,IAAK,EAAK4F,MAAM5F,IAChBoB,SAAU,EAAKwE,MAAMxE,SACrBf,UAAW,EAAKuF,MAAMvF,aAlInB,EAwInBoH,OAAS,WACL,OACI,sBAAK3D,UAAU,eAAf,UACI,sCACC,EAAKgF,cACN,uBACC,EAAKC,kBA5Id,EAAKnD,MAAQ,CACT4C,UAAS,EACTxI,IAAK,GACL2B,SAAU,KACVtB,UAAW,KACX2I,WAAY,MACZC,aAAc,KACdhB,iBAAkB,EAClB7G,SAAU,KACVE,iBAAkB,KAClBC,oBAAqB,KACrBC,wBAAyB,MAbd,E,qDAiBnB,WACIwB,KAAK5C,mB,GAtBM8C,IAAMgB,WAAnBgE,EAEK/D,YAAclB,EAuJViF,QClKTgB,E,4JAEF,WACI,OACI,qBAAKpF,UAAU,eAAf,SACI,iD,GALQZ,IAAMgB,WAYfgF,ICZTC,E,4JAEF,WACI,OACI,qBAAKrF,UAAU,eAAf,SACI,8C,GALKZ,IAAMgB,WAYZiF,IC+FAC,E,kDAxGX,WAAYnE,GAAQ,IAAD,8BACf,cAAMA,IAIVoE,kBAAoB,WAChB,EAAKC,cANU,EASnBA,WAAa,WACT,EAAKxG,SAAS,CAACyG,QAAS,OAAO,WAC3BC,YAAW,gBAAgBjK,MAAK,SAACrB,GAC7B,EAAK4E,SAAS,CAACyG,QAASrL,WAZjB,EAiBnBuL,aAAe,WACX,OAA2B,OAAvB,EAAK7D,MAAM2D,QACJ,EAAKG,aACyB,IAA9B,EAAK9D,MAAM2D,QAAQzL,OACnB,EAAK6L,aAEL,EAAKC,YAvBD,EA2BnBF,WAAa,WACT,OACI,8BACI,mBAAG5F,UAAU,mBADjB,4CA7BW,EAoCnB6F,WAAa,WACT,OACI,eAAC,IAAMzD,SAAP,WACI,8BACI,mEACA,uBAFJ,wEAKA,sBAAKtC,MAAO,CAAC+C,UAAW,SAAxB,UACI,mBAAGX,KAAK,KAAK6D,KAAK,SAAS/F,UAAU,YAArC,0CADJ,WAGI,mBAAGkC,KAAK,KAAK6D,KAAK,SAAS/F,UAAU,UAAUO,QAAS,EAAKiF,WAA7D,0BA/CG,EAqDnBM,SAAW,WACP,OACI,eAAC,IAAM1D,SAAP,WACI,gEACC,EAAK4D,qBACN,wBAAQzF,QAAS,EAAKY,MAAM8E,KAA5B,0BA1DO,EA+DnBD,mBAAqB,WACjB,OACG,kCACG,gCACE,+BACE,sCACA,8CAGJ,gCACG,EAAKE,0BAzEC,EA+EnBA,kBAAoB,WAChB,IAAI7I,EAAM,GACV,IAAK,IAAI1D,KAAK,EAAKmI,MAAM2D,QAAS,CAC9B,IAAIU,EAAS,EAAKrE,MAAM2D,QAAQ9L,GAChC0D,EAAI+I,KACA,+BACE,6BAAKD,EAAOtF,OACZ,6BAAKsF,EAAOE,YAFL1M,IAMjB,OAAO0D,GA1FQ,EA6FnBsG,OAAS,WACL,OACI,sBAAK3D,UAAU,eAAf,UACI,2DACC,EAAK2F,mBA/Fd,EAAK7D,MAAQ,CAAC2D,QAAS,MAFR,E,uBAFkBrG,IAAMgB,W,iBCMzCkG,E,kDA4BF,WAAYnF,GAAQ,IAAD,8BACf,cAAMA,IAzBVoF,UAAY,CACR9E,QAAS,EACT+E,OAAQ,QAsBO,EAnBnBC,UAAY,CACRC,KAAM,OACNjF,QAAS,QAiBM,EAdnBkF,UAAY,CACRD,KAAM,OACNjF,QAAS,QAYM,EATnBmF,UAAY,CACRF,KAAM,QACNjG,QAAS,OACTgB,QAAS,OACToB,UAAW,SACXgE,WAAY,SACZ5G,SAAU,QAGK,EAKnBsF,kBAAoB,WAChB,EAAKuB,eANU,EASnBA,YAAc,WACV,EAAK9H,SAAS,CAAC+H,SAAU,KAAK,WAC1BC,cAAevL,MAAK,SAACrB,GACjB,EAAK4E,SAAS,CAAC+H,SAAU3M,WAZlB,EAiBnB6M,cAAgB,SAACjL,GAAD,OAAa,WACzB,IAAIH,EAAUG,EAAQH,QAClBgF,EAAO7E,EAAQkL,KAAKrG,KACpBvC,EAAStC,EAAQkL,KAAK5I,OACtB6I,EAAYC,YAAcvL,GAE1BnB,EAAO,CACPmG,KAAMA,EACNhF,QAASA,EACTwL,WAJaC,YAASH,GAKtB7I,OAAQA,GAEZ,EAAKsB,QAAQqH,cAAcvM,KA7BZ,EAgCnB6M,mBAAqB,WACjB,IAAIlK,EAAM,GACV,IAAK,IAAI1D,KAAK,EAAKmI,MAAMiF,SAAU,CAC/B,IAAI/K,EAAU,EAAK8F,MAAMiF,SAASpN,GAClC0D,EAAI+I,KACA,yBAAiBtG,MAAO,EAAKyG,UAA7B,SACI,sBAAKzG,MAAO,CAACW,QAAQ,QAArB,UACI,qBAAKX,MAAO,EAAK2G,UAAjB,SACI,cAAC,IAAD,CAAWrN,MAAO4C,EAAQH,YAE9B,sBAAKiE,MAAO,EAAK6G,UAAjB,UACI,iCAAS3K,EAAQkL,KAAKrG,OACtB,uBACA,sBAAMf,MAAO,CAACG,SAAS,QAAvB,SAAiCjE,EAAQH,aAE7C,qBAAKiE,MAAO,EAAK8G,UAAjB,SACI,mBAAG1E,KAAK,KAAK3B,QAAS,EAAK0G,cAAcjL,GAAzC,SACI,mBAAGgE,UAAU,0CAZfrG,IAmBtB,OAAO0D,GAxDQ,EA2DnBsG,OAAS,WACL,OACI,sBAAK3D,UAAU,eAAf,UACI,iEACC,EAAKuH,yBA7Dd,EAAKzF,MAAQ,CAACiF,SAAU,IAFT,E,uBA5BY3H,IAAMgB,WAAnCkG,EAEKjG,YAAclB,EAgGVmH,QCpGTkB,E,4MAIFC,cAAgB,CACZxH,SAAU,OACV4C,UAAW,U,EAGf6E,YAAc,SAACC,GAAD,OAAa,WACvB9O,EAAgB8O,K,EAGpBhM,WAAa,WACT,EAAKiE,QAAQqH,cAAc,O,EAG/BtD,OAAS,WACL,OACI,sBAAK3D,UAAU,eAAf,UACI,yCAEA,sBAAKF,MAAO,CAAC+C,UAAU,SAAUjC,aAAa,QAA9C,UACI,cAAC,IAAD,CAAWxH,MAAO,EAAKwG,QAAQ5D,QAAQH,UACvC,uBACA,iCAAS,EAAK+D,QAAQ5D,QAAQ6E,UAGlC,6CACA,sBAAKf,MAAO,CAACW,QAAS,QAAtB,UACI,qBAAKX,MAAO,CAAC4G,KAAM,MAAOhG,YAAa,QAAvC,SACI,uBAAOR,KAAK,OACL9G,MAAOC,EAAW,EAAKuG,QAAQkB,QAAQC,MACvCkD,UAAU,EACVnE,MAAO,CAAC+C,UAAW,aAG9B,qBAAK/C,MAAO,CAAC4G,KAAM,MAAO1C,WAAY,QAAtC,SACI,uBAAO9D,KAAK,OACL9G,MAAOG,EAAU,EAAKqG,QAAQkB,QAAQ8G,KACtC3D,UAAU,EACVnE,MAAO,CAAC+C,UAAW,gBAKlC,gFAGI,mBAAGX,KAAK,KAAK3B,QAAS,EAAKmH,YAAY,2BAAvC,SACI,mBAAG1H,UAAU,qBAGrB,uBAAO6H,GAAG,0BACH3H,KAAK,OACL9G,MAAO,EAAKwG,QAAQ5D,QAAQH,QAC5BoI,UAAU,EACVnE,MAAO,EAAK2H,gBAGnB,8EAGI,mBAAGvF,KAAK,KAAK3B,QAAS,EAAKmH,YAAY,+BAAvC,SACI,mBAAG1H,UAAU,qBAGrB,uBAAO6H,GAAG,8BACH3H,KAAK,OACL9G,MAAO,EAAKwG,QAAQ5D,QAAQqL,WAC5BpD,UAAU,EACVnE,MAAO,EAAK2H,gBAGnB,yBAAQlH,QAAS,EAAK5E,WAAYqE,UAAU,WAA5C,iDAGI,mBAAGA,UAAU,+B,yBA7EXZ,IAAMgB,WAAtBoH,EAEKnH,YAAclB,EAoFVqI,QClFTM,E,kDAIF,WAAY3G,GAAQ,IAAD,8BACf,cAAMA,IAMV4G,YAAc,WACV,EAAK/I,SAAS,CAAC+I,aAAa,KARb,EAWnBpE,OAAS,WACL,OAAI,EAAK/D,QAAQ5D,QACN,cAAC,EAAD,IAEH,EAAK8F,MAAMiG,YACJ,cAAC,EAAD,IAEA,cAAC,EAAD,CAA4B9B,KAAM,EAAK8B,eAhBtD,EAAKjG,MAAQ,CACTiG,aAAa,GAHF,E,uBAJM3I,IAAMgB,WAA7B0H,EAEKzH,YAAclB,EA2BV2I,QCnCTE,E,4JAIF,WACI,OACI,sBAAKhI,UAAU,eAAf,UACI,6CACCzF,KAAKC,UAAU0E,KAAKU,QAAQqI,oB,GARpB7I,IAAMgB,WAAzB4H,EAEK3H,YAAclB,EAaV6I,SCbTE,G,kDAmBF,WAAY/G,GAAQ,IAAD,8BACf,cAAMA,IAhBVgH,gBAAkB,mDAeC,EAbnBC,mBAAqB,GAaF,EAXnBC,cAAgB,CACZC,WAAY,YACZrI,SAAU,OASK,EANnBsI,YAAc,CACV9G,QAAS,EACTb,aAAc,OAIC,EAmBnB2E,kBAAoB,WAChB,EAAK/I,wBACL,EAAKgM,0BArBU,EAwBnBhM,sBAAwB,WACpB,IAAIrB,EAAI,eACRA,EAAKyE,QAAQ0D,YAAY9G,uBAAsB,SAACpC,GAC5C,IAAIiK,EAAQlL,EAAciB,GAC1Be,EAAK6D,SAAS,CAACtC,aAAa2H,OAC7BtF,OAAM,SAACjE,GACN0I,MAAM1I,OA9BK,EAkCnB0N,uBAAyB,WACrB,IAAIrN,EAAI,eACJA,EAAKsN,mBACLtN,EAAKsN,mBACLtN,EAAKsN,iBAAmB,MAE5BtN,EAAKyE,QAAQ0D,YAAYtG,gBAAe,SAAC5C,GACrCe,EAAK6D,SAAS,CACV0J,aAAanL,OAAOnD,QAEzBqB,MAAK,SAACqD,GACL3D,EAAKsN,iBAAmB3J,KACzBC,OAAM,SAACjE,GACN0I,MAAM1I,OA/CK,EAyDnBwJ,gBAAkB,SAACpB,GACf,EAAKlE,SAAS,CAAC9C,IAAKgH,EAAMC,OAAO/J,SA1DlB,EA6DnBmL,UAAY,WACR,EAAKvF,SAAS,CACV0F,UAAU,IAEd,EAAKiE,sBACL,EAAKC,0BACL,EAAKC,0BAnEU,EAsEnBF,oBAAsB,WAClB,IAAIxN,EAAI,eACJA,EAAK2N,gBACL3N,EAAK2N,gBACL3N,EAAK2N,cAAgB,MAEzB,IAAI5M,EAAMf,EAAK2G,MAAM5F,IACrB,EAAK8C,SAAS,CAAC+J,MAAM,OAAO,WACxB5N,EAAKyE,QAAQ0D,YAAY3G,YAAYT,GAAK,SAAC9B,GACvCe,EAAK6D,SAAS,CACV+J,MAAO,GAAK3O,OAEjBqB,MAAK,SAACqD,GACL3D,EAAK2N,cAAgBhK,KACtBC,OAAM,SAACjE,GACN0I,MAAM1I,UArFC,EA0FnB8N,wBAA0B,WACtB,IAAIzN,EAAI,eACJA,EAAK6N,oBACL7N,EAAK6N,oBACL7N,EAAK6N,kBAAoB,MAE7B,IAAI9M,EAAMf,EAAK2G,MAAM5F,IAKrB,EAAK8C,SAJY,CACbiK,aAAc,KACdC,eAAgB,OAEM,WACtB/N,EAAKyE,QAAQ0D,YAAY1G,gBAAgBV,GAAK,SAAC9B,GAC3Ce,EAAK6D,SAAS,CACViK,aAAc1L,OAAOnD,EAAO,IAC5B8O,eAAgB,GAAG9O,EAAO,QAE/BqB,MAAK,SAACqD,GACL3D,EAAK6N,kBAAoBlK,KAC1BC,OAAM,SAACjE,GACN0I,MAAM1I,UA9GC,EAmHnB+N,uBAAyB,WACrB,IAAI1N,EAAI,eACJA,EAAKgO,mBACLhO,EAAKgO,mBACLhO,EAAKgO,iBAAmB,MAE5B,IAAIjN,EAAMf,EAAK2G,MAAM5F,IAUrB,EAAK8C,SATY,CACboK,YAAa,KACbC,eAAgB,KAChBC,kBAAmB,KACnBC,uBAAwB,KACxBC,YAAa,KACbC,WAAY,KACZC,cAAe,OAEO,WACtBvO,EAAKyE,QAAQ0D,YAAYxG,eAAeZ,GAAK,SAAC9B,GAC1C,IAAIM,EAAO,CACP0O,YAAa7L,OAAOnD,EAAO,IAC3BiP,eAAgB9L,OAAOnD,EAAO,IAC9BkP,kBAAmB/L,OAAOnD,EAAO,IACjCmP,uBAAwBhM,OAAOnD,EAAO,IACtCoP,YAAapP,EAAO,GACpBqP,WAAYrP,EAAO,GACnBsP,cAAetP,EAAO,IAE1Be,EAAK6D,SAAStE,MACfe,MAAK,SAACqD,GACL3D,EAAKgO,iBAAmBrK,SAhJjB,EAqJnB6K,eAAiB,WACT,EAAKb,eACL,EAAKA,gBAEL,EAAKE,mBACL,EAAKA,oBAEL,EAAKG,kBACL,EAAKA,oBA7JM,EAiKnBxE,SAAW,WACP,EAAKgF,iBACL,EAAK3K,SAAS,CACV0F,UAAS,EACTxI,IAAI,GACJ6M,MAAO,QAtKI,EA+KnBa,cAAgB,WACZ,IAAIzO,EAAI,eACJe,EAAMf,EAAK2G,MAAM5F,IACjBoC,EAASnD,EAAKyE,QAAQ5D,QAAQsC,OAC9BzC,EAAUV,EAAKyE,QAAQ5D,QAAQH,QACnCgD,YAAeP,GAAQ7C,MAAK,SAACmC,GACzBzC,EAAK6D,SAAS,CAACC,SAAU,eAAe,WACpC9D,EAAKyE,QAAQ0D,YAAYnF,eAAetC,EAAS+B,EAAU1B,EAAKf,EAAK0O,gBAAgBpO,MAAK,SAACqD,GACvF3D,EAAKyD,iBAAmBE,KACzBC,OAAM,SAACjE,GACNK,EAAK6D,SAAS,CAACC,SAAU,OACzBuE,MAAM1I,aA1LH,EAgMnB+O,eAAiB,SAACzP,GACd,IAAIqE,EAASrE,EAAOqE,OACpB,GAAIA,EAAOC,UACP,EAAKM,SAAS,CAACC,SAAU,qBACtB,GAAIR,EAAOE,YAAa,CAC3B,EAAKK,SAAS,CAACC,SAAU,OACzB,EAAKL,mBACL,IAAI9D,EAAMX,EAAWC,GACjBU,GACA0I,MAAM1I,KAzMC,EAkNnBgP,QAAU,aAlNS,EAgOnBC,SAAW,WACPlR,EAAgB,sBAjOD,EAwOnBkM,qBAAuB,WACf,EAAK+D,eACL,EAAKA,gBAEL,EAAKE,mBACL,EAAKA,oBAEL,EAAKG,kBACL,EAAKA,mBAEL,EAAKV,kBACL,EAAKA,oBAnPM,EAiQnBzD,YAAc,WACV,OACI,eAAC,IAAM5C,SAAP,WACI,wCACA,uBAAOlC,KAAK,OACL9G,MAAO,EAAK0I,MAAM5F,IAClB6H,SAAU,EAAKO,gBACfZ,SAAU,EAAK5B,MAAM4C,WAE3B,EAAK5C,MAAM4C,SACZ,wBAAQnE,QAAS,EAAKoE,SAAU3E,UAAU,WAA1C,mBACC,wBAAQO,QAAS,EAAKgE,UAAtB,mCA5QM,EAyRnBU,YAAc,WACV,OAAI,EAAKnD,MAAM4C,UAA8B,MAAlB,EAAK5C,MAAMiH,MAE7B,eAAC,IAAM3G,SAAP,WACI,uBACD,kDACA,uBAAOlC,KAAK,OAAO+D,UAAQ,EAAC+F,aAAc,EAAKC,YAAY,EAAKnI,MAAMiH,YAIvE,IAnSI,EAuSnBkB,YAAc,SAAClB,GACX,OAAIA,IAAQ,EAAKZ,gBACN,IACAY,IAAQ,EAAKnJ,QAAQ5D,QAAQH,QAC7B,qBAEAkN,GA7SI,EAyTnBmB,YAAc,WACV,OAAI,EAAKpI,MAAM4C,UAA8B,MAAlB,EAAK5C,MAAMiH,OAAe,EAAKjH,MAAMiH,QAAQ,EAAKnJ,QAAQ5D,QAAQH,QAEpF,eAAC,IAAMuG,SAAP,WACG,uBACA,gDACA,sBAAKtC,MAAO,CAACW,QAAS,QAAtB,UACI,sBAAKX,MAAO,CAAC4G,KAAM,MAAOyD,aAAc,OAAQtH,UAAW,UAA3D,UACI,wBAAQ/C,MAAO,EAAKyI,YACZvI,UAAU,UACVO,QAAS,EAAKwJ,SAFtB,0BAKA,uBAAOlC,GAAG,oBACH3H,KAAK,OACL+D,UAAQ,EACR+F,aAAc,uBAAyB,EAAKpK,QAAQ5D,QAAQqL,gBAEvE,sBAAKvH,MAAO,CAAC4G,KAAM,MAAO7D,UAAW,UAArC,UACI,wBAAQa,UAAU,EACV5D,MAAO,EAAKyI,YACZvI,UAAU,UAFlB,0BAGA,mFAEJ,sBAAKF,MAAO,CAAC4G,KAAM,MAAO0D,YAAa,OAAQvH,UAAW,UAA1D,UACI,wBAAQa,UAAU,EACV5D,MAAO,EAAKyI,YACZvI,UAAU,UACVO,QAAS,EAAKuJ,QAHtB,wBAMA,gCAAQ,EAAKO,8BAMtB,IA9VI,EAkWnBA,iBAAmB,WACf,OAA2B,MAAvB,EAAKvI,MAAMwI,WACJ,IACwB,IAAxB,EAAKxI,MAAMwI,WACX,MAEA,MAxWI,EAiXnBC,YAAc,WACV,GAAI,EAAKzI,MAAM4C,SAAU,CACrB,IAAI8F,EAAmB,EAAK1I,MAAMoH,eAClC,OAAsB,MAAlBsB,GAA0BA,IAAmB,EAAKrC,gBAC3C,EAAKsC,sBACLD,IAAmB,EAAK5K,QAAQ5D,QAAQH,QACxC,EAAK6O,kBAEL,EAAKC,qBAGhB,MAAO,IA5XI,EAgYnBF,oBAAsB,WAClB,OAAI,EAAK3I,MAAMiH,QAAQ,EAAKnJ,QAAQ/D,QAE5B,eAAC,IAAMuG,SAAP,WAE6B,MAArB,EAAKN,MAAM7C,SACP,wBAAQsB,QAAS,EAAKqJ,cAAe9J,MAAO,CAACc,aAAa,OAA1D,iCAEA,yBAAQ8C,UAAU,EAAM5D,MAAO,CAACc,aAAa,OAA7C,UAAqD,mBAAGZ,UAAU,mBAAlE,WAAoG,EAAK8B,MAAM7C,YAEvH,kEAAqC,EAAK6C,MAAMpF,aAAhD,WAID,IA9YI,EAkZnBkO,wBAA0B,WACtB,IAAIC,EAAc,EAAK/I,MAAM4G,aAAe,EAAK5G,MAAMmH,aACvD,OACI,eAAC,IAAM7G,SAAP,WACI,uBACA,uBACA,uEAA0CyI,EAA1C,IAAwD,EAAKzC,mBAA7D,UACA,0BAAUhP,MAAOyR,EAAa/G,IAAK,EAAKsE,yBAzZjC,EA8ZnB0C,sBAAwB,WACpB,IAAIC,EAAO,EAAKjJ,MAAM4H,cAAc,kBAAkB,eACtD,OACI,eAAC,IAAMtH,SAAP,WACI,uBACA,uBACA,sBAAKtC,MAAO,CAACG,SAAS,OAAQW,aAAa,QAA3C,UACI,mBAAGZ,UAAW+K,IADlB,6BAGsB,EAAKjJ,MAAM4H,cAAc,WAAW,WAH1D,OAKA,uBACA,oDAAuB,EAAK5H,MAAMuH,kBAClC,uBACA,gDAAmB,EAAKvH,MAAMwH,qBAC9B,uBACA,+CACA,0BAAUxJ,MAAO,EAAKuI,cACZ2B,aAAcxQ,EAAc,EAAKsI,MAAM0H,aACvCvF,UAAU,IACpB,+CACA,0BAAUnE,MAAO,EAAKuI,cACZ2B,aAAcxQ,EAAc,EAAKsI,MAAM2H,YACvCxF,UAAU,QArbb,EA0bnByG,gBAAkB,WACd,OAA6B,IAAzB,EAAK5I,MAAMsH,YACJ,EAAKwB,0BAEL,EAAKE,yBA9bD,EAkcnBH,mBAAqB,WACjB,OACI,8BACI,mBAAG3K,UAAU,gCADjB,oFAlcJ,EAAK8B,MAAQ,CACT4C,UAAS,EACTxI,IAAK,GACLQ,aAAc,KACdqM,MAAO,KACPE,aAAc,KACdC,eAAgB,KAChBR,aAAc,KACdzJ,SAAU,KACVqL,WAAY,MAXD,E,0CAodnB,WACI,OACI,sBAAKtK,UAAU,eAAf,UACI,sDACCd,KAAK8F,cACL9F,KAAK+F,cACL/F,KAAKgL,cACLhL,KAAKqL,qB,GA9eEnL,IAAMgB,WAAxB8H,GAEK7H,YAAclB,EAofV+I,U,UCrcA8C,G,kDAhDX,WAAY7J,GAAQ,IAAD,8BACf,cAAMA,IAOV8J,WAAa,SAAC/H,GACV,EAAKlE,SAAS,CAACkM,KAAKhI,EAAMC,OAAO/J,SATlB,EAYnB+R,aAAe,WACX,IAAID,EAAO,EAAKpJ,MAAMoJ,KAClBE,EAAOC,aAAYH,GACvB,EAAKlM,SAAS,CACVoM,KAAKA,KAhBM,EAoBnBE,KAAO,WACHzS,EAAgB,wBAnBhB,EAAKiJ,MAAM,CACPoJ,KAAK,GACLE,KAAK,IAJM,E,0CAwBnB,WACI,OACI,sBAAKpL,UAAU,eAAf,UACI,wCACA,yCACA,0BAAU5G,MAAO8F,KAAK4C,MAAMoJ,KAAMnH,SAAU7E,KAAK+L,aACjD,wBAAQ1K,QAASrB,KAAKiM,aAAtB,kBACA,uBAAOtD,GAAG,sBACH3H,KAAK,OACL9G,MAAO8F,KAAK4C,MAAMsJ,KAClBnH,UAAU,EACVnE,MAAO,CACHG,SAAU,OACV4C,UAAW,YAGtB,wBAAQtC,QAASrB,KAAKoM,KAAtB,sC,GA1CKlM,IAAMgB,WCJrBmL,G,4JAEF,WACI,OACI,qBAAKvL,UAAU,eAAf,SACI,2C,GALEZ,IAAMgB,WAYTmL,MCITC,G,4MAIF7H,OAAS,WACL,OAAQ,EAAK/D,QAAQoC,KACjB,IAAK,SACD,OAAO,cAAC,EAAD,IACX,IAAK,OACD,OAAO,cAAC,EAAD,IACX,IAAK,YACD,OAAO,cAAC,EAAD,IACX,IAAK,SACD,OAAO,cAAC,EAAD,IACX,IAAK,UACD,OAAO,cAAC,EAAD,IACX,IAAK,cACD,OAAO,cAAC,GAAD,IACX,IAAK,aACD,OAAO,cAAC,GAAD,IACX,IAAK,cAIL,IAAK,cAEL,QACI,OAAO,cAAC,GAAD,IALX,IAAK,SACD,OAAO,cAAC,GAAD,M,yBAvBG5C,IAAMgB,WAA1BoL,GAEKnL,YAAclB,EA+BVqM,UCqFAC,G,kDA1HX,WAAYtK,GAAQ,IAAD,8BACf,cAAMA,IAuBVoE,kBAAoB,WAChB,EAAKmG,cAzBU,EA4BnBA,WAAa,WACT,IAAIvQ,EAAI,eACJwQ,EAAcxQ,EAAK2G,MAAM8J,OAC7BD,EAAYlN,OAAS,UACrBtD,EAAK6D,SAAS,CAAC4M,OAAOD,IAAc,WAChCE,cAAkBpQ,MAAK,WACnBkQ,EAAYlN,OAAS,QACrBtD,EAAK6D,SAAS,CAAC4M,OAAQD,GAAcxQ,EAAK2Q,uBAnCnC,EAwCnBA,eAAiB,SAAC5Q,GACd,IAAIC,EAAI,eACJ4Q,EAAe5Q,EAAK2G,MAAMjC,QAC9BkM,EAAatN,OAAS,aACtBtD,EAAK6D,SAAS,CAACa,QAAQkM,IAAe,WAClC,IAAIlM,EAAU,IAAI9E,EAAYI,EAAK2G,MAAMjC,QAAQ3D,KACjD2D,EAAQ5E,SAAQ,WACZE,EAAKmI,YAAczD,EACnBkM,EAAatN,OAAS,YACtBtD,EAAK6D,SAAS,CAACa,QAAQkM,GAAe,EAAKC,2BAjDpC,EAsDnBA,mBAAqB,WACjB,IAAI7Q,EAAI,eACJA,EAAK8Q,kBACL9Q,EAAK8Q,kBACL9Q,EAAK8Q,gBAAkB,MAM3B9Q,EAAK6D,SAAS,CAAC8B,QAJI,CACfC,KAAK,KACL6G,IAAI,QAE8B,WAClC,GAAIzM,EAAK2G,MAAM9F,SAAuC,cAA5Bb,EAAK2G,MAAMjC,QAAQpB,OAAsB,CACnE,IAAI5C,EAAUV,EAAK2G,MAAM9F,QAAQH,QACjCV,EAAKmI,YAAY1H,WAAWC,GAAS,SAACzB,GAClC,IrB7DGhB,EqB6DC8S,EAAc/S,EAAciB,EAAOM,KAAKyR,MACxCC,ErB7DL,OADIhT,EqB8DwB8S,GrBnFvB,IAuBL9S,EAEA,KqB2DC+B,EAAK6D,SAAS,CACV8B,QAAQ,CACJC,KAAKmL,EACLtE,IAAIwE,QAGb3Q,MAAK,SAACqD,GACL3D,EAAK8Q,gBAAkBnN,UA7EhB,EAmFnBmI,cAAgB,SAACjL,GACb,EAAKgD,SAAS,CAAChD,QAASA,GAAU,EAAKgQ,qBApFxB,EAuFnBxL,SAAW,SAACwB,GACR,EAAKhD,SAAS,CAACgD,IAAKA,KAxFL,EA2FnB+C,qBAAuB,WACf,EAAKkH,iBACL,EAAKA,mBA3FT,EAAKnK,MAAQ,CACTE,IAAK,SACL4J,OAAQ,CACJnN,OAAQ,WAEZoB,QAAS,CACLK,KAAM,WACNhE,IAAK,mCACLuC,OAAQ,cAEZ/C,IAAK,CACDwE,KAAM,WACNhE,IAAK,iCAETF,QAAS,KACT8E,QAAS,CACLC,KAAK,KACL6G,IAAI,OAnBG,E,0CAiGnB,WACI,OACI,qBAAK9H,MAAO,CAAC2B,QAAS,YAAtB,SACI,eAAC,EAAW4K,SAAZ,CAAqBjT,MAAO,CAExB4I,IAAK9C,KAAK4C,MAAME,IAChBnC,QAASX,KAAK4C,MAAMjC,QACpB7D,QAASkD,KAAK4C,MAAM9F,QACpB8E,QAAS5B,KAAK4C,MAAMhB,QAEpBN,SAAUtB,KAAKsB,SACfyG,cAAe/H,KAAK+H,cAEpB3D,YAAapE,KAAKoE,YAClB2E,YAAa/I,KAAK4C,MAAMpG,KAX5B,UAaI,cAAC,EAAD,IACA,cAAC,GAAD,a,GApHF0D,IAAMgB,W,qBCLxBkM,IAAS3I,OACP,cAAC,IAAM4I,WAAP,UACE,cAAC,GAAD,CAAKC,IAAK,SAACC,GAAOC,OAAOC,aAAeF,OAE1C1T,SAASC,eAAe,W","file":"static/js/main.c358cf1a.chunk.js","sourcesContent":["const BALANCE_UNIT = 1000000000000;\nconst WIKA_TO_USD = 0.02 ;\n\n\nfunction copyToClipboard(inputId) {\n    var copyText = document.getElementById(inputId);\n    copyText.select();\n    document.execCommand(\"copy\");\n}\n\nfunction convertToWika(value) {\n    return value / BALANCE_UNIT;\n}\n\nfunction formatWika(value) {\n    if (value != null) {\n        return value.toFixed(4) + ' W';\n    } else {\n        return '-';\n    }\n}\n\nfunction wikaToUsd(value) {\n    if (value!=null) {\n        return value * WIKA_TO_USD ;\n    } else {\n        return null;\n    }\n}\n\nfunction formatUsd(value) {\n    if (value != null) {\n        return value.toFixed(2) + ' US$';\n    } else {\n        return '-';\n    }\n}\n\nfunction shortenText(text) {\n    const maxLength = 50;\n    if (text == null) {\n        return \"\";\n    } else if (text.length > maxLength) {\n        return text.substr(0, maxLength) + '...';\n    } else {\n        return text;\n    }\n}\n\nfunction hexToBytes(hex) {\n    if (hex == null) {\n        return null;\n    }\n    if (hex.substr(0, 2) === '0x') {\n        hex = hex.substr(2);\n    }\n    for (var bytes = [], c = 0; c < hex.length; c += 2) {\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    }\n    return bytes;\n}\n\nfunction bytesToString(array) {\n    if (array==null) return null ;\n    var out, i, len, c;\n    var char2, char3;\n\n    out = \"\";\n    len = array.length;\n    i = 0;\n    while (i < len) {\n        c = array[i++];\n        switch (c >> 4) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                // 0xxxxxxx\n                out += String.fromCharCode(c);\n                break;\n            case 12:\n            case 13:\n                // 110x xxxx   10xx xxxx\n                char2 = array[i++];\n                out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n                break;\n            case 14:\n                // 1110 xxxx  10xx xxxx  10xx xxxx\n                char2 = array[i++];\n                char3 = array[i++];\n                out += String.fromCharCode(((c & 0x0F) << 12) |\n                    ((char2 & 0x3F) << 6) |\n                    ((char3 & 0x3F) << 0));\n                break;\n            default:\n                break;\n        }\n    }\n    return out;\n}\n\nfunction parseError(result) {\n    console.log(JSON.stringify(result));\n    if (result.dispatchError) {\n        try {\n            let data = result.dispatchError.asModule;\n            let index = data.index;\n            let error = data.error;\n            return \"Transaction error (\" + index + \",\" + error + \")\";\n        } catch (err) {\n            return \"Transaction error\";\n        }\n    } else {\n        return null;\n    }\n}\n\n\nexport {copyToClipboard, convertToWika, formatWika, wikaToUsd, formatUsd, shortenText, hexToBytes, bytesToString, parseError} ;\n","import {ApiPromise, WsProvider} from '@polkadot/api';\nimport {web3FromSource} from '@polkadot/extension-dapp';\nimport {parseError} from \"./misc\";\n\n\nclass WikaNetwork {\n\n    constructor(endpoint) {\n        this.endpoint = endpoint ;\n        this.api = null ;\n    }\n\n    connect = (callback) => {\n        let self = this ;\n        self.wsProvider = new WsProvider(self.endpoint) ;\n        return ApiPromise.create({ provider: self.wsProvider })\n            .then((api) => {\n                self.api = api ;\n                callback() ;\n            }) ;\n    }\n\n    disconnect = (callback) => {\n        return this.api.disconnect().then(callback) ;\n    }\n\n    getBalance = (address, callback) => {\n        return this.api.query.system.account(address, callback) ;\n    }\n\n    getUrl = (url, callback) => {\n        return this.api.query.likes.urls(url, callback) ;\n    }\n\n    getLike = (address, url, callback) => {\n        return this.api.query.likes.likes(address, url, callback) ;\n    }\n\n    getLikePrice = (callback) => {\n        return this.api.query.likes.likePrice(callback) ;\n    }\n\n    getOwnersRequestPrice = (callback) => {\n        return this.api.query.owners.requestPrice(callback) ;\n    }\n\n    getUrlOwner = (url, callback) => {\n        return this.api.query.owners.owners(url, callback) ;\n    }\n\n    getOwnerRequest = (url, callback) => {\n        return this.api.query.owners.requests(url, callback) ;\n    }\n\n    getOwnerResult = (url, callback) => {\n        return this.api.query.owners.results(url, callback) ;\n    }\n\n    getBlockNumber = (callback) => {\n        return this.api.query.system.number(callback) ;\n    }\n\n    getUrlInfo = (address, url, callback) => {\n        Promise.all([this.api.query.likes.urls(url),this.api.query.likes.likes(address, url)])\n            .then((result) => {\n                let ans = {\n                    urlLikes: Number(result[0][0]),\n                    likesSubmittedAt: Number(result[1][0]),\n                    likesSubmittedCount:Number(result[1][1]),\n                    likesSubmittedRemaining:Number(result[1][2])\n                } ;\n                callback(ans) ;\n            }) ;\n    }\n\n\n\n\n    txLike = (address, injector, url, referrer, numLikes, callback) => {\n        let tx = this.api.tx.likes.like(url, referrer, numLikes) ;\n        return tx.signAndSend(address, {signer: injector.signer}, callback) ;\n    }\n\n    txOwnerRequest = (address, injector, url, callback) => {\n        let tx = this.api.tx.owners.requestUrlCheck(url) ;\n        return tx.signAndSend(address, {signer: injector.signer}, callback) ;\n    }\n\n    txLikeExt = (source, address, url, referrer, numLikes, callback) => {\n        console.log(source, address, url, referrer, numLikes);\n        let self = this;\n        let memory = {} ;\n        let monitor = (result) => {\n            let status = result.status ;\n            if (status.isInBlock) {\n                callback({status:'In block'}) ;\n            } else if (status.isFinalized) {\n                memory.unsubTransaction();\n                let err = parseError(result) ;\n                if (err) {\n                    callback({status:'Error', err: err}) ;\n                } else {\n                    callback({status:'Done'}) ;\n                }\n            }\n        }\n        web3FromSource(source).then((injector) => {\n            callback({status:'Sending'}) ;\n            self.txLike(address, injector, url, referrer, numLikes, monitor).then((s) => {\n                memory.unsubTransaction = s;\n            }).catch((err) => {\n                self.setState({txStatus: null}) ;\n                callback({status:'Error', err: err}) ;\n            }) ;\n        });\n    }\n\n\n\n}\n\nexport default WikaNetwork ;\n","import React from \"react\";\n\nconst AppContext = React.createContext();\n\nexport default AppContext ;\n","import React from 'react';\n\nimport AppContext from '../utils/context' ;\n\n\n\nclass NetworkButton extends React.Component {\n\n    static contextType = AppContext;\n\n    buttonStyle = {\n        height: '60px',\n        paddingTop: '4px',\n        paddingBottom: '4px',\n        lineHeight: 'normal'\n    }\n\n    renderStatus() {\n        switch (this.context.network.status) {\n            case 'connected': return <i style={{color:'green'}} className=\"fas fa-check\"></i> ;\n            case 'disconnected': return <i style={{color:'red'}} className=\"fas fa-times\"></i> ;\n            case 'connecting': return <i style={{color:'orange'}} className=\"fas fa-spinner\"></i> ;\n            default: return \"\" ;\n        }\n    }\n\n    render() {\n        return (\n            <button className=\"outline secondary\" style={this.buttonStyle}>\n                <span style={{fontSize:'18px'}}>\n                    <i className=\"fas fa-network-wired\"></i>\n                    &nbsp;&nbsp;\n                    {this.context.network.type}\n                    &nbsp;&nbsp;\n                    {this.renderStatus()}\n                </span>\n                <br/>\n                <span style={{fontSize:'10px'}}>\n                    {this.context.network.url}\n                </span>\n            </button>\n        );\n    }\n\n}\n\n\nexport default NetworkButton ;\n\n\n\n","import React from 'react';\nimport Identicon from \"@polkadot/react-identicon\";\n\n\nimport AppContext from '../utils/context' ;\nimport {formatWika} from \"../utils/misc\";\n\n\n\nclass AccountButton extends React.Component {\n\n    static contextType = AppContext;\n\n    buttonStyle = {\n        height: '60px',\n        paddingTop: '4px',\n        paddingBottom: '4px',\n        lineHeight: 'normal'\n    }\n\n    renderDisconnected() {\n        return (\n            <button className=\"outline secondary\" style={this.buttonStyle} onClick={() => this.context.navigate('account')}>\n                <span style={{fontSize:'18px'}}>\n                    <i className=\"far fa-user-circle\"></i>\n                    &nbsp;&nbsp;\n                    Connect account\n                </span>\n                <br/>\n                <span style={{fontSize:'10px'}}>\n                    (Requires a Polkadot wallet)\n                </span>\n            </button>\n        );\n    }\n\n    renderConnected() {\n        return (\n            <button className=\"outline secondary\" style={this.buttonStyle} onClick={() => this.context.navigate('account')}>\n                <div style={{display:'flex'}}>\n                    <div style={{marginRight:'15px'}}>\n                        <Identicon size={40} value={this.context.account.address}/>\n                    </div>\n                    <div style={{fontSize:'14px'}}>\n                        <div style={{marginBottom:'5px'}}>{this.context.account.name}</div>\n                        <div>{formatWika(this.context.balance.wika)}</div>\n                    </div>\n                </div>\n            </button>\n        );\n    }\n\n    render() {\n        if (this.context.account) {\n            return this.renderConnected() ;\n        } else {\n            return this.renderDisconnected() ;\n        }\n    }\n\n}\n\n\nexport default AccountButton ;\n\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../utils/context\";\n\n\nimport NetworkButton from \"./NetworkButton\";\nimport AccountButton from \"./AccountButton\";\n\n\n\nclass NavBar extends React.Component {\n\n    static contextType = AppContext;\n\n    styleMenu = {\n        position: 'absolute',\n        top: '80px',\n        left: '400px',\n        backgroundColor: 'aliceblue',\n        padding: '10px',\n        borderRadius: '10px',\n        opacity: '90%'\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {menuOpened: false};\n    }\n\n    toggleMenu = () => {\n        let toggle = !this.state.menuOpened ;\n        this.setState({menuOpened:toggle}) ;\n    }\n\n    navigate = (tab) => {\n        this.setState({menuOpened:false}) ;\n        this.context.navigate(tab);\n    }\n\n    renderMenu = () => {\n        if (this.state.menuOpened) {\n            return (\n                <aside style={this.styleMenu}>\n                    <nav>\n                        <ul>\n                            <li><a href=\"/#\" onClick={() => this.navigate('account')}>Account</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('liked_pages')}>Liked pages</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('owned_pages')}>Owned pages</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('claim_page')}>Claim page ownership</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('keccak')}>Keccak 256</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('blockchains')}>Blockchains</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('about')}>About</a></li>\n                        </ul>\n                    </nav>\n                </aside>\n            );\n        } else {\n            return \"\" ;\n        }\n    }\n\n    buttonClass = (tab) => {\n        if (this.context.tab === tab) {\n            return \"contrast\" ;\n        } else {\n            return \"secondary\" ;\n        }\n    }\n\n    renderAccountOnly() {\n        if (this.context.account) {\n            return (\n                <React.Fragment>\n                    <li><a href=\"/#\" className={this.buttonClass('like')} onClick={() => this.navigate('like')}>Like</a></li>\n                    <li><a href=\"/#\" className={this.buttonClass('recommend')} onClick={() => this.navigate('recommend')}>Recommended</a></li>\n                    <li><a href=\"/#\" className={this.buttonClass('wallet')} onClick={() => this.navigate('wallet')}>Wallet</a></li>\n                    <li><a href=\"/#\" className={this.buttonClass('menu')} onClick={this.toggleMenu}><i className=\"fas fa-bars\"></i></a></li>\n                    {this.renderMenu()}\n                </React.Fragment>\n            ) ;\n        } else {\n            return \"\" ;\n        }\n    }\n\n    render() {\n        return (\n            <nav>\n                <ul>\n                    <li>\n                        <a href=\"/#\" className={this.buttonClass('splash')} onClick={() => this.context.navigate('splash')}>\n                            <img src=\"images/logo32.png\" alt=\"\" />\n                            &nbsp;&nbsp;\n                            Wika Network\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                        </a>\n                    </li>\n                    {this.renderAccountOnly()}\n                </ul>\n                <ul>\n                    <li><NetworkButton /></li>\n                    <li><AccountButton /></li>\n                </ul>\n            </nav>\n        );\n    }\n\n}\n\n\nexport default NavBar ;\n\n\n\n","import React from \"react\";\n\n\nimport AppContext from \"../utils/context\";\n\n\nclass Splash extends React.Component {\n\n    static contextType = AppContext;\n\n    layoutStyle = {display: \"grid\", gridAutoColumns: \"1fr\", gridAutoFlow: \"column\"};\n\n    columnStyle = {padding: \"20px\", fontSize: \"15px\", textAlign: \"center\"};\n\n    imageStyle = {width: \"125px\", height: \"80px\"}\n\n    render() {\n        return (\n            <div className=\"main-content\" style={{textAlign: \"center\"}}>\n                <h5>Welcome to the Wika Network!</h5>\n                <div style={this.layoutStyle}>\n                    <div style={this.columnStyle}>\n                        <h6>If you're a generous internet consumer</h6>\n                        <img src=\"images/splash1.png\" alt=\"\" style={this.imageStyle} /> <br/><br/>\n                        Like your favorite pages and reward the authors and previous likers.\n                    </div>\n                    <div style={this.columnStyle}>\n                        <h6>If you authored a cool web page</h6>\n                        <img src=\"images/splash2.png\" alt=\"\" style={this.imageStyle} /> <br/><br/>\n                        Register it in one public decentralized database, and whether your content\n                        lives in youtube, facebook, medium or any other internet place,\n                        Wika users will be able to reward you directly.\n                    </div>\n                    <div style={this.columnStyle}>\n                        <h6>If you want a better internet</h6>\n                        <img src=\"images/splash3.png\" alt=\"\" style={this.imageStyle} /> <br/><br/>\n                        Join and use the Wika Network to build a clean, public and non-intrusive database.\n                        The Wika Blockchain will empower new search engines and recommendation systems\n                        that respect your privacy and are 100% transparent.\n                    </div>\n                </div>\n                <br/>\n                <h6>Together, let's make the internet a better place and spread quality content.</h6>\n                {this.context.account==null?\n                    <button className=\"primary\" onClick={() => this.context.navigate('account')}>\n                        Connect your Polkadot wallet and get started now!\n                    </button>\n                 :\"\"}\n            </div>\n        );\n    }\n\n}\n\n\nexport default Splash ;\n\n\n","import React from 'react';\nimport {web3FromSource} from '@polkadot/extension-dapp';\n\n\nimport AppContext from \"../../utils/context\";\nimport {formatWika, parseError} from \"../../utils/misc\";\n\n\nclass Like1 extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            numLikes: 1\n        };\n    }\n\n    handleNumLikeChange = (event) => {\n        this.setState({numLikes: event.target.value}, this.update) ;\n    }\n\n    submitLike = () => {\n        let self = this;\n        let url = self.props.url ;\n        let referrer = self.state.referrer ;\n        let numLikes = self.state.numLikes ;\n        let source = self.context.account.source ;\n        let address = self.context.account.address ;\n        web3FromSource(source).then((injector) => {\n            self.setState({txStatus: 'Sending...'}, () => {\n                self.context.wikaNetwork.txLike(address, injector, url, referrer, numLikes, self.monitorLike).then((s) => {\n                    self.unsubTransaction = s;\n                }).catch((err) => {\n                    self.setState({txStatus: null}) ;\n                    alert(err) ;\n                }) ;\n            });\n        }) ;\n    }\n\n    monitorLike = (result) => {\n        let status = result.status ;\n        if (status.isInBlock) {\n            this.setState({txStatus: 'In block...'}) ;\n        } else if (status.isFinalized) {\n            this.setState({txStatus: null}) ;\n            this.unsubTransaction();\n            let err = parseError(result) ;\n            if (err) {\n                alert(err) ;\n            }\n        }\n    }\n\n    renderButton = () => {\n        if (this.state.txStatus==null) {\n            return (\n                <button onClick={this.submitLike}>\n                    Send {this.state.numLikes} <i className=\"fas fa-thumbs-up\"></i>\n                </button>\n            );\n        } else {\n            return (\n                <button disabled>\n                    <i className=\"fas fa-spinner\"></i> {this.state.txStatus}\n                </button>\n            ) ;\n        }\n    }\n\n    render = () => {\n        return (\n            <React.Fragment>\n\n                <p>\n                    This page received <strong>{this.props.urlLikes} likes</strong>.\n                </p>\n\n                <hr/>\n\n                <h5>Send likes to this page:</h5>\n\n                <strong>Which URL referred you to the page?</strong>\n                <input type=\"text\" />\n\n                <strong>How much do you like it?</strong>\n                <div style={{display:'flex'}}>\n                    <div style={{marginTop:'15px'}}>\n                        <input style={{width:'250px'}}\n                               type=\"range\" min=\"1\" max=\"100\"\n                               value={this.state.numLikes}\n                               onChange={this.handleNumLikeChange} />\n                    </div>\n                    <div style={{marginTop:'10px', marginLeft:'15px'}}>\n                        <strong>{this.state.numLikes} <i className=\"fas fa-thumbs-up\"></i></strong>\n                    </div>\n                </div>\n\n                <strong>Cost of this transaction</strong>\n                <input style={{textAlign:\"right\"}}\n                       type=\"text\"\n                       readOnly\n                       value={formatWika(this.props.likePrice*this.state.numLikes)}\n                />\n\n                {this.renderButton()}\n\n            </React.Fragment>\n        );\n    }\n\n}\n\n\nexport default Like1 ;\n","import React from 'react';\n\n\nclass Like2 extends React.Component {\n\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <p>\n                    This page received <strong>{this.props.urlLikes} likes</strong>.\n                </p>\n                <p>\n                    You sent it <strong>{this.props.likesSubmittedCount} likes</strong>.\n                </p>\n                <p>\n                    You are ranked <strong>#{this.props.likesSubmittedAt+1}</strong> on the queue of people who liked this page,\n                    therefore, you will start receiving rewards when it hits {(this.props.likesSubmittedAt*this.props.rewardWaitFactor)+2} likes.\n                </p>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default Like2 ;\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../../utils/context\";\nimport {convertToWika} from \"../../utils/misc\";\n\n\nimport Like1 from \"./Like1\";\nimport Like2 from \"./Like2\";\n\n\n\nclass Like extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lookedUp:false,\n            url: \"\",\n            referrer: null,\n            likePrice: null,\n            rewardPrct: '33%',\n            rewardTarget: 1.33,\n            rewardWaitFactor: 4,\n            urlLikes: null,\n            likesSubmittedAt: null,\n            likesSubmittedCount: null,\n            likesSubmittedRemaining: null\n        }\n    }\n\n    componentDidMount() {\n        this.getLikePrice() ;\n    }\n\n    getLikePrice = () => {\n        let self = this;\n        self.context.wikaNetwork.getLikePrice((result) => {\n            let price = convertToWika(result) ;\n            self.setState({likePrice:price}) ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    handleUrlChange = (event) => {\n        this.setState({url: event.target.value}) ;\n    }\n\n    lookupUrl = () => {\n        this.subscribeToUrl() ;\n        this.subscribeToLike() ;\n        this.setState({lookedUp:true}) ;\n    }\n\n    clearUrl = () => {\n        this.unsubscribe() ;\n        this.setState({\n            lookedUp:false,\n            url:\"\",\n            likesSubmittedCount:null,\n        }) ;\n    }\n\n    subscribeToUrl = () => {\n        let self = this;\n        if (self.unsubUrl) {\n            self.unsubUrl() ;\n            self.unsubUrl = null ;\n        }\n        let url = this.state.url;\n        self.context.wikaNetwork.getUrl(url, (result) => {\n            let urlLikes = Number(result[0]) ;\n            self.setState({urlLikes:urlLikes}) ;\n        }).then((s) => {\n            self.unsubUrl = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    subscribeToLike = () => {\n        let self = this;\n        if (self.unsubLike) {\n            self.unsubLike() ;\n            self.unsubLike = null ;\n        }\n        let address = this.context.account.address;\n        let url = this.state.url;\n        self.context.wikaNetwork.getLike(address, url, (result) => {\n            self.setState({\n                likesSubmittedAt:Number(result[0]),\n                likesSubmittedCount:Number(result[1]),\n                likesSubmittedRemaining:Number(result[2])\n            }) ;\n        }).then((s) => {\n            self.unsubLike = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    componentWillUnmount = () => {\n        this.unsubscribe() ;\n    }\n\n    unsubscribe = () => {\n        if (this.unsubUrl) {\n            this.unsubUrl() ;\n        }\n        if (this.unsubLike) {\n            this.unsubLike() ;\n        }\n    }\n\n    renderPart1 = () => {\n        return (\n            <React.Fragment>\n                <label>URL</label>\n                <input type=\"text\"\n                       value={this.state.url}\n                       onChange={this.handleUrlChange}\n                       disabled={this.state.lookedUp}\n                />\n                {this.state.lookedUp?\n                <button onClick={this.clearUrl} className=\"contrast\">Clear</button>\n                :<button onClick={this.lookupUrl}>Lookup URL status</button>}\n            </React.Fragment>\n        ) ;\n    }\n\n    renderPart2 = () => {\n        if (this.state.lookedUp && this.state.likesSubmittedCount!=null) {\n            if (this.state.likesSubmittedCount>0) {\n                return <Like2\n                    urlLikes={this.state.urlLikes}\n                    likesSubmittedCount={this.state.likesSubmittedCount}\n                    likesSubmittedAt={this.state.likesSubmittedAt}\n                    rewardWaitFactor={this.state.rewardWaitFactor}\n                />\n            } else {\n                return <Like1\n                    url={this.state.url}\n                    urlLikes={this.state.urlLikes}\n                    likePrice={this.state.likePrice}\n                />\n            }\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <h5>Like</h5>\n                {this.renderPart1()}\n                <hr/>\n                {this.renderPart2()}\n            </div>\n        ) ;\n    }\n\n}\n\nexport default Like ;\n\n\n\n","import React from 'react';\n\n\nclass Recommend extends React.Component {\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h5>Recommend</h5>\n            </div>\n        );\n    }\n\n}\n\nexport default Recommend ;\n\n\n","import React from 'react';\n\n\nclass Wallet extends React.Component {\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h5>Wallet</h5>\n            </div>\n        );\n    }\n\n}\n\nexport default Wallet ;\n\n\n","import React from \"react\";\nimport {web3Enable} from '@polkadot/extension-dapp';\n\n\nclass AccountConnectEnablingWeb3 extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {wallets: null};\n    }\n\n    componentDidMount = () => {\n        this.enableWeb3();\n    }\n\n    enableWeb3 = () => {\n        this.setState({wallets: null}, () => {\n            web3Enable(\"Wika Network\").then((result) => {\n                this.setState({wallets: result});\n            });\n        });\n    }\n\n    renderSwitch = () => {\n        if (this.state.wallets === null) {\n            return this.renderWait();\n        } else if (this.state.wallets.length === 0) {\n            return this.renderNone();\n        } else {\n            return this.renderOk();\n        }\n    }\n\n    renderWait = () => {\n        return (\n            <p>\n                <i className=\"fas fa-spinner\"></i>\n                Waiting for wallet's authorization...\n            </p>\n        );\n    }\n\n    renderNone = () => {\n        return (\n            <React.Fragment>\n                <p>\n                    <strong>No Polkadot wallets detected.</strong>\n                    <br/>\n                    Please install one and make sure you authorize this app to use it.\n                </p>\n                <div style={{textAlign: 'right'}}>\n                    <a href=\"/#\" role=\"button\" className=\"secondary\" >Install Pokadot-JS Extension</a>\n                    &nbsp;&nbsp;\n                    <a href=\"/#\" role=\"button\" className=\"primary\" onClick={this.enableWeb3}>Retry</a>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    renderOk = () => {\n        return (\n            <React.Fragment>\n                <strong>Polkadot wallets detected:</strong>\n                {this.renderWalletsTable()}\n                <button onClick={this.props.next}>Continue</button>\n            </React.Fragment>\n        );\n    }\n\n    renderWalletsTable = () => {\n        return (\n           <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Version</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.renderWalletsRows()}\n              </tbody>\n            </table>\n        ) ;\n    }\n\n    renderWalletsRows = () => {\n        let ans = [] ;\n        for (let i in this.state.wallets) {\n            let wallet = this.state.wallets[i] ;\n            ans.push(\n                <tr key={i}>\n                  <td>{wallet.name}</td>\n                  <td>{wallet.version}</td>\n                </tr>\n            ) ;\n        }\n        return ans ;\n    }\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <h5>Enabling Polkadot Wallets</h5>\n                {this.renderSwitch()}\n            </div>\n        );\n    }\n\n}\n\nexport default AccountConnectEnablingWeb3;\n\n\n","import React from \"react\";\nimport {web3Accounts} from '@polkadot/extension-dapp';\nimport Identicon from '@polkadot/react-identicon';\nimport {decodeAddress} from '@polkadot/util-crypto';\nimport {u8aToHex} from '@polkadot/util';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass AccountConnectSelect extends React.Component {\n\n    static contextType = AppContext;\n\n    styleItem = {\n        padding: 0,\n        margin: \"15px\"\n    }\n\n    styleBox1 = {\n        flex: \"40px\",\n        padding: \"15px\",\n    }\n\n    styleBox2 = {\n        flex: \"100%\",\n        padding: \"15px\"\n    }\n\n    styleBox3 = {\n        flex: '100px',\n        display: \"flex\",\n        padding: \"15px\",\n        textAlign: \"center\",\n        alignItems: \"center\",\n        fontSize: \"32px\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {accounts: []};\n    }\n\n    componentDidMount = () => {\n        this.getAccounts();\n    }\n\n    getAccounts = () => {\n        this.setState({accounts: []}, () => {\n            web3Accounts().then((result) => {\n                this.setState({accounts: result});\n            });\n        });\n    }\n\n    selectAccount = (account) => () => {\n        let address = account.address ;\n        let name = account.meta.name ;\n        let source = account.meta.source ;\n        let addressU8 = decodeAddress(address) ;\n        let addressRaw = u8aToHex(addressU8) ;\n        let data = {\n            name: name,\n            address: address,\n            addressRaw: addressRaw,\n            source: source\n        };\n        this.context.selectAccount(data) ;\n    }\n\n    renderListAccounts = () => {\n        let ans = [] ;\n        for (let i in this.state.accounts) {\n            let account = this.state.accounts[i] ;\n            ans.push(\n                <article key={i} style={this.styleItem}>\n                    <div style={{display:'flex'}}>\n                        <div style={this.styleBox1}>\n                            <Identicon value={account.address}/>\n                        </div>\n                        <div style={this.styleBox2}>\n                            <strong>{account.meta.name}</strong>\n                            <br/>\n                            <span style={{fontSize:'12px'}}>{account.address}</span>\n                        </div>\n                        <div style={this.styleBox3}>\n                            <a href=\"/#\" onClick={this.selectAccount(account)}>\n                                <i className=\"fas fa-arrow-alt-circle-right\"></i>\n                            </a>\n                        </div>\n                    </div>\n                </article>\n            ) ;\n        }\n        return ans ;\n    }\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <h5>Select the account to work with</h5>\n                {this.renderListAccounts()}\n            </div>\n        );\n    }\n\n}\n\nexport default AccountConnectSelect;\n\n\n","import React from \"react\";\nimport Identicon from '@polkadot/react-identicon';\n\n\nimport AppContext from \"../../utils/context\";\nimport {copyToClipboard, formatWika, formatUsd} from \"../../utils/misc\";\n\n\nclass Account extends React.Component {\n\n    static contextType = AppContext;\n\n    styleInputBox = {\n        fontSize: '16px',\n        textAlign: 'center'\n    } ;\n\n    copyElement = (element) => () => {\n        copyToClipboard(element) ;\n    }\n\n    disconnect = () => {\n        this.context.selectAccount(null) ;\n    }\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <h5>Account</h5>\n\n                <div style={{textAlign:'center', marginBottom:'35px'}}>\n                    <Identicon value={this.context.account.address}/>\n                    <br/>\n                    <strong>{this.context.account.name}</strong>\n                </div>\n\n                <strong>Balance</strong>\n                <div style={{display: 'flex'}}>\n                    <div style={{flex: '50%', marginRight: '10px'}}>\n                        <input type=\"text\"\n                               value={formatWika(this.context.balance.wika)}\n                               readOnly={true}\n                               style={{textAlign: 'right'}}\n                        />\n                    </div>\n                    <div style={{flex: '50%', marginLeft: '10px'}}>\n                        <input type=\"text\"\n                               value={formatUsd(this.context.balance.usd)}\n                               readOnly={true}\n                               style={{textAlign: 'right'}}\n                        />\n                    </div>\n                </div>\n\n                <strong>\n                    Public Address (Substrate format)\n                    &nbsp;&nbsp;\n                    <a href=\"/#\" onClick={this.copyElement(\"account_address_element\")}>\n                        <i className=\"far fa-copy\"></i>\n                    </a>\n                </strong>\n                <input id=\"account_address_element\"\n                       type=\"text\"\n                       value={this.context.account.address}\n                       readOnly={true}\n                       style={this.styleInputBox}\n                />\n\n                <strong>\n                    Public Address (Raw hex format)\n                    &nbsp;&nbsp;\n                    <a href=\"/#\" onClick={this.copyElement(\"account_address_raw_element\")}>\n                        <i className=\"far fa-copy\"></i>\n                    </a>\n                </strong>\n                <input id=\"account_address_raw_element\"\n                       type=\"text\"\n                       value={this.context.account.addressRaw}\n                       readOnly={true}\n                       style={this.styleInputBox}\n                />\n\n                <button onClick={this.disconnect} className=\"contrast\">\n                    Disconnect this account\n                    &nbsp;&nbsp;&nbsp;\n                    <i className=\"fas fa-sign-out-alt\"></i>\n                </button>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Account;\n\n\n","import React from \"react\";\n\n\nimport AppContext from \"../../utils/context\";\n\n\nimport AccountConnectEnablingWeb3 from \"./AccountConnectEnablingWeb3\";\nimport AccountConnectSelect from \"./AccountConnectSelect\";\nimport Account from \"./Account\";\n\n\n\nclass AccountConnect extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            web3Enabled: false\n        }\n    }\n\n    web3Enabled = () => {\n        this.setState({web3Enabled: true}) ;\n    }\n\n    render = () => {\n        if (this.context.account) {\n            return <Account /> ;\n        } else {\n            if (this.state.web3Enabled) {\n                return <AccountConnectSelect /> ;\n            } else {\n                return <AccountConnectEnablingWeb3 next={this.web3Enabled}/> ;\n            }\n        }\n    }\n\n}\n\nexport default AccountConnect ;\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass LikedPages extends React.Component {\n\n    static contextType = AppContext;\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h5>Liked pages</h5>\n                {JSON.stringify(this.context.apiEndpoint)}\n            </div>\n        );\n    }\n\n}\n\nexport default LikedPages ;\n\n\n","import React from \"react\";\nimport {web3FromSource} from \"@polkadot/extension-dapp\";\n\n\nimport AppContext from \"../../utils/context\";\nimport {bytesToString, convertToWika, copyToClipboard, parseError} from \"../../utils/misc\";\n\n\nclass ClaimPage extends React.Component {\n\n    static contextType = AppContext;\n\n    DEFAULT_ACCOUNT = \"5C4hrfjw9DjXZTzV3MwzrrAr9P1MJhSrvWGWqi1eSuyUpnhM\" ;\n\n    NUM_BLOCKS_TO_WAIT = 10 ;\n\n    styleTextArea = {\n        fontFamily: 'monospace',\n        fontSize: '9px'\n    }\n\n    styleButton = {\n        padding: 0,\n        marginBottom: '4px'\n    }\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lookedUp:false,\n            url: \"\",\n            requestPrice: null,\n            owner: null,\n            requestBlock: null,\n            requestAccount: null,\n            currentBlock: null,\n            txStatus: null,\n            testResult: null\n        } ;\n    }\n\n\n    // INITIALIZATION\n    // --------------------------------\n\n    componentDidMount = () => {\n        this.getOwnersRequestPrice() ;\n        this.subscribeToBlockNumber() ;\n    }\n\n    getOwnersRequestPrice = () => {\n        let self = this;\n        self.context.wikaNetwork.getOwnersRequestPrice((result) => {\n            let price = convertToWika(result) ;\n            self.setState({requestPrice:price}) ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    subscribeToBlockNumber = () => {\n        let self = this;\n        if (self.unsubBlockNumber) {\n            self.unsubBlockNumber() ;\n            self.unsubBlockNumber = null ;\n        }\n        self.context.wikaNetwork.getBlockNumber((result) => {\n            self.setState({\n                currentBlock:Number(result)\n            }) ;\n        }).then((s) => {\n            self.unsubBlockNumber = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n\n\n\n    // Lookup URL\n    // --------------------------------\n\n    handleUrlChange = (event) => {\n        this.setState({url: event.target.value}) ;\n    }\n\n    lookupUrl = () => {\n        this.setState({\n            lookedUp: true\n        }) ;\n        this.subscribeToUrlOwner() ;\n        this.subscribeToOwnerRequest() ;\n        this.subscribeToOwnerResult() ;\n    }\n\n    subscribeToUrlOwner = () => {\n        let self = this;\n        if (self.unsubUrlOwner) {\n            self.unsubUrlOwner() ;\n            self.unsubUrlOwner = null ;\n        }\n        let url = self.state.url;\n        this.setState({owner:null}, () => {\n            self.context.wikaNetwork.getUrlOwner(url, (result) => {\n                self.setState({\n                    owner: \"\" + result\n                });\n            }).then((s) => {\n                self.unsubUrlOwner = s;\n            }).catch((err) => {\n                alert(err);\n            });\n        }) ;\n    }\n\n    subscribeToOwnerRequest = () => {\n        let self = this;\n        if (self.unsubOwnerRequest) {\n            self.unsubOwnerRequest() ;\n            self.unsubOwnerRequest = null ;\n        }\n        let url = self.state.url;\n        let clearState = {\n            requestBlock: null,\n            requestAccount: null\n        } ;\n        this.setState(clearState, () => {\n            self.context.wikaNetwork.getOwnerRequest(url, (result) => {\n                self.setState({\n                    requestBlock: Number(result[0]),\n                    requestAccount: \"\"+result[1]\n                });\n            }).then((s) => {\n                self.unsubOwnerRequest = s;\n            }).catch((err) => {\n                alert(err);\n            });\n        }) ;\n    }\n\n    subscribeToOwnerResult = () => {\n        let self = this;\n        if (self.unsubOwnerResult) {\n            self.unsubOwnerResult() ;\n            self.unsubOwnerResult = null ;\n        }\n        let url = self.state.url;\n        let clearState = {\n            resultBlock: null,\n            resultNumVotes: null,\n            resultNumVotesYes: null,\n            resultNumVotesMajority: null,\n            resultIntro: null,\n            resultMark: null,\n            resultOutcome: null\n        } ;\n        this.setState(clearState, () => {\n            self.context.wikaNetwork.getOwnerResult(url, (result) => {\n                let data = {\n                    resultBlock: Number(result[0]),\n                    resultNumVotes: Number(result[1]),\n                    resultNumVotesYes: Number(result[2]),\n                    resultNumVotesMajority: Number(result[3]),\n                    resultIntro: result[4],\n                    resultMark: result[5],\n                    resultOutcome: result[6]\n                };\n                self.setState(data);\n            }).then((s) => {\n                self.unsubOwnerResult = s;\n            });\n        }) ;\n    }\n\n    unsubscribeUrl = () => {\n        if (this.unsubUrlOwner) {\n            this.unsubUrlOwner() ;\n        }\n        if (this.unsubOwnerRequest) {\n            this.unsubOwnerRequest() ;\n        }\n        if (this.unsubOwnerResult) {\n            this.unsubOwnerResult() ;\n        }\n    }\n\n    clearUrl = () => {\n        this.unsubscribeUrl() ;\n        this.setState({\n            lookedUp:false,\n            url:\"\",\n            owner: null\n        }) ;\n    }\n\n\n\n    // Submit and monitor the request\n    // --------------------------------\n\n    submitRequest = () => {\n        let self = this;\n        let url = self.state.url ;\n        let source = self.context.account.source ;\n        let address = self.context.account.address ;\n        web3FromSource(source).then((injector) => {\n            self.setState({txStatus: 'Sending...'}, () => {\n                self.context.wikaNetwork.txOwnerRequest(address, injector, url, self.monitorRequest).then((s) => {\n                    self.unsubTransaction = s;\n                }).catch((err) => {\n                    self.setState({txStatus: null}) ;\n                    alert(err) ;\n                }) ;\n            })\n        });\n    }\n\n    monitorRequest = (result) => {\n        let status = result.status ;\n        if (status.isInBlock) {\n            this.setState({txStatus: 'In block...'}) ;\n        } else if (status.isFinalized) {\n            this.setState({txStatus: null}) ;\n            this.unsubTransaction();\n            let err = parseError(result) ;\n            if (err) {\n                alert(err) ;\n            }\n        }\n    }\n\n\n    // Test the webpage ownership off-chain\n    // --------------------------------------\n\n    testUrl = () => {\n        /*let self = this;\n        let url = self.context.url ;\n        fetch(url, {\n              method: \"GET\",\n            })\n            .then(response => console.log(response))\n            .catch(err => console.log(err));*/\n    };\n\n\n    // Utils\n    // --------------------------------------\n\n    copyMark = () => {\n        copyToClipboard(\"wika_mark_element\") ;\n    };\n\n\n    // Clean-up when done\n    // --------------------------------------\n\n    componentWillUnmount = () => {\n        if (this.unsubUrlOwner) {\n            this.unsubUrlOwner() ;\n        }\n        if (this.unsubOwnerRequest) {\n            this.unsubOwnerRequest() ;\n        }\n        if (this.unsubOwnerResult) {\n            this.unsubOwnerResult() ;\n        }\n        if (this.unsubBlockNumber) {\n            this.unsubBlockNumber() ;\n        }\n    }\n\n\n\n\n\n\n\n\n    // FRONT-END Part 1\n    // --------------------------------------\n\n    renderPart1 = () => {\n        return (\n            <React.Fragment>\n                <label>URL</label>\n                <input type=\"text\"\n                       value={this.state.url}\n                       onChange={this.handleUrlChange}\n                       disabled={this.state.lookedUp}\n                />\n                {this.state.lookedUp?\n                <button onClick={this.clearUrl} className=\"contrast\">Clear</button>\n                :<button onClick={this.lookupUrl}>Lookup URL status</button>}\n            </React.Fragment>\n        ) ;\n    }\n\n\n\n\n\n\n    // FRONT-END Part 2\n    // --------------------------------------\n\n    renderPart2 = () => {\n        if (this.state.lookedUp && this.state.owner!=null) {\n            return (\n                 <React.Fragment>\n                     <hr/>\n                    <label>Current Owner</label>\n                    <input type=\"text\" readOnly defaultValue={this.formatOwner(this.state.owner)}/>\n                 </React.Fragment>\n            ) ;\n        } else {\n            return \"\";\n        }\n    }\n\n    formatOwner = (owner) => {\n        if (owner===this.DEFAULT_ACCOUNT) {\n            return \"-\" ;\n        } else if (owner===this.context.account.address) {\n            return \"You are the owner!\" ;\n        } else {\n            return owner ;\n        }\n    }\n\n\n\n\n\n\n    // FRONT-END Part 3\n    // --------------------------------------\n\n    renderPart3 = () => {\n        if (this.state.lookedUp && this.state.owner!=null && this.state.owner!==this.context.account.address) {\n           return (\n                 <React.Fragment>\n                    <hr/>\n                    <label>Preparation</label>\n                    <div style={{display: 'flex'}}>\n                        <div style={{flex: '33%', paddingRight: '10px', textAlign: 'center'}}>\n                            <button style={this.styleButton}\n                                    className=\"outline\"\n                                    onClick={this.copyMark}>\n                                1. Copy this\n                            </button>\n                            <input id=\"wika_mark_element\"\n                                   type=\"text\"\n                                   readOnly\n                                   defaultValue={\"wika.network/author/\" + this.context.account.addressRaw}/>\n                        </div>\n                        <div style={{flex: '33%', textAlign: 'center'}}>\n                            <button disabled={true}\n                                    style={this.styleButton}\n                                    className=\"outline\">2. Insert it</button>\n                            <small>(Use an invisible img or link for example.)</small>\n                        </div>\n                        <div style={{flex: '33%', paddingLeft: '10px', textAlign: 'center'}}>\n                            <button disabled={true}\n                                    style={this.styleButton}\n                                    className=\"outline\"\n                                    onClick={this.testUrl}>\n                                3. Test it\n                            </button>\n                            <small>{this.renderTestResult()}</small>\n                        </div>\n                    </div>\n                </React.Fragment>\n            ) ;\n        } else {\n            return \"\";\n        }\n    }\n\n    renderTestResult = () => {\n        if (this.state.testResult==null) {\n            return \"\" ;\n        } else if (this.state.testResult===true) {\n            return \"YES\" ;\n        } else {\n            return \"NO\" ;\n        }\n    }\n\n\n\n    // FRONT-END Part 4\n    // --------------------------------------\n\n    renderPart4 = () => {\n        if (this.state.lookedUp) {\n            let currentRequester = this.state.requestAccount ;\n            if (currentRequester==null || currentRequester===this.DEFAULT_ACCOUNT) {\n                return this.renderSubmitRequest() ;\n            } else if (currentRequester===this.context.account.address) {\n                return this.renderMyRequest() ;\n            } else {\n                return this.renderOtherRequest() ;\n            }\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderSubmitRequest = () => {\n        if (this.state.owner!==this.context.address) {\n            return (\n                <React.Fragment>\n                    {\n                        this.state.txStatus==null?\n                            <button onClick={this.submitRequest} style={{marginBottom:'2px'}}>Submit your request</button>\n                        :\n                            <button disabled={true} style={{marginBottom:'2px'}}><i className=\"fas fa-spinner\"></i>&nbsp;&nbsp;{this.state.txStatus}</button>\n                    }\n                    <small>Note that the request fee is {this.state.requestPrice} W</small>\n                </React.Fragment>\n            ) ;\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderMyRequestProgress = () => {\n        let blocks_done = this.state.currentBlock - this.state.requestBlock ;\n        return (\n            <React.Fragment>\n                <hr/>\n                <br/>\n                <label>Waiting for verification results ({blocks_done}/{this.NUM_BLOCKS_TO_WAIT})...</label>\n                <progress value={blocks_done} max={this.NUM_BLOCKS_TO_WAIT}></progress>\n            </React.Fragment>\n        )\n    }\n\n    renderMyRequestResult = () => {\n        let icon = this.state.resultOutcome?\"fas fa-vote-yea\":\"fas fa-times\" ;\n        return (\n            <React.Fragment>\n                <hr/>\n                <br/>\n                <div style={{fontSize:'18px', marginBottom:'15px'}}>\n                    <i className={icon}></i>\n                    &nbsp;&nbsp;\n                    Your request was {this.state.resultOutcome?\"approved\":\"rejected\"}.\n                </div>\n                <br/>\n                <label>Verifications: {this.state.resultNumVotes}</label>\n                <br/>\n                <label>Approvals: {this.state.resultNumVotesYes}</label>\n                <br/>\n                <label>Page intro</label>\n                <textarea style={this.styleTextArea}\n                          defaultValue={bytesToString(this.state.resultIntro)}\n                          readOnly={true} />\n                <label>Mark found</label>\n                <textarea style={this.styleTextArea}\n                          defaultValue={bytesToString(this.state.resultMark)}\n                          readOnly={true} />\n            </React.Fragment>\n        )\n    }\n\n    renderMyRequest = () => {\n        if (this.state.resultBlock===0) {\n            return this.renderMyRequestProgress() ;\n        } else {\n            return this.renderMyRequestResult() ;\n        }\n    }\n\n    renderOtherRequest = () => {\n        return (\n            <p>\n                <i className=\"fas fa-exclamation-triangle\"></i> &nbsp;\n                There is currently another user trying to claim ownership for this URL.\n            </p>\n        )\n    }\n\n\n\n\n\n\n    // And finally the render function!\n    // --------------------------------------\n\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h5>Claim Page Ownership</h5>\n                {this.renderPart1()}\n                {this.renderPart2()}\n                {this.renderPart3()}\n                {this.renderPart4()}\n            </div>\n        );\n    }\n\n}\n\n\nexport default ClaimPage ;\n\n\n","import React from \"react\";\nimport {keccakAsHex} from \"@polkadot/util-crypto\";\n\n\nimport {copyToClipboard} from \"../../utils/misc\";\n\n\nclass Keccak extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state={\n            text:\"\",\n            hash:\"\"\n        }\n    }\n\n    updateText = (event) => {\n        this.setState({text:event.target.value}) ;\n    }\n\n    generateHash = () => {\n        let text = this.state.text ;\n        let hash = keccakAsHex(text) ;\n        this.setState({\n            hash:hash\n        }) ;\n    }\n\n    copy = () => {\n        copyToClipboard(\"keccak_hash_element\") ;\n    }\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h5>Keccak</h5>\n                <label>Text</label>\n                <textarea value={this.state.text} onChange={this.updateText}/>\n                <button onClick={this.generateHash}>Hash</button>\n                <input id=\"keccak_hash_element\"\n                       type=\"text\"\n                       value={this.state.hash}\n                       readOnly={true}\n                       style={{\n                           fontSize: '10px',\n                           textAlign: 'center'\n                       }}\n                />\n                <button onClick={this.copy}>Copy to clipboard</button>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Keccak ;\n\n","import React from 'react';\n\n\nclass Wip extends React.Component {\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h5>WIP</h5>\n            </div>\n        );\n    }\n\n}\n\nexport default Wip ;\n\n\n","import React from \"react\";\n\n\nimport AppContext from '../utils/context' ;\n\n\nimport Splash from \"./Splash\";\nimport Like from \"./like/Like\";\nimport Recommend from \"./recommend/Recommend\";\nimport Wallet from \"./wallet/Wallet\";\nimport AccountConnect from \"./account/AccountConnect\";\nimport LikedPages from \"./like/LikedPages\";\nimport ClaimPage from \"./authors/ClaimPage\";\nimport Keccak from \"./debug/Keccak\";\nimport Wip from \"./debug/Wip\";\n\n\n\n\nclass MainContent extends React.Component {\n\n    static contextType = AppContext;\n\n    render = () => {\n        switch (this.context.tab) {\n            case \"splash\":\n                return <Splash />;\n            case \"like\":\n                return <Like />;\n            case \"recommend\":\n                return <Recommend />;\n            case \"wallet\":\n                return <Wallet />;\n            case \"account\":\n                return <AccountConnect />;\n            case \"liked_pages\":\n                return <LikedPages />;\n            case \"claim_page\":\n                return <ClaimPage />;\n            case \"owned_pages\":\n                return <Wip />;\n            case \"keccak\":\n                return <Keccak />;\n            case \"blockchains\":\n                return <Wip />;\n            default:\n                return <Wip />;\n        }\n    }\n\n}\n\nexport default MainContent ;\n","import React from \"react\";\nimport {cryptoWaitReady} from '@polkadot/util-crypto';\n\n\nimport WikaNetwork from './utils/network' ;\nimport AppContext from './utils/context' ;\nimport {convertToWika, wikaToUsd} from \"./utils/misc\";\n\n\nimport NavBar from './components/NavBar' ;\nimport MainContent from './components/MainContent' ;\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tab: \"splash\",\n            crypto: {\n                status: 'loading'\n            },\n            network: {\n                type: \"Test Net\",\n                url: \"wss://testnode3.wika.network:443\",\n                status: 'connecting'\n            },\n            api: {\n                type: \"Test API\",\n                url: \"https://api-test.wika.network\"\n            },\n            account: null,\n            balance: {\n                wika:null,\n                usd:null\n            }\n        };\n    }\n\n    componentDidMount = () => {\n        this.loadCrypto() ;\n    }\n\n    loadCrypto = () => {\n        let self = this ;\n        let cryptoState = self.state.crypto ;\n        cryptoState.status = 'loading' ;\n        self.setState({crypto:cryptoState}, () => {\n            cryptoWaitReady().then(() => {\n                cryptoState.status = 'ready' ;\n                self.setState({crypto: cryptoState}, self.connectNetwork) ;\n            }) ;\n        }) ;\n    }\n\n    connectNetwork = (callback) => {\n        let self = this ;\n        let networkState = self.state.network ;\n        networkState.status = 'connecting' ;\n        self.setState({network:networkState}, () => {\n            let network = new WikaNetwork(self.state.network.url) ;\n            network.connect(() => {\n                self.wikaNetwork = network ;\n                networkState.status = 'connected' ;\n                self.setState({network:networkState}, this.subscribeToBalance) ;\n            }) ;\n        }) ;\n    }\n\n    subscribeToBalance = () => {\n        let self = this;\n        if (self.unsubGetBalance) {\n            self.unsubGetBalance() ;\n            self.unsubGetBalance = null ;\n        }\n        let clearBalance = {\n            wika:null,\n            usd:null\n        } ;\n        self.setState({balance:clearBalance}, () => {\n            if (self.state.account && self.state.network.status==='connected') {\n            let address = self.state.account.address;\n            self.wikaNetwork.getBalance(address, (result) => {\n                let balanceWika = convertToWika(result.data.free) ;\n                let balanceUsd = wikaToUsd(balanceWika) ;\n                self.setState({\n                    balance:{\n                        wika:balanceWika,\n                        usd:balanceUsd\n                    }\n                });\n            }).then((s) => {\n                self.unsubGetBalance = s ;\n            });\n        }\n        }) ;\n    }\n\n    selectAccount = (account) => {\n        this.setState({account: account}, this.subscribeToBalance) ;\n    }\n\n    navigate = (tab) => {\n        this.setState({tab: tab});\n    }\n\n    componentWillUnmount = () => {\n        if (this.unsubGetBalance) {\n            this.unsubGetBalance() ;\n        }\n    }\n\n    render() {\n        return (\n            <div style={{padding: '0px 40px'}}>\n                <AppContext.Provider value={{\n                    // Context data\n                    tab: this.state.tab,\n                    network: this.state.network,\n                    account: this.state.account,\n                    balance: this.state.balance,\n                    // Context functions\n                    navigate: this.navigate,\n                    selectAccount: this.selectAccount,\n                    // Endpoints configuration\n                    wikaNetwork: this.wikaNetwork,\n                    apiEndpoint: this.state.api\n                }}>\n                    <NavBar/>\n                    <MainContent />\n                </AppContext.Provider>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/wika.css';\nimport './css/pico.min.css';\nimport './css/awesome.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App ref={(x) => {window.wikaReactApp = x;}}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}