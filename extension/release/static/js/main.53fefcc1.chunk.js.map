{"version":3,"sources":["commons/utils/misc.js","commons/utils/network.js","commons/utils/context.js","commons/components/MainLogo.jsx","commons/components/NetworkButton.jsx","commons/components/AccountButton.jsx","commons/components/Header.jsx","commons/components/Splash.jsx","commons/components/like/Like1.jsx","commons/components/like/Like2.jsx","commons/components/like/Like.jsx","commons/components/recommend/Recommend.jsx","commons/components/wallet/Wallet.jsx","commons/components/account/AccountConnectModes.jsx","commons/components/account/AccountListSelection.jsx","commons/components/account/AccountConnectSelectWeb3.jsx","commons/components/account/AccountConnectSelectLocal.jsx","commons/components/account/Account.jsx","commons/components/account/AccountConnect.jsx","commons/components/like/LikedPages.jsx","commons/components/authors/OwnedPages.jsx","commons/components/authors/ClaimPage.jsx","commons/components/debug/Keccak.jsx","commons/components/debug/Wip.jsx","commons/components/MainContent.jsx","commons/components/Footer.jsx","commons/storage/StorageWeb.jsx","commons/storage/StorageFactory.jsx","App.jsx","index.js"],"names":["copyToClipboard","inputId","document","getElementById","select","execCommand","convertToWika","value","formatWika","toFixed","formatUsd","shortenAddress","address","substr","bytesToString","array","out","i","len","c","char2","char3","length","String","fromCharCode","bytesToHex","byteArray","s","forEach","byte","toString","slice","importAccount","phrase","newPair","Keyring","type","addFromUri","addressRaw","accountName","WikaNetwork","endpoint","connect","callback","self","wsProvider","WsProvider","ApiPromise","create","provider","then","api","disconnect","getBalance","query","system","account","getUrl","url","likes","urls","getLike","getLikePrice","likePrice","getOwnersRequestPrice","owners","requestPrice","getUrlOwner","getOwnerRequest","requests","getOwnerResult","results","getBlockNumber","number","getUrlInfo","Promise","all","result","ans","urlLikes","Number","likesSubmittedAt","likesSubmittedCount","likesSubmittedRemaining","txMonitor","status","isInBlock","isFinalized","unsubTransaction","err","console","log","JSON","stringify","dispatchError","data","asModule","index","error","parseError","sendTransaction","tx","mode","sendTransactionWeb3","sendTransactionLocal","signer","signAndSend","catch","source","web3FromSource","injector","txLike","referrer","numLikes","like","txOwnerRequest","requestUrlCheck","this","AppContext","React","createContext","MainLogo","buttonStyle","backgroundColor","fontSize","color","Fab","size","sx","onClick","context","navigate","className","Component","contextType","NetworkButton","textTransform","height","network","style","variant","renderStatus","AccountButton","display","alignItems","marginLeft","balance","wika","renderConnected","renderDisconnected","renderButtonContent","Header","headerStyle","background","padding","textAlign","titleStyle","networkStyle","position","top","right","accountStyle","Typography","props","title","Splash","renderColumn","image","text","Card","CardMedia","component","alt","width","marginTop","CardContent","gutterBottom","render","Grid","container","spacing","item","xs","Container","align","Like1","handleNumLikeChange","event","setState","target","update","submitLike","state","wikaNetwork","monitorLike","txStatus","alert","renderButton","CircularProgress","Fragment","paddingBottom","borderRadius","CardHeader","subheader","Stack","direction","Slider","onChange","CardActions","Like2","rewardWaitFactor","Like","price","handleUrlChange","lookedUp","lookupUrl","subscribeToUrl","subscribeToLike","clearUrl","unsubscribe","unsubUrl","unsubLike","componentWillUnmount","renderInputAdornment","InputAdornment","Button","renderUrlInput","inputProps","endAdornment","TextField","id","label","fullWidth","InputProps","renderUrlNumLikes","renderDivider","Divider","renderPart2","rewardPrct","rewardTarget","Recommend","Wallet","AccountConnectModes","componentDidMount","enableWeb3","fetchLocalAccounts","web3Wallets","web3Enable","storage","get","localAccounts","handleModeChange","continue","next","renderSwitch","renderRadioChoice","renderMessage","renderContinueButton","renderWait","FormControl","FormLabel","RadioGroup","name","FormControlLabel","control","Radio","message","disabled","AccountListSelection","handleAccountChange","selectAccount","renderAccountItem","meta","ListItem","ListItemAvatar","ListItemText","primary","secondary","ListItemIcon","List","accounts","map","AccountConnectSelectWeb3","getAccounts","web3Accounts","handleProviderChange","back","addressU8","decodeAddress","u8aToHex","renderProviderItem","MenuItem","version","renderSelectProvider","Box","InputLabel","Select","labelId","providers","renderAccountList","renderActions","AccountConnectSelectLocal","Account","copyElement","element","renderAccountBox","usd","renderAddressBox","readOnly","startAdornment","href","renderDisconnectButton","AccountConnect","cancelMode","selectedMode","selectMode","LikedPages","queryApi","apiEndpoint","fetch","response","json","OwnedPages","ClaimPage","DEFAULT_ACCOUNT","NUM_BLOCKS_TO_WAIT","styleTextArea","fontFamily","styleButton","marginBottom","subscribeToBlockNumber","unsubBlockNumber","currentBlock","subscribeToUrlOwner","subscribeToOwnerRequest","subscribeToOwnerResult","unsubUrlOwner","owner","unsubOwnerRequest","requestBlock","requestAccount","unsubOwnerResult","resultBlock","resultNumVotes","resultNumVotesYes","resultNumVotesMajority","resultIntro","resultMark","resultOutcome","unsubscribeUrl","submitRequest","monitorRequest","testUrl","copyMark","renderPart1","defaultValue","formatOwner","renderPart3","renderTestResult","testResult","renderPart4","currentRequester","renderSubmitRequest","renderMyRequest","renderOtherRequest","renderMyRequestProgress","blocks_done","progress","LinearProgress","renderMyRequestResult","icon","outcome","Keccak","updateText","generateHash","hash","keccakAsHex","copy","Wip","MainContent","mainStyle","overflow","pages","splash","recommend","wallet","liked_pages","owned_pages","claim_page","keccak","getTitle","page","tab","renderPage","Footer","styleFooter","bottom","left","borderTop","styleMenu","buttonClicked","activeButton","toggleMenu","toggle","menuOpened","renderMenuItem","renderMenu","Paper","MenuList","renderIcon","StorageWeb","key","resolve","memory","set","account1","account2","mnemonicGenerate","StorageClasses","getStorageInterface","env","window","location","split","App","loadCrypto","cryptoState","crypto","cryptoWaitReady","connectNetwork","networkState","initLocalStorage","subscribeToBalance","unsubGetBalance","balanceWika","free","balanceUsd","Provider","ReactDOM","StrictMode","ref","x","wikaReactApp"],"mappings":"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","file":"static/js/main.53fefcc1.chunk.js","sourcesContent":["import AES from 'crypto-js/aes';\nimport Utf8 from 'crypto-js/enc-utf8';\nimport { Keyring } from '@polkadot/api';\nimport { mnemonicGenerate } from '@polkadot/util-crypto';\n\n\nconst BALANCE_UNIT = 1000000000000;\nconst WIKA_TO_USD = 0.02 ;\n\n\n\n\n// Copy to clipboard\n\nfunction copyToClipboard(inputId) {\n    var copyText = document.getElementById(inputId);\n    copyText.select();\n    document.execCommand(\"copy\");\n}\n\n\n\n// Convert & format\n\nfunction convertToWika(value) {\n    return value / BALANCE_UNIT;\n}\n\nfunction formatWika(value) {\n    if (value != null) {\n        return value.toFixed(2) + ' W';\n    } else {\n        return '-';\n    }\n}\n\nfunction wikaToUsd(value) {\n    if (value!=null) {\n        return value * WIKA_TO_USD ;\n    } else {\n        return null;\n    }\n}\n\nfunction formatUsd(value) {\n    if (value != null) {\n        return value.toFixed(2) + ' US$';\n    } else {\n        return '-';\n    }\n}\n\nfunction shortenText(text) {\n    const maxLength = 50;\n    if (text == null) {\n        return \"\";\n    } else if (text.length > maxLength) {\n        return text.substr(0, maxLength) + '...';\n    } else {\n        return text;\n    }\n}\n\nfunction shortenAddress(address) {\n    if (address == null) {\n        return \"\";\n    } else {\n        return address.substr(0,5) + '...' + address.substr(44) ;\n    }\n}\n\nfunction hexToBytes(hex) {\n    if (hex == null) {\n        return null;\n    }\n    if (hex.substr(0, 2) === '0x') {\n        hex = hex.substr(2);\n    }\n    for (var bytes = [], c = 0; c < hex.length; c += 2) {\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    }\n    return bytes;\n}\n\nfunction bytesToString(array) {\n    if (array==null) return null ;\n    var out, i, len, c;\n    var char2, char3;\n\n    out = \"\";\n    len = array.length;\n    i = 0;\n    while (i < len) {\n        c = array[i++];\n        switch (c >> 4) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                // 0xxxxxxx\n                out += String.fromCharCode(c);\n                break;\n            case 12:\n            case 13:\n                // 110x xxxx   10xx xxxx\n                char2 = array[i++];\n                out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n                break;\n            case 14:\n                // 1110 xxxx  10xx xxxx  10xx xxxx\n                char2 = array[i++];\n                char3 = array[i++];\n                out += String.fromCharCode(((c & 0x0F) << 12) |\n                    ((char2 & 0x3F) << 6) |\n                    ((char3 & 0x3F) << 0));\n                break;\n            default:\n                break;\n        }\n    }\n    return out;\n}\n\nfunction bytesToHex(byteArray) {\n  var s = '0x';\n  byteArray.forEach(function (byte) {\n      s += ('0' + (byte & 0xFF).toString(16)).slice(-2);\n  });\n  return s;\n}\n\n\n\n\n// Parse error returned from polkadot API\n\nfunction parseError(result) {\n    console.log(JSON.stringify(result));\n    if (result.dispatchError) {\n        try {\n            let data = result.dispatchError.asModule;\n            let index = data.index;\n            let error = data.error;\n            return \"Transaction error (\" + index + \",\" + error + \")\";\n        } catch (err) {\n            return \"Transaction error\";\n        }\n    } else {\n        return null;\n    }\n}\n\n\n\n\n// AES encryption\n\nfunction encryptWithAES(text, passphrase)  {\n  return AES.encrypt(text, passphrase).toString();\n};\n\nfunction decryptWithAES(ciphertext, passphrase) {\n  const bytes = AES.decrypt(ciphertext, passphrase);\n  const originalText = bytes.toString(Utf8);\n  return originalText;\n};\n\n\n\n\n// New local accounts\n\nfunction importAccount(phrase) {\n  let keyring = new Keyring({ type: 'sr25519' });\n  let newPair = keyring.addFromUri(phrase) ;\n  let account = {\n      address: newPair.address,\n      addressRaw: bytesToHex(newPair.addressRaw),\n      phrase: phrase,\n      accountName: '<Account Name>'\n  } ;\n  return account ;\n}\n\nfunction generateAccount() {\n  let phrase = mnemonicGenerate(12);\n  return importAccount(phrase) ;\n}\n\n\n\n\nexport {\n    copyToClipboard,\n    convertToWika, formatWika, wikaToUsd, formatUsd, shortenText, shortenAddress,hexToBytes, bytesToString, bytesToHex,\n    parseError,\n    encryptWithAES, decryptWithAES,\n    importAccount, generateAccount\n} ;\n","import {ApiPromise, WsProvider, Keyring} from '@polkadot/api';\nimport {web3FromSource} from '@polkadot/extension-dapp';\nimport {parseError} from \"./misc\";\n\n\nclass WikaNetwork {\n\n    constructor(endpoint) {\n        this.endpoint = endpoint ;\n        this.api = null ;\n    }\n\n    connect = (callback) => {\n        let self = this ;\n        self.wsProvider = new WsProvider(self.endpoint) ;\n        return ApiPromise.create({ provider: self.wsProvider })\n            .then((api) => {\n                self.api = api ;\n                callback() ;\n            }) ;\n    }\n\n    disconnect = (callback) => {\n        return this.api.disconnect().then(callback) ;\n    }\n\n    getBalance = (address, callback) => {\n        return this.api.query.system.account(address, callback) ;\n    }\n\n    getUrl = (url, callback) => {\n        return this.api.query.likes.urls(url, callback) ;\n    }\n\n    getLike = (address, url, callback) => {\n        return this.api.query.likes.likes(address, url, callback) ;\n    }\n\n    getLikePrice = (callback) => {\n        return this.api.query.likes.likePrice(callback) ;\n    }\n\n    getOwnersRequestPrice = (callback) => {\n        return this.api.query.owners.requestPrice(callback) ;\n    }\n\n    getUrlOwner = (url, callback) => {\n        return this.api.query.owners.owners(url, callback) ;\n    }\n\n    getOwnerRequest = (url, callback) => {\n        return this.api.query.owners.requests(url, callback) ;\n    }\n\n    getOwnerResult = (url, callback) => {\n        return this.api.query.owners.results(url, callback) ;\n    }\n\n    getBlockNumber = (callback) => {\n        return this.api.query.system.number(callback) ;\n    }\n\n    getUrlInfo = (address, url, callback) => {\n        Promise.all([this.api.query.likes.urls(url),this.api.query.likes.likes(address, url)])\n            .then((result) => {\n                let ans = {\n                    urlLikes: Number(result[0][0]),\n                    likesSubmittedAt: Number(result[1][0]),\n                    likesSubmittedCount:Number(result[1][1]),\n                    likesSubmittedRemaining:Number(result[1][2])\n                } ;\n                callback(ans) ;\n            }) ;\n    }\n\n\n\n    txMonitor = (callback) => (result) => {\n        let status = result.status ;\n        if (status.isInBlock) {\n            callback({status:'In block'}) ;\n        } else if (status.isFinalized) {\n            this.unsubTransaction();\n            let err = parseError(result) ;\n            if (err) {\n                callback({status:'Error', err: err}) ;\n            } else {\n                callback({status:'Done'}) ;\n            }\n        }\n    }\n\n    sendTransaction = (tx, account, callback) => {\n        let mode = account.mode ;\n        if (mode==='web3') {\n            this.sendTransactionWeb3(tx, account, callback) ;\n        } else {\n            this.sendTransactionLocal(tx, account, callback) ;\n        }\n    }\n\n    sendTransactionLocal = (tx, account, callback) => {\n        let address = account.address ;\n        let keyring = new Keyring({ type: 'sr25519' });\n        let signer = keyring.addFromUri(account.phrase);\n        console.log('sendTransactionLocal', address, signer);\n        let self = this ;\n        callback({status:'Sending'}) ;\n        tx.signAndSend(signer, self.txMonitor(callback)).then((s) => {\n            self.unsubTransaction = s;\n        }).catch((err) => {\n            callback({status:'Error', err: err}) ;\n        }) ;\n    }\n\n    sendTransactionWeb3 = (tx, account, callback) => {\n        let source = account.source ;\n        let address = account.address ;\n        console.log('sendTransactionWeb3', source, address);\n        let self = this ;\n        web3FromSource(source).then((injector) => {\n            callback({status:'Sending'}) ;\n            tx.signAndSend(address, {signer: injector.signer}, self.txMonitor(callback)).then((s) => {\n                self.unsubTransaction = s;\n            }).catch((err) => {\n                callback({status:'Error', err: err}) ;\n            }) ;\n        });\n    }\n\n\n\n\n    txLike = (account, url, referrer, numLikes, callback) => {\n        let tx = this.api.tx.likes.like(url, referrer, numLikes) ;\n        this.sendTransaction(tx, account, callback) ;\n    }\n\n    txOwnerRequest = (account, url, callback) => {\n        let tx = this.api.tx.owners.requestUrlCheck(url) ;\n        this.sendTransaction(tx, account, callback) ;\n    }\n\n\n}\n\nexport default WikaNetwork ;\n","import React from \"react\";\n\nconst AppContext = React.createContext();\n\nexport default AppContext ;\n","import React from 'react';\nimport Fab from '@mui/material/Fab';\n\n\nimport AppContext from \"../utils/context\";\n\n\nclass MainLogo extends React.Component {\n\n    static contextType = AppContext;\n\n    buttonStyle = {\n        backgroundColor: 'white',\n        '&:hover': {\n          backgroundColor: '#e0f5fd',\n        },\n        fontSize: '28px',\n        color: '#1976d2'\n    }\n\n    render() {\n        return (\n            <Fab size=\"medium\"\n                 sx={this.buttonStyle}\n                 aria-label=\"home\"\n                 onClick={() => this.context.navigate('splash')}>\n                <i className=\"far fa-thumbs-up\"></i>\n            </Fab>\n        );\n    }\n\n}\n\n\nexport default MainLogo ;\n\n\n\n","import React from 'react';\nimport Fab from '@mui/material/Fab';\n\nimport AppContext from '../utils/context' ;\n\n\n\nclass NetworkButton extends React.Component {\n\n    static contextType = AppContext;\n\n    buttonStyle = {\n        backgroundColor: 'white',\n        '&:hover': {\n          backgroundColor: '#e0f5fd',\n        },\n        textTransform: 'none',\n        fontSize: '11px',\n        height: '18px'\n    }\n\n    renderStatus() {\n        switch (this.context.network.status) {\n            case 'connected': return <i style={{color:'green'}} className=\"fas fa-check\"></i> ;\n            case 'disconnected': return <i style={{color:'red'}} className=\"fas fa-times\"></i> ;\n            case 'connecting': return <i style={{color:'orange'}} className=\"fas fa-spinner\"></i> ;\n            default: return \"\" ;\n        }\n    }\n\n    render() {\n        return (\n            <Fab size=\"small\" variant=\"extended\" sx={this.buttonStyle}>\n                <i className=\"fas fa-network-wired\"></i>\n                &nbsp;&nbsp;\n                {this.context.network.type}\n                &nbsp;&nbsp;\n                {this.renderStatus()}\n            </Fab>\n        );\n    }\n\n}\n\n\nexport default NetworkButton ;\n\n\n\n","import React from 'react';\nimport Identicon from \"@polkadot/react-identicon\";\nimport Fab from '@mui/material/Fab';\n\n\nimport AppContext from '../utils/context' ;\nimport {formatWika} from \"../utils/misc\";\n\n\nclass AccountButton extends React.Component {\n\n    static contextType = AppContext;\n\n    buttonStyle = {\n        backgroundColor: 'white',\n        '&:hover': {\n          backgroundColor: '#e0f5fd',\n        },\n    }\n\n    renderDisconnected() {\n        return (\n            <span>\n                <i className=\"far fa-user-circle\"></i>\n                &nbsp;\n                Connect\n            </span>\n        );\n    }\n\n    renderConnected() {\n        return (\n            <div style={{display:'flex', alignItems: 'center'}}>\n                <Identicon size={30} value={this.context.account.address}/>\n                <div style={{marginLeft:'10px'}}>{formatWika(this.context.balance.wika)}</div>\n            </div>\n        );\n    }\n\n    renderButtonContent() {\n        if (this.context.account) {\n            return this.renderConnected() ;\n        } else {\n            return this.renderDisconnected() ;\n        }\n    }\n\n    render() {\n        return (\n            <Fab size=\"small\" variant=\"extended\" sx={this.buttonStyle}\n                 onClick={() => this.context.navigate('account')}>\n                {this.renderButtonContent()}\n            </Fab>\n        );\n    }\n\n}\n\n\nexport default AccountButton ;\n\n\n\n","import React from 'react';\nimport Typography from '@mui/material/Typography' ;\n\n\nimport AppContext from \"../utils/context\";\nimport MainLogo from \"./MainLogo\";\nimport NetworkButton from \"./NetworkButton\";\nimport AccountButton from \"./AccountButton\";\n\n\nclass Header extends React.Component {\n\n    static contextType = AppContext;\n\n    headerStyle = {\n        display: 'flex',\n        alignItems: 'center',\n        background: '#F9F9F9',\n        padding: '5px 15px',\n        textAlign: 'center'\n    }\n\n    titleStyle = {\n        marginLeft:'10px'\n    }\n\n    networkStyle = {\n        position: 'absolute',\n        top: '4px',\n        right: '15px',\n    }\n\n    accountStyle = {\n        position: 'absolute',\n        top: '35px',\n        right: '15px'\n    }\n\n    render() {\n        return (\n            <div style={this.headerStyle}>\n                <MainLogo />\n                <Typography variant=\"h5\" color=\"primary\" style={this.titleStyle}>\n                    {this.props.title}\n                </Typography>\n                <div style={this.networkStyle}>\n                    <NetworkButton />\n                </div>\n                <div style={this.accountStyle}>\n                    <AccountButton />\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Header ;\n\n\n\n","import React from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Fab from '@mui/material/Fab';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\n\n\nimport AppContext from \"../utils/context\";\n\n\nclass Splash extends React.Component {\n\n    static contextType = AppContext;\n\n    renderColumn = (title, image, text) => {\n        return (\n             <Card>\n              <CardMedia\n                component=\"img\"\n                image={image}\n                alt=\"\"\n                sx={{width:'80%', marginLeft:'10%', marginTop:'10px'}}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h6\" component=\"div\">\n                  {title}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {text}\n                </Typography>\n              </CardContent>\n            </Card>\n        ) ;\n    }\n\n    render = () => {\n        return (\n            <div>\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    {this.renderColumn(\n                        \"Consumers\",\n                        \"images/splash1.png\",\n                        \"Like your favorite pages and reward the authors and previous likers.\")}\n                  </Grid>\n                  <Grid item xs={4}>\n                    {this.renderColumn(\n                        \"Authors\",\n                        \"images/splash2.png\",\n                        \"Register any web page and Wika users will be able to reward you directly.\")}\n                  </Grid>\n                  <Grid item xs={4}>\n                    {this.renderColumn(\n                        \"Everyone\",\n                        \"images/splash3.png\",\n                        \"Protect your privacy and promote quality content.\")}\n                  </Grid>\n                </Grid>\n                <br/>\n                {this.context.account==null?\n                    <Container align=\"center\">\n                        <Fab variant=\"extended\" color=\"primary\"\n                             onClick={() => this.context.navigate('account')}>\n                            Connect your account and get started now!\n                        </Fab>\n                    </Container>\n                 :\"\"}\n            </div>\n        );\n    }\n\n}\n\n\nexport default Splash ;\n\n\n","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Container from '@mui/material/Container';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\nimport CardActions from '@mui/material/CardActions';\nimport Fab from '@mui/material/Fab';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass Like1 extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            numLikes: 1\n        };\n    }\n\n    handleNumLikeChange = (event) => {\n        this.setState({numLikes: event.target.value}, this.update) ;\n    }\n\n    submitLike = () => {\n        let self = this;\n        let url = self.props.url ;\n        let referrer = self.state.referrer ;\n        let numLikes = self.state.numLikes ;\n        let account = self.context.account ;\n        this.context.wikaNetwork.txLike(account, url, referrer, numLikes, this.monitorLike) ;\n    }\n\n    monitorLike = (result) => {\n        console.log('monitorLike', result)\n        let status = result.status ;\n        if (status === 'Sending') {\n            this.setState({txStatus: 'Sending transaction...'}) ;\n        } else if (status === 'In block') {\n            this.setState({txStatus: 'In block...'}) ;\n        } else if (status === 'Done') {\n            this.setState({txStatus: null}) ;\n        } else if (status === 'Error') {\n            this.setState({txStatus: null}) ;\n            alert(\"Transaction failed: \"+result.err) ;\n        } else {\n            console.log('Warning, unrecognized monitorLike status', result) ;\n        }\n    }\n\n    renderButton = () => {\n        if (this.state.txStatus==null) {\n            return (\n                <Fab color=\"primary\" variant=\"extended\" onClick={this.submitLike}>\n                    Send {this.state.numLikes} &nbsp;<i className=\"fas fa-thumbs-up\"></i>\n                </Fab>\n            );\n        } else {\n            return (\n                <CircularProgress />\n            ) ;\n        }\n    }\n\n    render = () => {\n        return (\n            <React.Fragment>\n\n               <Container align=\"center\">\n                   <Card sx={{width: '75%', paddingBottom: '10px', borderRadius: '25px'}}>\n                        <CardHeader title=\"Like transaction\"\n                                    subheader={this.props.url}\n                        />\n                        <CardContent>\n                            <Stack direction=\"row\" sx={{width:'75%'}}>\n                                <Slider aria-label=\"Number of likes\" value={this.state.numLikes} onChange={this.handleNumLikeChange} />\n                            </Stack>\n                        </CardContent>\n                        <CardActions>\n                            <Container>{this.renderButton()}</Container>\n                        </CardActions>\n                   </Card>\n               </Container>\n\n            </React.Fragment>\n        );\n    }\n\n}\n\n\nexport default Like1 ;\n","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\n\nclass Like2 extends React.Component {\n\n\n    render = () => {\n        return (\n            <Container align=\"center\">\n                   <Card sx={{width: '75%', paddingBottom: '10px', borderRadius: '25px'}}>\n                        <CardHeader title=\"Thank you!\"\n                                    subheader={this.props.url}\n                        />\n                        <CardContent>\n                            <Typography>\n                                You sent <strong>{this.props.likesSubmittedCount} likes</strong>.\n                            </Typography>\n                            <br/>\n                            <Typography>\n                                You are ranked <strong>#{this.props.likesSubmittedAt+1}</strong> on the queue of people who liked this page,\n                                therefore, you will start receiving rewards when it hits {(this.props.likesSubmittedAt*this.props.rewardWaitFactor)+2} likes.\n                            </Typography>\n                        </CardContent>\n                   </Card>\n            </Container>\n        );\n    }\n\n}\n\nexport default Like2 ;\n\n\n","import React from 'react';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\n\n\nimport AppContext from \"../../utils/context\";\nimport {convertToWika} from \"../../utils/misc\";\nimport Like1 from \"./Like1\";\nimport Like2 from \"./Like2\";\n\n\nclass Like extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lookedUp:false,\n            url: \"\",\n            referrer: null,\n            likePrice: null,\n            rewardPrct: '33%',\n            rewardTarget: 1.33,\n            rewardWaitFactor: 4,\n            urlLikes: null,\n            likesSubmittedAt: null,\n            likesSubmittedCount: null,\n            likesSubmittedRemaining: null\n        }\n    }\n\n    componentDidMount() {\n        this.getLikePrice() ;\n    }\n\n    getLikePrice = () => {\n        let self = this;\n        self.context.wikaNetwork.getLikePrice((result) => {\n            let price = convertToWika(result) ;\n            self.setState({likePrice:price}) ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    handleUrlChange = (event) => {\n        if (this.state.lookedUp) return ;\n        this.setState({url: event.target.value}) ;\n    }\n\n    lookupUrl = () => {\n        this.subscribeToUrl() ;\n        this.subscribeToLike() ;\n        this.setState({lookedUp:true}) ;\n    }\n\n    clearUrl = () => {\n        this.unsubscribe() ;\n        this.setState({\n            lookedUp:false,\n            url:\"\",\n            likesSubmittedCount:null,\n        }) ;\n    }\n\n    subscribeToUrl = () => {\n        let self = this;\n        if (self.unsubUrl) {\n            self.unsubUrl() ;\n            self.unsubUrl = null ;\n        }\n        let url = this.state.url;\n        self.context.wikaNetwork.getUrl(url, (result) => {\n            let urlLikes = Number(result[0]) ;\n            self.setState({urlLikes:urlLikes}) ;\n        }).then((s) => {\n            self.unsubUrl = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    subscribeToLike = () => {\n        let self = this;\n        if (self.unsubLike) {\n            self.unsubLike() ;\n            self.unsubLike = null ;\n        }\n        let address = this.context.account.address;\n        let url = this.state.url;\n        self.context.wikaNetwork.getLike(address, url, (result) => {\n            self.setState({\n                likesSubmittedAt:Number(result[0]),\n                likesSubmittedCount:Number(result[1]),\n                likesSubmittedRemaining:Number(result[2])\n            }) ;\n        }).then((s) => {\n            self.unsubLike = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    componentWillUnmount = () => {\n        this.unsubscribe() ;\n    }\n\n    unsubscribe = () => {\n        if (this.unsubUrl) {\n            this.unsubUrl() ;\n        }\n        if (this.unsubLike) {\n            this.unsubLike() ;\n        }\n    }\n\n\n\n\n\n    renderInputAdornment = () => {\n        return (\n            <InputAdornment position=\"end\">\n                {this.state.lookedUp?\n                <Button onClick={this.clearUrl} variant=\"contained\" color=\"secondary\"><i className=\"fas fa-backspace\"></i></Button>\n                :<Button onClick={this.lookupUrl} variant=\"contained\" color=\"primary\"><i className=\"fas fa-search\"></i></Button>}\n            </InputAdornment>\n        ) ;\n    }\n\n    renderUrlInput = () => {\n        let inputProps = {endAdornment: this.renderInputAdornment()} ;\n        return (<TextField\n                    id=\"lookup-url-input\"\n                    label=\"Lookup URL status\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    value={this.state.url}\n                    onChange={this.handleUrlChange}\n                    InputProps={inputProps} />) ;\n    }\n\n    renderUrlNumLikes = () => {\n        if (this.state.lookedUp && this.state.urlLikes!=null) {\n            return (\n                <Typography variant=\"body2\" sx={{marginTop:\"5px\"}} >\n                    This page received <strong>{this.state.urlLikes} likes</strong>.\n                </Typography>) ;\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderDivider = () => {\n        if (this.state.lookedUp) {\n            return (<Divider />) ;\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderPart2 = () => {\n        if (this.state.lookedUp && this.state.likesSubmittedCount!=null) {\n            if (this.state.likesSubmittedCount>0) {\n                return <Like2\n                    urlLikes={this.state.urlLikes}\n                    likesSubmittedCount={this.state.likesSubmittedCount}\n                    likesSubmittedAt={this.state.likesSubmittedAt}\n                    rewardWaitFactor={this.state.rewardWaitFactor}\n                />\n            } else {\n                return <Like1\n                    url={this.state.url}\n                    urlLikes={this.state.urlLikes}\n                    likePrice={this.state.likePrice}\n                />\n            }\n        }\n    }\n\n    render = () => {\n        return (\n            <div>\n                {this.renderUrlInput()}\n                {this.renderUrlNumLikes()}\n                <br/>\n                <br/>\n                {this.renderPart2()}\n            </div>\n        ) ;\n    }\n\n}\n\nexport default Like ;\n\n\n\n","import React from 'react';\n\n\nclass Recommend extends React.Component {\n\n    render() {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Recommend ;\n\n\n","import React from 'react';\n\n\nclass Wallet extends React.Component {\n\n    render() {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Wallet ;\n\n\n","import React from \"react\";\nimport {web3Enable} from '@polkadot/extension-dapp';\nimport Typography from '@mui/material/Typography';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass AccountConnectModes extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'web3',\n            web3Wallets: null,\n            localAccounts: null\n        };\n    }\n\n    componentDidMount = () => {\n        this.enableWeb3();\n        this.fetchLocalAccounts() ;\n    }\n\n    enableWeb3 = () => {\n        this.setState({web3Wallets: null}, () => {\n            web3Enable(\"Wika Network\").then((result) => {\n                this.setState({web3Wallets: result});\n            });\n        });\n    }\n\n    fetchLocalAccounts = () => {\n        this.context.storage.get('accounts').then((result) => {\n            console.log('result', result) ;\n            this.setState({localAccounts: result});\n        });\n    }\n\n    handleModeChange = (event) => {\n        this.setState({mode:event.target.value}) ;\n    };\n\n    continue = () => {\n        if (this.state.mode==='web3') {\n            this.props.next(this.state.mode, this.state.web3Wallets) ;\n        } else {\n            this.props.next(this.state.mode, this.state.localAccounts) ;\n        }\n    }\n\n\n\n    renderSwitch = () => {\n        if (!this.state.web3Wallets) {\n            return this.renderWait();\n        } else {\n            return (\n                <React.Fragment>\n                    {this.renderRadioChoice()}\n                    <br/><br/>\n                    {this.renderMessage()}\n                    <br/><br/>\n                    {this.renderContinueButton()}\n                </React.Fragment>\n             );\n        }\n    }\n\n    renderWait = () => {\n        return (\n            <Typography variant=\"body1\">\n                <i className=\"fas fa-spinner\"></i>\n                &nbsp;&nbsp;\n                Checking availability of Web3 wallets...\n            </Typography>\n        );\n    }\n\n    renderRadioChoice = () => {\n        return (\n            <FormControl>\n              <FormLabel id=\"account-mode-radio-label\">Wallet management mode</FormLabel>\n              <RadioGroup\n                aria-labelledby=\"account-mode-radio-label\"\n                name=\"radio-buttons-group\"\n                value={this.state.mode}\n                onChange={this.handleModeChange}\n              >\n                <FormControlLabel value=\"web3\" control={<Radio />} label=\"Web3 wallet (for example polkadot.js)\" />\n                <FormControlLabel value=\"local\" control={<Radio />} label=\"Local storage of this browser\" />\n              </RadioGroup>\n            </FormControl>\n          );\n    }\n\n    renderMessage = () => {\n        let message = \"\" ;\n        if (this.state.mode==='local') {\n            message = `This will store the private keys in the local storage of the browser, protected by a password.\n                       Your password can't be retrieved if lost. Make sure to save it to safety.`\n        } else {\n            if (this.state.web3Wallets.length === 0) {\n                message = `No Polkadot wallets detected.\n                           Please install one and make sure you authorize this app to use it.`\n            } else {\n                message = `Polkadot wallets detected and authorized with this app.\n                           Let's go!`\n            }\n        }\n        return (<Typography variant=\"body1\">{message}</Typography>) ;\n    }\n\n    renderContinueButton = () => {\n        let disabled = false ;\n        if (this.state.mode==='web3' && this.state.web3Wallets.length === 0) {\n            disabled = true ;\n        }\n        return (\n            <Container align=\"right\">\n                <Button variant=\"contained\"\n                        disabled={disabled}\n                        onClick={this.continue}>\n                    Continue\n                </Button>\n            </Container>\n        ) ;\n    }\n\n    render = () => {\n        return (\n            <div>\n                {this.renderSwitch()}\n            </div>\n        );\n    }\n\n}\n\nexport default AccountConnectModes;\n\n\n","import React from \"react\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Identicon from '@polkadot/react-identicon';\nimport Radio from '@mui/material/Radio';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport RadioGroup from '@mui/material/RadioGroup';\n\n\nimport {shortenAddress} from '../../utils/misc' ;\n\n\nclass AccountListSelection extends React.Component {\n\n    handleAccountChange = (event) => {\n        this.props.selectAccount(event.target.value) ;\n    };\n\n    renderAccountItem = (item, index) => {\n        let name = \"\" ;\n        if (item.meta) {\n            name = item.meta.name;\n        } else if (item.accountName) {\n            name = item.accountName ;\n        }\n        return (\n            <React.Fragment key={index}>\n                <ListItem alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                      <Identicon value={item.address} size={40}/>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={name}\n                      secondary={shortenAddress(item.address)}\n                    />\n                    <ListItemIcon>\n                        <Radio value={index} />\n                    </ListItemIcon>\n                </ListItem>\n                <Divider />\n            </React.Fragment>\n        ) ;\n    }\n\n    render = () => {\n      return (\n        <RadioGroup\n           name=\"radio-buttons-group\"\n           value={this.props.account}\n           onChange={this.handleAccountChange}\n        >\n            <List width=\"100%\">\n              <Divider />\n              {this.props.accounts.map(this.renderAccountItem)}\n            </List>\n        </RadioGroup>\n      );\n    }\n\n}\n\nexport default AccountListSelection;\n\n\n","import React from \"react\";\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport {web3Accounts} from '@polkadot/extension-dapp';\nimport {decodeAddress} from '@polkadot/util-crypto';\nimport {u8aToHex} from '@polkadot/util';\n\n\nimport AccountListSelection from './AccountListSelection' ;\n\n\nclass AccountConnectSelectWeb3 extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            provider: 0,\n            accounts: [],\n            account: 0\n        };\n    }\n\n    componentDidMount = () => {\n        this.getAccounts();\n    }\n\n    getAccounts = () => {\n        this.setState({accounts: []}, () => {\n            web3Accounts().then((result) => {\n                this.setState({accounts: result});\n            });\n        });\n    }\n\n    handleProviderChange = (event) => {\n        this.setState({provider:event.target.value}) ;\n    };\n\n    selectAccount = (account) => {\n        this.setState({account:account}) ;\n    };\n\n    back = () => {\n        this.props.back() ;\n    }\n\n    continue = () => {\n        let account = this.state.accounts[this.state.account] ;\n        let address = account.address ;\n        let name = account.meta.name ;\n        let source = account.meta.source ;\n        let addressU8 = decodeAddress(address) ;\n        let addressRaw = u8aToHex(addressU8) ;\n        let data = {\n            mode: 'web3',\n            name: name,\n            address: address,\n            addressRaw: addressRaw,\n            source: source\n        };\n        this.props.next(data) ;\n    }\n\n\n    renderProviderItem = (item, index) => {\n        return <MenuItem key={index} value={index}>{item.name + ' ('  + item.version + ')'}</MenuItem>\n    }\n\n    renderSelectProvider = () => {\n        return (\n            <Box width=\"100%\">\n              <FormControl fullWidth>\n                <InputLabel id=\"select-web3-provider-label\">Web3 Provider</InputLabel>\n                <Select\n                  labelId=\"select-web3-provider-label\"\n                  label=\"Web3 Provider\"\n                  value={this.state.provider}\n                  onChange={this.handleProviderChange}\n                >\n                  {this.props.providers.map(this.renderProviderItem)}\n                </Select>\n              </FormControl>\n            </Box>\n        );\n    }\n\n    renderAccountList = () => {\n      return (\n        <AccountListSelection accounts={this.state.accounts}\n                              account={this.state.account}\n                              selectAccount={this.selectAccount} />\n      );\n    }\n\n    renderActions = () => {\n        return (\n            <Container align=\"right\">\n                <Button color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={this.back}>\n                    Back\n                </Button>\n                &nbsp;&nbsp;\n                <Button color=\"primary\"\n                        variant=\"contained\"\n                        onClick={this.continue}>\n                    Continue\n                </Button>\n            </Container>\n        ) ;\n    }\n\n    render = () => {\n        return (\n           <div>\n                {this.renderSelectProvider()}\n                {this.renderAccountList()}\n                <br/><br/>\n                {this.renderActions()}\n            </div>\n        );\n    }\n\n}\n\nexport default AccountConnectSelectWeb3;\n\n\n","import React from \"react\";\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\n\n\nimport AccountListSelection from './AccountListSelection' ;\n\n\nclass AccountConnectSelectLocal extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: 0\n        };\n    }\n\n    selectAccount = (account) => {\n        this.setState({account:account}) ;\n    };\n\n    back = () => {\n        this.props.back() ;\n    }\n\n    continue = () => {\n        let account = this.props.accounts[this.state.account] ;\n        let address = account.address ;\n        let name = account.accountName ;\n        let addressRaw = account.addressRaw ;\n        let phrase = account.phrase ;\n        let data = {\n            mode: 'local',\n            name: name,\n            address: address,\n            addressRaw: addressRaw,\n            phrase: phrase\n        };\n        this.props.next(data) ;\n    }\n\n\n    renderAccountList = () => {\n      return (\n        <AccountListSelection accounts={this.props.accounts}\n                              account={this.state.account}\n                              selectAccount={this.selectAccount} />\n      );\n    }\n\n    renderActions = () => {\n        return (\n            <Container align=\"right\">\n                <Button color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={this.back}>\n                    Back\n                </Button>\n                &nbsp;&nbsp;\n                <Button color=\"primary\"\n                        variant=\"contained\"\n                        onClick={this.continue}>\n                    Continue\n                </Button>\n            </Container>\n        ) ;\n    }\n\n    render = () => {\n        return (\n           <div>\n                {this.renderAccountList()}\n                <br/><br/>\n                {this.renderActions()}\n            </div>\n        );\n    }\n\n}\n\nexport default AccountConnectSelectLocal;\n\n\n","import React from \"react\";\nimport Identicon from '@polkadot/react-identicon';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\n\n\nimport AppContext from \"../../utils/context\";\nimport {copyToClipboard, formatWika, formatUsd} from \"../../utils/misc\";\n\n\nclass Account extends React.Component {\n\n    static contextType = AppContext;\n\n    copyElement = (element) => () => {\n        copyToClipboard(element) ;\n    }\n\n    disconnect = () => {\n        this.context.selectAccount(null) ;\n    }\n\n\n    renderAccountBox = () => {\n        let name = this.context.account.name ;\n        let address = this.context.account.address ;\n        return (\n            <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar>\n                  <Identicon value={address} size={40}/>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={name}\n                  secondary={formatWika(this.context.balance.wika) + ' / ' + formatUsd(this.context.balance.usd)}\n                />\n            </ListItem>\n        ) ;\n    }\n\n    renderAddressBox = (id, label, value) => {\n        return (\n            <TextField\n                id={id}\n                label={label}\n                variant=\"outlined\"\n                fullWidth={true}\n                readOnly={true}\n                value={value}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                        <a href=\"/#\" onClick={this.copyElement(id)}>\n                            <i className=\"far fa-copy\"></i>\n                        </a>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n        ) ;\n    }\n\n    renderDisconnectButton = () => {\n        return (\n            <Container sx={{textAlign:'center'}}>\n                <Button variant=\"outlined\" onClick={this.disconnect}>\n                    Disconnect this account\n                    &nbsp;&nbsp;&nbsp;\n                    <i className=\"fas fa-sign-out-alt\"></i>\n                </Button>\n            </Container>\n        ) ;\n    }\n\n    render = () => {\n        return (\n            <div>\n                {this.renderAccountBox()}\n                <br/><br/>\n                {this.renderAddressBox(\"account_address_substrate_element\",\n                                       \"Address in Substrate format\",\n                                       this.context.account.address)}\n                <br/><br/>\n                {this.renderAddressBox(\"account_address_raw_element\",\n                                       \"Address in raw format\",\n                                       this.context.account.addressRaw)}\n                <br/><br/>\n                {this.renderDisconnectButton()}\n            </div>\n        );\n    }\n\n}\n\nexport default Account;\n\n\n","import React from \"react\";\n\n\nimport AppContext from \"../../utils/context\";\nimport AccountConnectModes from \"./AccountConnectModes\";\nimport AccountConnectSelectWeb3 from \"./AccountConnectSelectWeb3\";\nimport AccountConnectSelectLocal from \"./AccountConnectSelectLocal\";\nimport Account from \"./Account\";\n\n\n\nclass AccountConnect extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedMode: null,\n            data: null,\n        }\n    }\n\n    cancelMode = () => {\n        this.setState({selectedMode: null}) ;\n    }\n\n    selectMode = (mode, data) => {\n        this.setState({\n            selectedMode: mode,\n            data: data\n        }) ;\n    }\n\n    selectAccount = (account) => {\n        //alert(JSON.stringify(account)) ;\n        this.context.selectAccount(account) ;\n    }\n\n    render = () => {\n        if (this.context.account) {\n            return <Account /> ;\n        } else {\n            if (!this.state.selectedMode) {\n                return <AccountConnectModes next={this.selectMode} /> ;\n            } else {\n                if (this.state.selectedMode==='web3') {\n                    return <AccountConnectSelectWeb3 providers={this.state.data}\n                                back={this.cancelMode}\n                                next={this.selectAccount}\n                           /> ;\n                } else {\n                    return <AccountConnectSelectLocal accounts={this.state.data}\n                                back={this.cancelMode}\n                                next={this.selectAccount}\n                           /> ;\n                }\n            }\n        }\n    }\n\n}\n\nexport default AccountConnect ;\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass LikedPages extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {urls: null};\n    }\n\n    componentDidMount = () => {\n        this.queryApi() ;\n    }\n\n    queryApi = () => {\n        const self = this;\n        const address = this.context.account.address;\n        const url = this.context.apiEndpoint.url + '/user/' + address + '/liked_urls' ;\n        console.log(url) ;\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {self.setState({urls: data});});\n    }\n\n    render() {\n        return (\n            <div>\n                {JSON.stringify(this.context.apiEndpoint)}\n                <br/>\n                {JSON.stringify(this.state.urls)}\n            </div>\n        );\n    }\n\n}\n\nexport default LikedPages ;\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass OwnedPages extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {urls: null};\n    }\n\n    componentDidMount = () => {\n        this.queryApi() ;\n    }\n\n    queryApi = () => {\n        const self = this;\n        const address = this.context.account.address;\n        const url = this.context.apiEndpoint.url + '/user/' + address + '/owned_urls' ;\n        console.log(url) ;\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {self.setState({urls: data});});\n    }\n\n    render() {\n        return (\n            <div>\n                {JSON.stringify(this.context.apiEndpoint)}\n                <br/>\n                {JSON.stringify(this.state.urls)}\n            </div>\n        );\n    }\n\n}\n\nexport default OwnedPages ;\n\n\n","import React from \"react\";\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Container from '@mui/material/Container';\nimport LinearProgress from '@mui/material/LinearProgress';\n\n\nimport AppContext from \"../../utils/context\";\nimport {bytesToString, convertToWika, copyToClipboard} from \"../../utils/misc\";\n\n\nclass ClaimPage extends React.Component {\n\n    static contextType = AppContext;\n\n    DEFAULT_ACCOUNT = \"5C4hrfjw9DjXZTzV3MwzrrAr9P1MJhSrvWGWqi1eSuyUpnhM\" ;\n\n    NUM_BLOCKS_TO_WAIT = 10 ;\n\n    styleTextArea = {\n        fontFamily: 'monospace',\n        fontSize: '9px'\n    }\n\n    styleButton = {\n        padding: 0,\n        marginBottom: '4px'\n    }\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lookedUp:false,\n            url: \"\",\n            requestPrice: null,\n            owner: null,\n            requestBlock: null,\n            requestAccount: null,\n            currentBlock: null,\n            txStatus: null,\n            testResult: null\n        } ;\n    }\n\n\n    // INITIALIZATION\n    // --------------------------------\n\n    componentDidMount = () => {\n        this.getOwnersRequestPrice() ;\n        this.subscribeToBlockNumber() ;\n    }\n\n    getOwnersRequestPrice = () => {\n        let self = this;\n        self.context.wikaNetwork.getOwnersRequestPrice((result) => {\n            let price = convertToWika(result) ;\n            self.setState({requestPrice:price}) ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    subscribeToBlockNumber = () => {\n        let self = this;\n        if (self.unsubBlockNumber) {\n            self.unsubBlockNumber() ;\n            self.unsubBlockNumber = null ;\n        }\n        self.context.wikaNetwork.getBlockNumber((result) => {\n            self.setState({\n                currentBlock:Number(result)\n            }) ;\n        }).then((s) => {\n            self.unsubBlockNumber = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n\n\n\n    // Lookup URL\n    // --------------------------------\n\n    handleUrlChange = (event) => {\n        this.setState({url: event.target.value}) ;\n    }\n\n    lookupUrl = () => {\n        this.setState({\n            lookedUp: true\n        }) ;\n        this.subscribeToUrlOwner() ;\n        this.subscribeToOwnerRequest() ;\n        this.subscribeToOwnerResult() ;\n    }\n\n    subscribeToUrlOwner = () => {\n        let self = this;\n        if (self.unsubUrlOwner) {\n            self.unsubUrlOwner() ;\n            self.unsubUrlOwner = null ;\n        }\n        let url = self.state.url;\n        this.setState({owner:null}, () => {\n            self.context.wikaNetwork.getUrlOwner(url, (result) => {\n                self.setState({\n                    owner: \"\" + result\n                });\n            }).then((s) => {\n                self.unsubUrlOwner = s;\n            }).catch((err) => {\n                alert(err);\n            });\n        }) ;\n    }\n\n    subscribeToOwnerRequest = () => {\n        let self = this;\n        if (self.unsubOwnerRequest) {\n            self.unsubOwnerRequest() ;\n            self.unsubOwnerRequest = null ;\n        }\n        let url = self.state.url;\n        let clearState = {\n            requestBlock: null,\n            requestAccount: null\n        } ;\n        this.setState(clearState, () => {\n            self.context.wikaNetwork.getOwnerRequest(url, (result) => {\n                self.setState({\n                    requestBlock: Number(result[0]),\n                    requestAccount: \"\"+result[1]\n                });\n            }).then((s) => {\n                self.unsubOwnerRequest = s;\n            }).catch((err) => {\n                alert(err);\n            });\n        }) ;\n    }\n\n    subscribeToOwnerResult = () => {\n        let self = this;\n        if (self.unsubOwnerResult) {\n            self.unsubOwnerResult() ;\n            self.unsubOwnerResult = null ;\n        }\n        let url = self.state.url;\n        let clearState = {\n            resultBlock: null,\n            resultNumVotes: null,\n            resultNumVotesYes: null,\n            resultNumVotesMajority: null,\n            resultIntro: null,\n            resultMark: null,\n            resultOutcome: null\n        } ;\n        this.setState(clearState, () => {\n            self.context.wikaNetwork.getOwnerResult(url, (result) => {\n                let data = {\n                    resultBlock: Number(result[0]),\n                    resultNumVotes: Number(result[1]),\n                    resultNumVotesYes: Number(result[2]),\n                    resultNumVotesMajority: Number(result[3]),\n                    resultIntro: result[4],\n                    resultMark: result[5],\n                    resultOutcome: result[6]\n                };\n                console.log('ownerResult', data) ;\n                self.setState(data);\n            }).then((s) => {\n                self.unsubOwnerResult = s;\n            });\n        }) ;\n    }\n\n    unsubscribeUrl = () => {\n        if (this.unsubUrlOwner) {\n            this.unsubUrlOwner() ;\n        }\n        if (this.unsubOwnerRequest) {\n            this.unsubOwnerRequest() ;\n        }\n        if (this.unsubOwnerResult) {\n            this.unsubOwnerResult() ;\n        }\n    }\n\n    clearUrl = () => {\n        this.unsubscribeUrl() ;\n        this.setState({\n            lookedUp:false,\n            url:\"\",\n            owner: null\n        }) ;\n    }\n\n\n\n    // Submit and monitor the request\n    // --------------------------------\n\n    submitRequest = () => {\n        let self = this;\n        let url = self.state.url ;\n        let account = self.context.account ;\n        this.context.wikaNetwork.txOwnerRequest(account, url, this.monitorRequest) ;\n    }\n\n    monitorRequest = (result) => {\n        console.log('monitorRequest', result)\n        let status = result.status ;\n        if (status === 'Sending') {\n            this.setState({txStatus: 'Sending transaction...'}) ;\n        } else if (status === 'In block') {\n            this.setState({txStatus: 'In block...'}) ;\n        } else if (status === 'Done') {\n            this.setState({txStatus: null}) ;\n        } else if (status === 'Error') {\n            this.setState({txStatus: null}) ;\n            alert(\"Transaction failed: \"+result.err) ;\n        } else {\n            console.log('Warning, unrecognized monitorRequest status', result) ;\n        }\n    }\n\n\n    // Test the webpage ownership off-chain\n    // --------------------------------------\n\n    testUrl = () => {\n        /*let self = this;\n        let url = self.context.url ;\n        fetch(url, {\n              method: \"GET\",\n            })\n            .then(response => console.log(response))\n            .catch(err => console.log(err));*/\n    };\n\n\n    // Utils\n    // --------------------------------------\n\n    copyMark = () => {\n        copyToClipboard(\"wika_mark_element\") ;\n    };\n\n\n    // Clean-up when done\n    // --------------------------------------\n\n    componentWillUnmount = () => {\n        if (this.unsubUrlOwner) {\n            this.unsubUrlOwner() ;\n        }\n        if (this.unsubOwnerRequest) {\n            this.unsubOwnerRequest() ;\n        }\n        if (this.unsubOwnerResult) {\n            this.unsubOwnerResult() ;\n        }\n        if (this.unsubBlockNumber) {\n            this.unsubBlockNumber() ;\n        }\n    }\n\n\n\n\n\n\n\n\n    // FRONT-END Part 1\n    // --------------------------------------\n\n    renderInputAdornment = () => {\n        return (\n            <InputAdornment position=\"end\">\n                {this.state.lookedUp?\n                <Button onClick={this.clearUrl} variant=\"contained\" color=\"secondary\"><i className=\"fas fa-backspace\"></i></Button>\n                :<Button onClick={this.lookupUrl} variant=\"contained\" color=\"primary\"><i className=\"fas fa-search\"></i></Button>}\n            </InputAdornment>\n        ) ;\n    }\n\n    renderPart1 = () => {\n        let inputProps = {endAdornment: this.renderInputAdornment()} ;\n        return (<TextField\n                    id=\"lookup-url-input\"\n                    label=\"Lookup URL status\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    value={this.state.url}\n                    onChange={this.handleUrlChange}\n                    disabled={this.state.lookedUp}\n                    InputProps={inputProps} />) ;\n    }\n\n\n\n\n\n\n    // FRONT-END Part 2\n    // --------------------------------------\n\n    renderPart2 = () => {\n        if (this.state.lookedUp && this.state.owner!=null) {\n            return (\n                 <TextField\n                    label=\"Current owner\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    defaultValue={this.formatOwner(this.state.owner)}\n                    disabled={true} />) ;\n        } else {\n            return \"\";\n        }\n    }\n\n    formatOwner = (owner) => {\n        if (owner===this.DEFAULT_ACCOUNT) {\n            return \"-\" ;\n        } else if (owner===this.context.account.address) {\n            return \"You are the owner!\" ;\n        } else {\n            return owner ;\n        }\n    }\n\n\n\n\n\n\n    // FRONT-END Part 3\n    // --------------------------------------\n\n    renderPart3 = () => {\n        if (this.state.lookedUp && this.state.owner!=null && this.state.owner!==this.context.account.address) {\n           return (\n                 <React.Fragment>\n                    <Divider />\n                    <br/>\n                    <Typography variant=\"subtitle1\" >\n                        Preparation\n                    </Typography>\n\n                    <Typography variant=\"subtitle2\" >\n                        1. Copy this mark\n                    </Typography>\n                    <br/>\n                    <TextField\n                        label=\"Ownership mark\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                        defaultValue={\"wika.network/author/\" + this.context.account.addressRaw}\n                        disabled={true}\n                        InputProps={{endAdornment:<InputAdornment position=\"end\">\n                                                    <Button onClick={this.copyMark}\n                                                            variant=\"contained\"\n                                                            color=\"primary\">Copy this</Button>\n                                                   </InputAdornment>}}/>\n                    <br/><br/>\n\n                    <Typography variant=\"subtitle2\" >\n                        2. Insert it in your webpage as proof of ownership <br/>\n                        <small>(Use an invisible img or link for example.)</small>\n                    </Typography>\n\n                    <br/>\n\n                    <Typography variant=\"subtitle2\" >\n                        3. Submit your request <br/>\n                        <small>Note that the request fee is {this.state.requestPrice} W</small>\n                    </Typography>\n\n                </React.Fragment>\n            ) ;\n        } else {\n            return \"\";\n        }\n    }\n\n    renderTestResult = () => {\n        if (this.state.testResult==null) {\n            return \"\" ;\n        } else if (this.state.testResult===true) {\n            return \"YES\" ;\n        } else {\n            return \"NO\" ;\n        }\n    }\n\n\n\n    // FRONT-END Part 4\n    // --------------------------------------\n\n    renderPart4 = () => {\n        if (this.state.lookedUp) {\n            let currentRequester = this.state.requestAccount ;\n            if (currentRequester==null || currentRequester===this.DEFAULT_ACCOUNT) {\n                return this.renderSubmitRequest() ;\n            } else if (currentRequester===this.context.account.address) {\n                return this.renderMyRequest() ;\n            } else {\n                return this.renderOtherRequest() ;\n            }\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderSubmitRequest = () => {\n        if (this.state.owner!==this.context.address) {\n            return (\n                <Container align=\"center\">\n                    {this.state.txStatus==null?\n                     <Button color=\"primary\" variant=\"contained\"\n                             onClick={this.submitRequest}>Submit your request</Button>:\n                     <CircularProgress />\n                    }\n                </Container>\n            ) ;\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderMyRequestProgress = () => {\n        let blocks_done = this.state.currentBlock - this.state.requestBlock ;\n        let progress = 100 * blocks_done / this.NUM_BLOCKS_TO_WAIT ;\n        return (\n            <React.Fragment>\n                <Divider />\n                <br/>\n                <Typography variant=\"subtitle2\" >\n                    Waiting for verification results ({blocks_done}/{this.NUM_BLOCKS_TO_WAIT})...\n                </Typography>\n                <LinearProgress variant=\"determinate\" value={progress} />\n            </React.Fragment>\n        )\n    }\n\n    renderMyRequestResult = () => {\n        let icon = this.state.resultOutcome===true?\"fas fa-vote-yea\":\"fas fa-times\" ;\n        let outcome = this.state.resultOutcome===true?\"approved\":\"rejected\" ;\n        return (\n            <React.Fragment>\n                <hr/>\n                <br/>\n                <Typography variant=\"body1\">\n                    <i className={icon}></i>\n                    &nbsp;&nbsp;\n                    Your request was {outcome}.\n                </Typography>\n                <br/>\n                <Typography variant=\"body2\">\n                    Verifications: <strong>{this.state.resultNumVotes}</strong>\n                </Typography>\n                <br/>\n                <Typography variant=\"body2\">\n                    Approvals: <strong>{this.state.resultNumVotesYes}</strong>\n                </Typography>\n                <br/>\n                <Typography variant=\"body2\">\n                    Evidence data:\n                </Typography>\n                <br/>\n                <TextField\n                    label=\"Page intro\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    defaultValue={bytesToString(this.state.resultIntro)}\n                    disabled={true} />\n                <br/>\n                <TextField\n                    label=\"Mark found\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    defaultValue={bytesToString(this.state.resultMark)}\n                    disabled={true} />\n            </React.Fragment>\n        )\n    }\n\n    renderMyRequest = () => {\n        if (this.state.resultBlock===0) {\n            return this.renderMyRequestProgress() ;\n        } else {\n            return this.renderMyRequestResult() ;\n        }\n    }\n\n    renderOtherRequest = () => {\n        return (\n            <Typography variant=\"body1\" >\n                <i className=\"fas fa-exclamation-triangle\"></i> &nbsp;\n                There is currently another user trying to claim ownership for this URL.\n            </Typography>\n        )\n    }\n\n\n\n\n\n\n    // And finally the render function!\n    // --------------------------------------\n\n\n    render() {\n        return (\n            <div>\n                {this.renderPart1()}\n                <br/><br/>\n                {this.renderPart2()}\n                <br/><br/>\n                {this.renderPart3()}\n                <br/><br/>\n                {this.renderPart4()}\n            </div>\n        );\n    }\n\n}\n\n\nexport default ClaimPage ;\n\n\n","import React from \"react\";\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport {keccakAsHex} from \"@polkadot/util-crypto\";\n\n\nimport {copyToClipboard} from \"../../utils/misc\";\n\n\nclass Keccak extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state={\n            text:\"\",\n            hash:\"\"\n        }\n    }\n\n    updateText = (event) => {\n        this.setState({text:event.target.value}) ;\n    }\n\n    generateHash = () => {\n        let text = this.state.text ;\n        let hash = keccakAsHex(text) ;\n        console.log('generateHash: ' + text + ' -> ' + hash) ;\n        this.setState({\n            hash:hash\n        }) ;\n    }\n\n    copy = () => {\n        copyToClipboard(\"keccak_hash_element\") ;\n    }\n\n    renderInputAdornment = () => {\n        return (\n            <InputAdornment position=\"end\">\n                <Button onClick={this.generateHash} variant=\"contained\" color=\"primary\">Hash</Button>\n            </InputAdornment>\n        ) ;\n    }\n\n    render() {\n        let inputProps = {endAdornment: this.renderInputAdornment()} ;\n        return (\n            <div>\n                <TextField\n                    id=\"input-text-to-kekkak\"\n                    label=\"Text\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    value={this.state.text}\n                    onChange={this.updateText}\n                    InputProps={inputProps} />\n                <br/> <br/>\n                <TextField\n                    id=\"keccak_hash_element\"\n                    label=\"Hash\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    value={this.state.hash}\n                    readOnly={true} />\n                <br/>\n                <br/>\n                <Container align=\"right\">\n                        <Button variant=\"contained\" color=\"primary\"\n                             onClick={this.copy}>\n                            Copy to clipboard\n                        </Button>\n                </Container>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Keccak ;\n\n","import React from 'react';\n\n\nclass Wip extends React.Component {\n\n    render() {\n        return (\n            <div>\n            </div>\n        );\n    }\n\n}\n\nexport default Wip ;\n\n\n","import React from \"react\";\n\n\nimport AppContext from '../utils/context' ;\nimport Header from \"./Header\";\nimport Splash from \"./Splash\";\nimport Like from \"./like/Like\";\nimport Recommend from \"./recommend/Recommend\";\nimport Wallet from \"./wallet/Wallet\";\nimport AccountConnect from \"./account/AccountConnect\";\nimport LikedPages from \"./like/LikedPages\";\nimport OwnedPages from \"./authors/OwnedPages\";\nimport ClaimPage from \"./authors/ClaimPage\";\nimport Keccak from \"./debug/Keccak\";\nimport Wip from \"./debug/Wip\";\n\n\nclass MainContent extends React.Component {\n\n    static contextType = AppContext;\n\n    mainStyle = {\n        padding: '30px 20px 15px 20px',\n        height: '415px',\n        background: \"linear-gradient(171.17deg, #B5FFB4 -41.33%, #E1F6FF 12.71%, #FFF496 105.58%, #FED5FF 154.44%)\",\n        overflow: \"scroll\"\n    }\n\n    pages = {\n        splash: {title:\"Welcome to Wika!\", component:<Splash />} ,\n        like: {title:\"Like a web page\", component:<Like />} ,\n        recommend: {title:\"Recommendations\", component:<Recommend />} ,\n        wallet: {title:\"Wallet\", component:<Wallet />} ,\n        account: {title:\"Account\", component:<AccountConnect />} ,\n        liked_pages: {title:\"Liked pages\", component:<LikedPages />} ,\n        owned_pages: {title:\"Owned pages\", component:<OwnedPages />} ,\n        claim_page: {title:\"Claim page ownership\", component:<ClaimPage />} ,\n        keccak: {title:\"Keccak\", component:<Keccak />}\n    }\n\n    getTitle = () => {\n        let page = this.pages[this.context.tab] ;\n        if (page) {\n            return page.title ;\n        } else {\n            return \"WIP\" ;\n        }\n    }\n\n    renderPage = () => {\n        let page = this.pages[this.context.tab] ;\n        if (page) {\n            return page.component ;\n        } else {\n            return <Wip /> ;\n        }\n    }\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <Header title={this.getTitle()} />\n                <div style={this.mainStyle}>\n                    {this.renderPage()}\n                </div>\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default MainContent ;\n","import React from 'react';\nimport Paper from '@mui/material/Paper';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Fab from '@mui/material/Fab';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\n\nimport AppContext from \"../utils/context\";\n\n\nclass Footer extends React.Component {\n\n    static contextType = AppContext;\n\n    styleFooter = {\n        backgroundColor: '#F9F9F9',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        height: '60px',\n        padding: '10px 50px',\n        borderTop: '1px dashed lightgray'\n    }\n\n    styleMenu = {\n        position: 'absolute',\n        bottom: '85px',\n        right: '5px'\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuOpened: false,\n            activeButton: null\n        };\n    }\n\n    buttonClicked = (value) => {\n        this.setState({activeButton: value}) ;\n        if (value==='toggleMenu') {\n            this.toggleMenu() ;\n        } else {\n            this.navigate(value) ;\n        }\n    }\n\n    toggleMenu = () => {\n        let toggle = !this.state.menuOpened ;\n        this.setState({menuOpened:toggle}) ;\n    }\n\n    navigate = (tab) => {\n        this.setState({menuOpened:false}) ;\n        this.context.navigate(tab);\n    }\n\n\n\n\n    renderMenuItem = (icon, text, target) => {\n        return (\n            <MenuItem onClick={() => this.navigate(target)}>\n              <ListItemIcon>\n                <i className={'far '+icon}></i>\n              </ListItemIcon>\n              <ListItemText>\n                {text}\n              </ListItemText>\n            </MenuItem>\n        ) ;\n    }\n\n    renderMenu = () => {\n        if (this.state.menuOpened) {\n            return (\n                <Paper style={this.styleMenu}>\n                    <MenuList>\n                        {this.renderMenuItem('fa-user', 'Account', 'account')}\n                        {this.renderMenuItem('fa-heart', 'Liked pages', 'liked_pages')}\n                        {this.renderMenuItem('fa-bookmark', 'Owned pages', 'owned_pages')}\n                        {this.renderMenuItem('fa-registered', 'Claim page ownership', 'claim_page')}\n                        {this.renderMenuItem('fa-file-code', 'Keccak 256', 'keccak')}\n                        {this.renderMenuItem('fa-handshake', 'Blockchains', 'blockchains')}\n                        {this.renderMenuItem('fa-save', 'Settings', 'settings')}\n                        {this.renderMenuItem('fa-gem', 'About', 'about')}\n                    </MenuList>\n                </Paper>\n            );\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderIcon = (label, icon, target) => {\n        let color = \"default\" ;\n        if (target === this.state.activeButton) {\n            color = \"primary\" ;\n        }\n        return (<Grid item xs={3} align=\"center\">\n                    <Fab size=\"small\"\n                         color={color}\n                         aria-label=\"icon\"\n                         onClick={() => this.buttonClicked(target)}\n                         sx={{fontSize: '18px', marginBottom:'5px'}}>\n                        <i className={'far '+icon}></i>\n                    </Fab>\n                    <br/>\n                    <Typography variant=\"subtitle2\" color={color} onClick={() => this.buttonClicked(target)}>\n                        {label}\n                    </Typography>\n                </Grid>);\n    }\n\n    renderSwitch() {\n        if (!this.context.account) {\n            return \"\" ;\n        } else {\n            return (<React.Fragment>\n                      <Grid container spacing={2}>\n                        {this.renderIcon('Like', 'fa-thumbs-up', 'like')}\n                        {this.renderIcon('Buy', 'fa-credit-card', 'buy')}\n                        {this.renderIcon('Send', 'fa-paper-plane', 'wallet')}\n                        {this.renderIcon('More', 'fa-plus-square', 'toggleMenu')}\n                      </Grid>\n                      {this.renderMenu()}\n                    </React.Fragment>) ;\n        }\n    }\n\n    render() {\n        return (<div style={this.styleFooter}>\n                    {this.renderSwitch()}\n                </div>) ;\n    }\n\n}\n\n\nexport default Footer ;\n\n\n\n","import {importAccount, generateAccount} from '../utils/misc' ;\n\n\nclass StorageWeb {\n\n  constructor() {\n    this.memory = {} ;\n    let account1 = importAccount(\"script online mail crystal echo bind silver shrug panel prepare elite age\") ;\n    account1.accountName = 'PublicTest' ;\n    let account2 = generateAccount() ;\n    account2.accountName = 'RandomTest' ;\n    this.memory['accounts'] = [\n        account1, account2\n    ]\n  }\n\n  get = (key) => {\n    return Promise.resolve(this.memory[key]) ;\n  }\n\n  set = (key, value) => {\n    this.memory[key] = value ;\n    return Promise.resolve() ;\n  }\n\n}\n\nexport default StorageWeb;","//import StorageExtension from './StorageExtension'\nimport StorageWeb from './StorageWeb'\n\n\nconst StorageClasses = {\n  'extension': StorageWeb,\n  'web': StorageWeb\n}\n\nfunction getStorageInterface() {\n    const url = window.location.href\n    const env = (url.split(':')[0] === 'chrome-extension') ? 'extension' : 'web'\n    const storage = new StorageClasses[env]()\n    return storage ;\n}\n\n\nexport default getStorageInterface;","import React from \"react\";\nimport {cryptoWaitReady} from '@polkadot/util-crypto';\n\n\nimport WikaNetwork from './commons/utils/network' ;\nimport AppContext from './commons/utils/context' ;\nimport {convertToWika, wikaToUsd} from \"./commons/utils/misc\";\nimport MainContent from './commons/components/MainContent' ;\nimport Footer from './commons/components/Footer' ;\nimport getStorageInterface from './commons/storage/StorageFactory' ;\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tab: \"splash\",\n            crypto: {\n                status: 'loading'\n            },\n            network: {\n                type: \"Wika Testnet\",\n                url: \"wss://testnode3.wika.network:443\",\n                status: 'connecting'\n            },\n            api: {\n                type: \"Test API\",\n                url: \"https://api-test.wika.network\"\n            },\n            account: null,\n            balance: {\n                wika:null,\n                usd:null\n            },\n            storage: null\n        };\n    }\n\n    componentDidMount = () => {\n        this.loadCrypto() ;\n    }\n\n    loadCrypto = () => {\n        let self = this ;\n        let cryptoState = self.state.crypto ;\n        cryptoState.status = 'loading' ;\n        self.setState({crypto:cryptoState}, () => {\n            cryptoWaitReady().then(() => {\n                cryptoState.status = 'ready' ;\n                self.setState({crypto: cryptoState}, self.connectNetwork) ;\n            }) ;\n        }) ;\n    }\n\n    connectNetwork = (callback) => {\n        let self = this ;\n        let networkState = self.state.network ;\n        networkState.status = 'connecting' ;\n        self.setState({network:networkState}, () => {\n            let network = new WikaNetwork(self.state.network.url) ;\n            network.connect(() => {\n                self.wikaNetwork = network ;\n                networkState.status = 'connected' ;\n                self.setState({network:networkState}, this.initLocalStorage) ;\n            }) ;\n        }) ;\n    }\n\n    initLocalStorage = () => {\n        let storage = getStorageInterface() ;\n        this.setState({storage: storage}, this.subscribeToBalance) ;\n    }\n\n    subscribeToBalance = () => {\n        let self = this;\n        if (self.unsubGetBalance) {\n            self.unsubGetBalance() ;\n            self.unsubGetBalance = null ;\n        }\n        let clearBalance = {\n            wika:null,\n            usd:null\n        } ;\n        self.setState({balance:clearBalance}, () => {\n            if (self.state.account && self.state.network.status==='connected') {\n            let address = self.state.account.address;\n            self.wikaNetwork.getBalance(address, (result) => {\n                let balanceWika = convertToWika(result.data.free) ;\n                let balanceUsd = wikaToUsd(balanceWika) ;\n                self.setState({\n                    balance:{\n                        wika:balanceWika,\n                        usd:balanceUsd\n                    }\n                });\n            }).then((s) => {\n                self.unsubGetBalance = s ;\n            });\n        }\n        }) ;\n    }\n\n    selectAccount = (account) => {\n        this.setState({account: account}, this.subscribeToBalance) ;\n    }\n\n    navigate = (tab) => {\n        this.setState({tab: tab});\n    }\n\n    componentWillUnmount = () => {\n        if (this.unsubGetBalance) {\n            this.unsubGetBalance() ;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wika-app\">\n                <AppContext.Provider value={{\n                    // Context data\n                    tab: this.state.tab,\n                    network: this.state.network,\n                    account: this.state.account,\n                    balance: this.state.balance,\n                    // Context functions\n                    navigate: this.navigate,\n                    selectAccount: this.selectAccount,\n                    // Endpoints configuration\n                    wikaNetwork: this.wikaNetwork,\n                    apiEndpoint: this.state.api,\n                    // Local storage\n                    storage: this.state.storage\n                }}>\n                    <MainContent />\n                    <Footer/>\n                </AppContext.Provider>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './commons/css/wika.css';\nimport './commons/css/awesome.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App ref={(x) => {window.wikaReactApp = x;}}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}