{"version":3,"sources":["utils/misc.js","utils/network.js","utils/context.js","components/NetworkButton.jsx","components/AccountButton.jsx","components/NavBar.jsx","components/ButtonBar.jsx","components/Splash.jsx","components/like/Like1.jsx","components/like/Like2.jsx","components/like/Like.jsx","components/recommend/Recommend.jsx","components/wallet/Wallet.jsx","components/account/AccountConnectModes.jsx","components/account/AccountConnectSelectWeb3.jsx","components/account/AccountConnectSelectLocal.jsx","components/account/Account.jsx","components/account/AccountConnect.jsx","components/like/LikedPages.jsx","components/authors/OwnedPages.jsx","components/authors/ClaimPage.jsx","components/debug/Keccak.jsx","components/debug/Wip.jsx","components/MainContent.jsx","storage/StorageWeb.jsx","storage/StorageFactory.jsx","App.jsx","index.js"],"names":["copyToClipboard","inputId","document","getElementById","select","execCommand","convertToWika","value","formatWika","toFixed","formatUsd","bytesToString","array","out","i","len","c","char2","char3","length","String","fromCharCode","bytesToHex","byteArray","s","forEach","byte","toString","slice","parseError","result","console","log","JSON","stringify","dispatchError","data","asModule","index","error","err","generateAccount","phrase","newPair","Keyring","type","addFromUri","address","addressRaw","accountName","importAccount","mnemonicGenerate","WikaNetwork","endpoint","connect","callback","self","wsProvider","WsProvider","ApiPromise","create","provider","then","api","disconnect","getBalance","query","system","account","getUrl","url","likes","urls","getLike","getLikePrice","likePrice","getOwnersRequestPrice","owners","requestPrice","getUrlOwner","getOwnerRequest","requests","getOwnerResult","results","getBlockNumber","number","getUrlInfo","Promise","all","ans","urlLikes","Number","likesSubmittedAt","likesSubmittedCount","likesSubmittedRemaining","txLike","injector","referrer","numLikes","tx","like","signAndSend","signer","txOwnerRequest","requestUrlCheck","txLikeExt","source","memory","monitor","status","isInBlock","isFinalized","unsubTransaction","web3FromSource","catch","setState","txStatus","this","AppContext","React","createContext","NetworkButton","context","network","style","color","className","Button","variant","renderStatus","Component","contextType","AccountButton","onClick","navigate","size","balance","wika","renderConnected","renderDisconnected","NavBar","tab","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","edge","mr","src","alt","width","height","Typography","component","ButtonBar","props","styleBox","textAlign","styleButton","borderRadius","padding","styleButtonText","fontSize","styleMenu","bottom","right","backgroundColor","opacity","toggleMenu","toggle","state","menuOpened","renderMenu","href","buttonClass","renderButton","text","icon","navigateTo","action","role","Paper","elevation","BottomNavigation","showLabels","BottomNavigationAction","label","Splash","renderColumn","title","image","Card","CardMedia","marginLeft","marginTop","CardContent","gutterBottom","render","Grid","container","spacing","item","xs","Container","Like1","handleNumLikeChange","event","target","update","submitLike","wikaNetwork","monitorLike","alert","disabled","Fragment","display","min","max","onChange","readOnly","Like2","rewardWaitFactor","Like","price","handleUrlChange","lookupUrl","subscribeToUrl","subscribeToLike","lookedUp","clearUrl","unsubscribe","unsubUrl","unsubLike","componentWillUnmount","renderPart1","renderPart2","rewardPrct","rewardTarget","Recommend","Wallet","AccountConnectModes","componentDidMount","enableWeb3","fetchLocalAccounts","web3Wallets","web3Enable","storage","get","localAccounts","handleModeChange","mode","continue","next","renderSwitch","renderRadioChoice","renderMessage","renderContinueButton","renderWait","FormControl","FormLabel","id","RadioGroup","name","FormControlLabel","control","Radio","message","align","AccountConnectSelectWeb3","getAccounts","accounts","web3Accounts","handleProviderChange","handleAccountChange","back","meta","addressU8","decodeAddress","u8aToHex","renderProviderItem","MenuItem","version","renderSelectProvider","fullWidth","InputLabel","Select","labelId","providers","map","renderAccountItem","ListItem","alignItems","ListItemAvatar","ListItemText","primary","secondary","substr","ListItemIcon","Divider","renderAccountList","List","renderActions","AccountConnectSelectLocal","Account","styleInputBox","copyElement","element","selectAccount","marginBottom","flex","marginRight","usd","AccountConnect","cancelMode","selectedMode","selectMode","LikedPages","queryApi","apiEndpoint","fetch","response","json","OwnedPages","ClaimPage","DEFAULT_ACCOUNT","NUM_BLOCKS_TO_WAIT","styleTextArea","fontFamily","subscribeToBlockNumber","unsubBlockNumber","currentBlock","subscribeToUrlOwner","subscribeToOwnerRequest","subscribeToOwnerResult","unsubUrlOwner","owner","unsubOwnerRequest","requestBlock","requestAccount","unsubOwnerResult","resultBlock","resultNumVotes","resultNumVotesYes","resultNumVotesMajority","resultIntro","resultMark","resultOutcome","unsubscribeUrl","submitRequest","monitorRequest","testUrl","copyMark","defaultValue","formatOwner","renderPart3","paddingRight","paddingLeft","renderTestResult","testResult","renderPart4","currentRequester","renderSubmitRequest","renderMyRequest","renderOtherRequest","renderMyRequestProgress","blocks_done","renderMyRequestResult","Keccak","updateText","generateHash","hash","keccakAsHex","copy","Wip","MainContent","StorageWeb","key","resolve","set","account1","account2","StorageClasses","getStorageInterface","env","window","location","split","App","loadCrypto","cryptoState","crypto","cryptoWaitReady","connectNetwork","networkState","initLocalStorage","subscribeToBalance","unsubGetBalance","balanceWika","free","balanceUsd","Provider","ReactDOM","StrictMode","ref","x","wikaReactApp"],"mappings":"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","file":"static/js/main.8017395c.chunk.js","sourcesContent":["import AES from 'crypto-js/aes';\nimport Utf8 from 'crypto-js/enc-utf8';\nimport { Keyring } from '@polkadot/api';\nimport { mnemonicGenerate } from '@polkadot/util-crypto';\n\n\nconst BALANCE_UNIT = 1000000000000;\nconst WIKA_TO_USD = 0.02 ;\n\n\n\n\n// Copy to clipboard\n\nfunction copyToClipboard(inputId) {\n    var copyText = document.getElementById(inputId);\n    copyText.select();\n    document.execCommand(\"copy\");\n}\n\n\n\n// Convert & format\n\nfunction convertToWika(value) {\n    return value / BALANCE_UNIT;\n}\n\nfunction formatWika(value) {\n    if (value != null) {\n        return value.toFixed(4) + ' W';\n    } else {\n        return '-';\n    }\n}\n\nfunction wikaToUsd(value) {\n    if (value!=null) {\n        return value * WIKA_TO_USD ;\n    } else {\n        return null;\n    }\n}\n\nfunction formatUsd(value) {\n    if (value != null) {\n        return value.toFixed(2) + ' US$';\n    } else {\n        return '-';\n    }\n}\n\nfunction shortenText(text) {\n    const maxLength = 50;\n    if (text == null) {\n        return \"\";\n    } else if (text.length > maxLength) {\n        return text.substr(0, maxLength) + '...';\n    } else {\n        return text;\n    }\n}\n\nfunction shortenAddress(address) {\n    if (address == null) {\n        return \"\";\n    } else {\n        return address.substr(0,5) + '...' + address.substr(44) ;\n    }\n}\n\nfunction hexToBytes(hex) {\n    if (hex == null) {\n        return null;\n    }\n    if (hex.substr(0, 2) === '0x') {\n        hex = hex.substr(2);\n    }\n    for (var bytes = [], c = 0; c < hex.length; c += 2) {\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    }\n    return bytes;\n}\n\nfunction bytesToString(array) {\n    if (array==null) return null ;\n    var out, i, len, c;\n    var char2, char3;\n\n    out = \"\";\n    len = array.length;\n    i = 0;\n    while (i < len) {\n        c = array[i++];\n        switch (c >> 4) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                // 0xxxxxxx\n                out += String.fromCharCode(c);\n                break;\n            case 12:\n            case 13:\n                // 110x xxxx   10xx xxxx\n                char2 = array[i++];\n                out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n                break;\n            case 14:\n                // 1110 xxxx  10xx xxxx  10xx xxxx\n                char2 = array[i++];\n                char3 = array[i++];\n                out += String.fromCharCode(((c & 0x0F) << 12) |\n                    ((char2 & 0x3F) << 6) |\n                    ((char3 & 0x3F) << 0));\n                break;\n            default:\n                break;\n        }\n    }\n    return out;\n}\n\nfunction bytesToHex(byteArray) {\n  var s = '0x';\n  byteArray.forEach(function (byte) {\n      s += ('0' + (byte & 0xFF).toString(16)).slice(-2);\n  });\n  return s;\n}\n\n\n\n\n// Parse error returned from polkadot API\n\nfunction parseError(result) {\n    console.log(JSON.stringify(result));\n    if (result.dispatchError) {\n        try {\n            let data = result.dispatchError.asModule;\n            let index = data.index;\n            let error = data.error;\n            return \"Transaction error (\" + index + \",\" + error + \")\";\n        } catch (err) {\n            return \"Transaction error\";\n        }\n    } else {\n        return null;\n    }\n}\n\n\n\n\n// AES encryption\n\nfunction encryptWithAES(text, passphrase)  {\n  return AES.encrypt(text, passphrase).toString();\n};\n\nfunction decryptWithAES(ciphertext, passphrase) {\n  const bytes = AES.decrypt(ciphertext, passphrase);\n  const originalText = bytes.toString(Utf8);\n  return originalText;\n};\n\n\n\n\n// New local accounts\n\nfunction importAccount(phrase) {\n  let keyring = new Keyring({ type: 'sr25519' });\n  let newPair = keyring.addFromUri(phrase) ;\n  let account = {\n      address: newPair.address,\n      addressRaw: bytesToHex(newPair.addressRaw),\n      phrase: phrase,\n      accountName: '<Account Name>'\n  } ;\n  return account ;\n}\n\nfunction generateAccount() {\n  let phrase = mnemonicGenerate(12);\n  return importAccount(phrase) ;\n}\n\n\n\n\nexport {\n    copyToClipboard,\n    convertToWika, formatWika, wikaToUsd, formatUsd, shortenText, shortenAddress,hexToBytes, bytesToString, bytesToHex,\n    parseError,\n    encryptWithAES, decryptWithAES,\n    importAccount, generateAccount\n} ;\n","import {ApiPromise, WsProvider} from '@polkadot/api';\nimport {web3FromSource} from '@polkadot/extension-dapp';\nimport {parseError} from \"./misc\";\n\n\nclass WikaNetwork {\n\n    constructor(endpoint) {\n        this.endpoint = endpoint ;\n        this.api = null ;\n    }\n\n    connect = (callback) => {\n        let self = this ;\n        self.wsProvider = new WsProvider(self.endpoint) ;\n        return ApiPromise.create({ provider: self.wsProvider })\n            .then((api) => {\n                self.api = api ;\n                callback() ;\n            }) ;\n    }\n\n    disconnect = (callback) => {\n        return this.api.disconnect().then(callback) ;\n    }\n\n    getBalance = (address, callback) => {\n        return this.api.query.system.account(address, callback) ;\n    }\n\n    getUrl = (url, callback) => {\n        return this.api.query.likes.urls(url, callback) ;\n    }\n\n    getLike = (address, url, callback) => {\n        return this.api.query.likes.likes(address, url, callback) ;\n    }\n\n    getLikePrice = (callback) => {\n        return this.api.query.likes.likePrice(callback) ;\n    }\n\n    getOwnersRequestPrice = (callback) => {\n        return this.api.query.owners.requestPrice(callback) ;\n    }\n\n    getUrlOwner = (url, callback) => {\n        return this.api.query.owners.owners(url, callback) ;\n    }\n\n    getOwnerRequest = (url, callback) => {\n        return this.api.query.owners.requests(url, callback) ;\n    }\n\n    getOwnerResult = (url, callback) => {\n        return this.api.query.owners.results(url, callback) ;\n    }\n\n    getBlockNumber = (callback) => {\n        return this.api.query.system.number(callback) ;\n    }\n\n    getUrlInfo = (address, url, callback) => {\n        Promise.all([this.api.query.likes.urls(url),this.api.query.likes.likes(address, url)])\n            .then((result) => {\n                let ans = {\n                    urlLikes: Number(result[0][0]),\n                    likesSubmittedAt: Number(result[1][0]),\n                    likesSubmittedCount:Number(result[1][1]),\n                    likesSubmittedRemaining:Number(result[1][2])\n                } ;\n                callback(ans) ;\n            }) ;\n    }\n\n\n\n\n    txLike = (address, injector, url, referrer, numLikes, callback) => {\n        let tx = this.api.tx.likes.like(url, referrer, numLikes) ;\n        return tx.signAndSend(address, {signer: injector.signer}, callback) ;\n    }\n\n    txOwnerRequest = (address, injector, url, callback) => {\n        let tx = this.api.tx.owners.requestUrlCheck(url) ;\n        return tx.signAndSend(address, {signer: injector.signer}, callback) ;\n    }\n\n    txLikeExt = (source, address, url, referrer, numLikes, callback) => {\n        console.log(source, address, url, referrer, numLikes);\n        let self = this;\n        let memory = {} ;\n        let monitor = (result) => {\n            let status = result.status ;\n            if (status.isInBlock) {\n                callback({status:'In block'}) ;\n            } else if (status.isFinalized) {\n                memory.unsubTransaction();\n                let err = parseError(result) ;\n                if (err) {\n                    callback({status:'Error', err: err}) ;\n                } else {\n                    callback({status:'Done'}) ;\n                }\n            }\n        }\n        web3FromSource(source).then((injector) => {\n            callback({status:'Sending'}) ;\n            self.txLike(address, injector, url, referrer, numLikes, monitor).then((s) => {\n                memory.unsubTransaction = s;\n            }).catch((err) => {\n                self.setState({txStatus: null}) ;\n                callback({status:'Error', err: err}) ;\n            }) ;\n        });\n    }\n\n\n\n}\n\nexport default WikaNetwork ;\n","import React from \"react\";\n\nconst AppContext = React.createContext();\n\nexport default AppContext ;\n","import React from 'react';\nimport Button from '@mui/material/Button';\n\nimport AppContext from '../utils/context' ;\n\n\n\nclass NetworkButton extends React.Component {\n\n    static contextType = AppContext;\n\n    renderStatus() {\n        switch (this.context.network.status) {\n            case 'connected': return <i style={{color:'green'}} className=\"fas fa-check\"></i> ;\n            case 'disconnected': return <i style={{color:'red'}} className=\"fas fa-times\"></i> ;\n            case 'connecting': return <i style={{color:'orange'}} className=\"fas fa-spinner\"></i> ;\n            default: return \"\" ;\n        }\n    }\n\n    render() {\n        return (\n            <Button color=\"primary\" variant=\"contained\">\n                <i className=\"fas fa-network-wired\"></i>\n                &nbsp;&nbsp;\n                {this.context.network.type}\n                &nbsp;&nbsp;\n                {this.renderStatus()}\n            </Button>\n        );\n    }\n\n}\n\n\nexport default NetworkButton ;\n\n\n\n","import React from 'react';\nimport Identicon from \"@polkadot/react-identicon\";\nimport Button from '@mui/material/Button';\n\nimport AppContext from '../utils/context' ;\nimport {formatWika} from \"../utils/misc\";\n\n\n\nclass AccountButton extends React.Component {\n\n    static contextType = AppContext;\n\n\n\n    renderDisconnected() {\n        return (\n            <Button color=\"primary\" variant=\"contained\"\n                    onClick={() => this.context.navigate('account')}>\n                <i className=\"far fa-user-circle\"></i>\n                &nbsp;&nbsp;\n                Connect account\n            </Button>\n        );\n    }\n\n    renderConnected() {\n        return (\n            <Button color=\"primary\" variant=\"contained\"\n                    onClick={() => this.context.navigate('account')}>\n                <Identicon size={24} value={this.context.account.address}/>\n                &nbsp;&nbsp;\n                {formatWika(this.context.balance.wika)}\n            </Button>\n        );\n    }\n\n    render() {\n        if (this.context.account) {\n            return this.renderConnected() ;\n        } else {\n            return this.renderDisconnected() ;\n        }\n    }\n\n}\n\n\nexport default AccountButton ;\n\n\n\n","import React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\n\nimport AppContext from \"../utils/context\";\nimport NetworkButton from \"./NetworkButton\";\nimport AccountButton from \"./AccountButton\";\n\n\n\nclass NavBar extends React.Component {\n\n    static contextType = AppContext;\n\n    navigate = (tab) => {\n        this.context.navigate(tab);\n    }\n\n    render() {\n        return (\n            <Box sx={{ flexGrow: 1 }}>\n              <AppBar position=\"static\">\n                <Toolbar>\n                  <IconButton\n                    size=\"large\"\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"menu\"\n                    sx={{ mr: 2 }}\n                    onClick={() => this.context.navigate('splash')}\n                  >\n                    <img src=\"images/logo_alt1.png\" alt=\"\" width=\"32\" height=\"32\" />\n                  </IconButton>\n                  <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                    <NetworkButton />\n                  </Typography>\n                  <AccountButton />\n                </Toolbar>\n              </AppBar>\n            </Box>\n        );\n    }\n\n}\n\n\nexport default NavBar ;\n\n\n\n","import React from 'react';\nimport Paper from '@mui/material/Paper';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RestoreIcon from '@mui/icons-material/Restore';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\n\n\nimport AppContext from \"../utils/context\";\n\n\nclass ButtonBar extends React.Component {\n\n    static contextType = AppContext;\n\n    styleBox = {\n        textAlign: 'center',\n        width: '80px'\n    }\n\n    styleButton = {\n        borderRadius: '50px',\n        padding: '5px 10px'\n    }\n\n    styleButtonText = {\n        fontSize: '12px',\n        color: '#1095c1'\n    }\n\n    styleMenu = {\n        position: 'absolute',\n        bottom: '5px',\n        right: '5px',\n        backgroundColor: 'aliceblue',\n        padding: '10px',\n        borderRadius: '10px',\n        opacity: '90%'\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {menuOpened: false};\n    }\n\n    toggleMenu = () => {\n        let toggle = !this.state.menuOpened ;\n        this.setState({menuOpened:toggle}) ;\n    }\n\n    navigate = (tab) => {\n        this.setState({menuOpened:false}) ;\n        this.context.navigate(tab);\n    }\n\n    renderMenu = () => {\n        if (this.state.menuOpened) {\n            return (\n                <aside style={this.styleMenu}>\n                    <nav>\n                        <ul>\n                            <li><a href=\"/#\" onClick={() => this.navigate('account')}>Account</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('liked_pages')}>Liked pages</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('owned_pages')}>Owned pages</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('claim_page')}>Claim page ownership</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('keccak')}>Keccak 256</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('blockchains')}>Blockchains</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('about')}>About</a></li>\n                        </ul>\n                    </nav>\n                </aside>\n            );\n        } else {\n            return \"\" ;\n        }\n    }\n\n    buttonClass = (tab) => {\n        if (this.context.tab === tab) {\n            return \"contrast\" ;\n        } else {\n            return \"primary\" ;\n        }\n    }\n\n    renderButton = (text, icon, navigateTo) => {\n        let action = () => {this.context.navigate(navigateTo)} ;\n        if (navigateTo==='toggleMenu') {\n            action = this.toggleMenu ;\n        }\n        return (\n            <div style={this.styleBox}>\n                <a href=\"/#\" role=\"button\"\n                   style={this.styleButton}\n                   className={this.buttonClass(navigateTo)}\n                   onClick={action}>\n                        <i className={'far '+icon}></i>\n                </a>\n                <br/>\n                <span style={this.styleButtonText}>\n                    {text}\n                </span>\n            </div>\n        );\n    }\n\n    renderxxx() {\n        if (this.context.account) {\n            return (\n                <div className=\"main-buttonbar\">\n                    {this.renderButton('Like', 'fa-thumbs-up', 'like')}\n                    {this.renderButton('Buy', 'fa-credit-card', 'buy')}\n                    {this.renderButton('Send', 'fa-paper-plane', 'wallet')}\n                    {this.renderButton('Claim', 'fa-registered', 'claim_page')}\n                    {this.renderButton('More', 'fa-caret-square-down', 'toggleMenu')}\n                    {this.renderMenu()}\n                </div>\n            ) ;\n        } else {\n            return \"\" ;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"main-actions\">\n              <Paper elevation={3} >\n                  <BottomNavigation showLabels>\n                    <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n                    <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n                    <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n                  </BottomNavigation>\n              </Paper>\n            </div>\n      ) ;\n    }\n\n}\n\n\nexport default ButtonBar ;\n\n\n\n","import React from \"react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\n\n\nimport AppContext from \"../utils/context\";\n\n\nclass Splash extends React.Component {\n\n    static contextType = AppContext;\n\n    renderColumn = (title, image, text) => {\n        return (\n             <Card>\n              <CardMedia\n                component=\"img\"\n                image={image}\n                alt=\"\"\n                sx={{width:'80%', marginLeft:'10%', marginTop:'10px'}}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h6\" component=\"div\">\n                  {title}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {text}\n                </Typography>\n              </CardContent>\n            </Card>\n        ) ;\n    }\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <Typography variant=\"h5\">Welcome to the Wika Network!</Typography>\n                <br/>\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    {this.renderColumn(\n                        \"Consumers\",\n                        \"images/splash1.png\",\n                        \"Like your favorite pages and reward the authors and previous likers.\")}\n                  </Grid>\n                  <Grid item xs={4}>\n                    {this.renderColumn(\n                        \"Authors\",\n                        \"images/splash2.png\",\n                        \"Register any web page and Wika users will be able to reward you directly.\")}\n                  </Grid>\n                  <Grid item xs={4}>\n                    {this.renderColumn(\n                        \"Everyone\",\n                        \"images/splash3.png\",\n                        \"Protect your privacy and promote quality content.\")}\n                  </Grid>\n                </Grid>\n                <br/>\n                {this.context.account==null?\n                    <Container>\n                        <Button variant=\"outlined\" onClick={() => this.context.navigate('account')}>\n                            Connect your account and get started now!\n                        </Button>\n                    </Container>\n                 :\"\"}\n            </div>\n        );\n    }\n\n}\n\n\nexport default Splash ;\n\n\n","import React from 'react';\nimport {web3FromSource} from '@polkadot/extension-dapp';\n\n\nimport AppContext from \"../../utils/context\";\nimport {formatWika, parseError} from \"../../utils/misc\";\n\n\nclass Like1 extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            numLikes: 1\n        };\n    }\n\n    handleNumLikeChange = (event) => {\n        this.setState({numLikes: event.target.value}, this.update) ;\n    }\n\n    submitLike = () => {\n        let self = this;\n        let url = self.props.url ;\n        let referrer = self.state.referrer ;\n        let numLikes = self.state.numLikes ;\n        let source = self.context.account.source ;\n        let address = self.context.account.address ;\n        web3FromSource(source).then((injector) => {\n            self.setState({txStatus: 'Sending...'}, () => {\n                self.context.wikaNetwork.txLike(address, injector, url, referrer, numLikes, self.monitorLike).then((s) => {\n                    self.unsubTransaction = s;\n                }).catch((err) => {\n                    self.setState({txStatus: null}) ;\n                    alert(err) ;\n                }) ;\n            });\n        }) ;\n    }\n\n    monitorLike = (result) => {\n        let status = result.status ;\n        if (status.isInBlock) {\n            this.setState({txStatus: 'In block...'}) ;\n        } else if (status.isFinalized) {\n            this.setState({txStatus: null}) ;\n            this.unsubTransaction();\n            let err = parseError(result) ;\n            if (err) {\n                alert(err) ;\n            }\n        }\n    }\n\n    renderButton = () => {\n        if (this.state.txStatus==null) {\n            return (\n                <button onClick={this.submitLike}>\n                    Send {this.state.numLikes} <i className=\"fas fa-thumbs-up\"></i>\n                </button>\n            );\n        } else {\n            return (\n                <button disabled>\n                    <i className=\"fas fa-spinner\"></i> {this.state.txStatus}\n                </button>\n            ) ;\n        }\n    }\n\n    render = () => {\n        return (\n            <React.Fragment>\n\n                <p>\n                    This page received <strong>{this.props.urlLikes} likes</strong>.\n                </p>\n\n                <hr/>\n\n                <h5>Send likes to this page:</h5>\n\n                <strong>Which URL referred you to the page?</strong>\n                <input type=\"text\" />\n\n                <strong>How much do you like it?</strong>\n                <div style={{display:'flex'}}>\n                    <div style={{marginTop:'15px'}}>\n                        <input style={{width:'250px'}}\n                               type=\"range\" min=\"1\" max=\"100\"\n                               value={this.state.numLikes}\n                               onChange={this.handleNumLikeChange} />\n                    </div>\n                    <div style={{marginTop:'10px', marginLeft:'15px'}}>\n                        <strong>{this.state.numLikes} <i className=\"fas fa-thumbs-up\"></i></strong>\n                    </div>\n                </div>\n\n                <strong>Cost of this transaction</strong>\n                <input style={{textAlign:\"right\"}}\n                       type=\"text\"\n                       readOnly\n                       value={formatWika(this.props.likePrice*this.state.numLikes)}\n                />\n\n                {this.renderButton()}\n\n            </React.Fragment>\n        );\n    }\n\n}\n\n\nexport default Like1 ;\n","import React from 'react';\n\n\nclass Like2 extends React.Component {\n\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <p>\n                    This page received <strong>{this.props.urlLikes} likes</strong>.\n                </p>\n                <p>\n                    You sent it <strong>{this.props.likesSubmittedCount} likes</strong>.\n                </p>\n                <p>\n                    You are ranked <strong>#{this.props.likesSubmittedAt+1}</strong> on the queue of people who liked this page,\n                    therefore, you will start receiving rewards when it hits {(this.props.likesSubmittedAt*this.props.rewardWaitFactor)+2} likes.\n                </p>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default Like2 ;\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../../utils/context\";\nimport {convertToWika} from \"../../utils/misc\";\n\n\nimport Like1 from \"./Like1\";\nimport Like2 from \"./Like2\";\n\n\n\nclass Like extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lookedUp:false,\n            url: \"\",\n            referrer: null,\n            likePrice: null,\n            rewardPrct: '33%',\n            rewardTarget: 1.33,\n            rewardWaitFactor: 4,\n            urlLikes: null,\n            likesSubmittedAt: null,\n            likesSubmittedCount: null,\n            likesSubmittedRemaining: null\n        }\n    }\n\n    componentDidMount() {\n        this.getLikePrice() ;\n    }\n\n    getLikePrice = () => {\n        let self = this;\n        self.context.wikaNetwork.getLikePrice((result) => {\n            let price = convertToWika(result) ;\n            self.setState({likePrice:price}) ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    handleUrlChange = (event) => {\n        this.setState({url: event.target.value}) ;\n    }\n\n    lookupUrl = () => {\n        this.subscribeToUrl() ;\n        this.subscribeToLike() ;\n        this.setState({lookedUp:true}) ;\n    }\n\n    clearUrl = () => {\n        this.unsubscribe() ;\n        this.setState({\n            lookedUp:false,\n            url:\"\",\n            likesSubmittedCount:null,\n        }) ;\n    }\n\n    subscribeToUrl = () => {\n        let self = this;\n        if (self.unsubUrl) {\n            self.unsubUrl() ;\n            self.unsubUrl = null ;\n        }\n        let url = this.state.url;\n        self.context.wikaNetwork.getUrl(url, (result) => {\n            let urlLikes = Number(result[0]) ;\n            self.setState({urlLikes:urlLikes}) ;\n        }).then((s) => {\n            self.unsubUrl = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    subscribeToLike = () => {\n        let self = this;\n        if (self.unsubLike) {\n            self.unsubLike() ;\n            self.unsubLike = null ;\n        }\n        let address = this.context.account.address;\n        let url = this.state.url;\n        self.context.wikaNetwork.getLike(address, url, (result) => {\n            self.setState({\n                likesSubmittedAt:Number(result[0]),\n                likesSubmittedCount:Number(result[1]),\n                likesSubmittedRemaining:Number(result[2])\n            }) ;\n        }).then((s) => {\n            self.unsubLike = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    componentWillUnmount = () => {\n        this.unsubscribe() ;\n    }\n\n    unsubscribe = () => {\n        if (this.unsubUrl) {\n            this.unsubUrl() ;\n        }\n        if (this.unsubLike) {\n            this.unsubLike() ;\n        }\n    }\n\n    renderPart1 = () => {\n        return (\n            <React.Fragment>\n                <label>URL</label>\n                <input type=\"text\"\n                       value={this.state.url}\n                       onChange={this.handleUrlChange}\n                       disabled={this.state.lookedUp}\n                />\n                {this.state.lookedUp?\n                <button onClick={this.clearUrl} className=\"contrast\">Clear</button>\n                :<button onClick={this.lookupUrl}>Lookup URL status</button>}\n            </React.Fragment>\n        ) ;\n    }\n\n    renderPart2 = () => {\n        if (this.state.lookedUp && this.state.likesSubmittedCount!=null) {\n            if (this.state.likesSubmittedCount>0) {\n                return <Like2\n                    urlLikes={this.state.urlLikes}\n                    likesSubmittedCount={this.state.likesSubmittedCount}\n                    likesSubmittedAt={this.state.likesSubmittedAt}\n                    rewardWaitFactor={this.state.rewardWaitFactor}\n                />\n            } else {\n                return <Like1\n                    url={this.state.url}\n                    urlLikes={this.state.urlLikes}\n                    likePrice={this.state.likePrice}\n                />\n            }\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <h2>Like</h2>\n                {this.renderPart1()}\n                <hr/>\n                {this.renderPart2()}\n            </div>\n        ) ;\n    }\n\n}\n\nexport default Like ;\n\n\n\n","import React from 'react';\n\n\nclass Recommend extends React.Component {\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h2>Recommend</h2>\n            </div>\n        );\n    }\n\n}\n\nexport default Recommend ;\n\n\n","import React from 'react';\n\n\nclass Wallet extends React.Component {\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h2>Wallet</h2>\n            </div>\n        );\n    }\n\n}\n\nexport default Wallet ;\n\n\n","import React from \"react\";\nimport {web3Enable} from '@polkadot/extension-dapp';\nimport Typography from '@mui/material/Typography';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass AccountConnectModes extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'web3',\n            web3Wallets: null,\n            localAccounts: null\n        };\n    }\n\n    componentDidMount = () => {\n        this.enableWeb3();\n        this.fetchLocalAccounts() ;\n    }\n\n    enableWeb3 = () => {\n        this.setState({web3Wallets: null}, () => {\n            web3Enable(\"Wika Network\").then((result) => {\n                this.setState({web3Wallets: result});\n            });\n        });\n    }\n\n    fetchLocalAccounts = () => {\n        this.context.storage.get('accounts').then((result) => {\n            console.log('result', result) ;\n            this.setState({localAccounts: result});\n        });\n    }\n\n    handleModeChange = (event) => {\n        this.setState({mode:event.target.value}) ;\n    };\n\n    continue = () => {\n        if (this.state.mode==='web3') {\n            this.props.next(this.state.mode, this.state.web3Wallets) ;\n        } else {\n            this.props.next(this.state.mode, this.state.localAccounts) ;\n        }\n    }\n\n\n\n    renderSwitch = () => {\n        if (!this.state.web3Wallets) {\n            return this.renderWait();\n        } else {\n            return (\n                <React.Fragment>\n                    {this.renderRadioChoice()}\n                    <br/><br/>\n                    {this.renderMessage()}\n                    <br/><br/>\n                    {this.renderContinueButton()}\n                </React.Fragment>\n             );\n        }\n    }\n\n    renderWait = () => {\n        return (\n            <Typography variant=\"body1\">\n                <i className=\"fas fa-spinner\"></i>\n                &nbsp;&nbsp;\n                Checking availability of Web3 wallets...\n            </Typography>\n        );\n    }\n\n    renderRadioChoice = () => {\n        return (\n            <FormControl>\n              <FormLabel id=\"account-mode-radio-label\">Wallet management mode</FormLabel>\n              <RadioGroup\n                aria-labelledby=\"account-mode-radio-label\"\n                name=\"radio-buttons-group\"\n                value={this.state.mode}\n                onChange={this.handleModeChange}\n              >\n                <FormControlLabel value=\"web3\" control={<Radio />} label=\"Web3 wallet (for example polkadot.js)\" />\n                <FormControlLabel value=\"local\" control={<Radio />} label=\"Local storage of this browser\" />\n              </RadioGroup>\n            </FormControl>\n          );\n    }\n\n    renderMessage = () => {\n        let message = \"\" ;\n        if (this.state.mode==='local') {\n            message = `This will store the private keys in the local storage of the browser, protected by a password.\n                       Your password can't be retrieved if lost. Make sure to save it to safety.`\n        } else {\n            if (this.state.web3Wallets.length === 0) {\n                message = `No Polkadot wallets detected.\n                           Please install one and make sure you authorize this app to use it.`\n            } else {\n                message = `Polkadot wallets detected and authorized with this app.\n                           Let's go!`\n            }\n        }\n        return (<Typography variant=\"body1\">{message}</Typography>) ;\n    }\n\n    renderContinueButton = () => {\n        let disabled = false ;\n        if (this.state.mode==='web3' && this.state.web3Wallets.length === 0) {\n            disabled = true ;\n        }\n        return (\n            <Container align=\"right\">\n                <Button variant=\"contained\"\n                        disabled={disabled}\n                        onClick={this.continue}>\n                    Continue\n                </Button>\n            </Container>\n        ) ;\n    }\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <Typography variant=\"h5\">Connect your account</Typography>\n                <br/>\n                {this.renderSwitch()}\n            </div>\n        );\n    }\n\n}\n\nexport default AccountConnectModes;\n\n\n","import React from \"react\";\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport {web3Accounts} from '@polkadot/extension-dapp';\nimport Identicon from '@polkadot/react-identicon';\nimport {decodeAddress} from '@polkadot/util-crypto';\nimport {u8aToHex} from '@polkadot/util';\nimport Radio from '@mui/material/Radio';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\n\n\nimport {shortenAddress} from '../../utils/misc' ;\n\n\nclass AccountConnectSelectWeb3 extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            provider: 0,\n            accounts: [],\n            account: 0\n        };\n    }\n\n    componentDidMount = () => {\n        this.getAccounts();\n    }\n\n    getAccounts = () => {\n        this.setState({accounts: []}, () => {\n            web3Accounts().then((result) => {\n                this.setState({accounts: result});\n            });\n        });\n    }\n\n    handleProviderChange = (event) => {\n        this.setState({provider:event.target.value}) ;\n    };\n\n    handleAccountChange = (event) => {\n        this.setState({account:event.target.value}) ;\n    };\n\n    back = () => {\n        this.props.back() ;\n    }\n\n    continue = () => {\n        let account = this.state.accounts[this.state.account] ;\n        let address = account.address ;\n        let name = account.meta.name ;\n        let source = account.meta.source ;\n        let addressU8 = decodeAddress(address) ;\n        let addressRaw = u8aToHex(addressU8) ;\n        let data = {\n            name: name,\n            address: address,\n            addressRaw: addressRaw,\n            source: source\n        };\n        this.props.next(data) ;\n    }\n\n\n    renderProviderItem = (item, index) => {\n        return <MenuItem key={index} value={index}>{item.name + ' ('  + item.version + ')'}</MenuItem>\n    }\n\n    renderSelectProvider = () => {\n        return (\n            <Box width=\"100%\">\n              <FormControl fullWidth>\n                <InputLabel id=\"select-web3-provider-label\">Web3 Provider</InputLabel>\n                <Select\n                  labelId=\"select-web3-provider-label\"\n                  label=\"Web3 Provider\"\n                  value={this.state.provider}\n                  onChange={this.handleProviderChange}\n                >\n                  {this.props.providers.map(this.renderProviderItem)}\n                </Select>\n              </FormControl>\n            </Box>\n        );\n    }\n\n    renderAccountItem = (item, index) => {\n        return (\n            <React.Fragment key={index}>\n                <ListItem alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                      <Identicon value={item.address} size={40}/>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={item.meta.name}\n                      secondary={shortenAddress(item.address)}\n                    />\n                    <ListItemIcon>\n                        <Radio value={index} />\n                    </ListItemIcon>\n                </ListItem>\n                <Divider />\n            </React.Fragment>\n        ) ;\n    }\n\n    renderAccountList = () => {\n      return (\n        <RadioGroup\n           name=\"radio-buttons-group\"\n           value={this.state.account}\n           onChange={this.handleAccountChange}\n        >\n            <List width=\"100%\">\n              <Divider />\n              {this.state.accounts.map(this.renderAccountItem)}\n            </List>\n        </RadioGroup>\n      );\n    }\n\n    renderActions = () => {\n        return (\n            <Container align=\"right\">\n                <Button color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={this.back}>\n                    Back\n                </Button>\n                &nbsp;&nbsp;\n                <Button color=\"primary\"\n                        variant=\"contained\"\n                        onClick={this.continue}>\n                    Continue\n                </Button>\n            </Container>\n        ) ;\n    }\n\n    render = () => {\n        return (\n           <div className=\"main-content\">\n                <Typography variant=\"h5\">Select your account</Typography>\n                <br/><br/>\n                {this.renderSelectProvider()}\n                {this.renderAccountList()}\n                <br/><br/>\n                {this.renderActions()}\n            </div>\n        );\n    }\n\n}\n\nexport default AccountConnectSelectWeb3;\n\n\n","import React from \"react\";\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport {web3Accounts} from '@polkadot/extension-dapp';\nimport Identicon from '@polkadot/react-identicon';\nimport {decodeAddress} from '@polkadot/util-crypto';\nimport {u8aToHex} from '@polkadot/util';\nimport Radio from '@mui/material/Radio';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\n\n\nimport {shortenAddress} from '../../utils/misc' ;\n\n\nclass AccountConnectSelectLocal extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: 0\n        };\n    }\n\n    render = () => {\n        return (\n           <div className=\"main-content\">\n                <Typography variant=\"h5\">Select your account</Typography>\n                <br/><br/>\n                {JSON.stringify(this.props.accounts)}\n            </div>\n        );\n    }\n\n}\n\nexport default AccountConnectSelectLocal;\n\n\n","import React from \"react\";\nimport Identicon from '@polkadot/react-identicon';\n\n\nimport AppContext from \"../../utils/context\";\nimport {copyToClipboard, formatWika, formatUsd} from \"../../utils/misc\";\n\n\nclass Account extends React.Component {\n\n    static contextType = AppContext;\n\n    styleInputBox = {\n        fontSize: '16px',\n        textAlign: 'center'\n    } ;\n\n    copyElement = (element) => () => {\n        copyToClipboard(element) ;\n    }\n\n    disconnect = () => {\n        this.context.selectAccount(null) ;\n    }\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <h2>Account</h2>\n\n                <div style={{textAlign:'center', marginBottom:'35px'}}>\n                    <Identicon value={this.context.account.address}/>\n                    <br/>\n                    <strong>{this.context.account.name}</strong>\n                </div>\n\n                <strong>Balance</strong>\n                <div style={{display: 'flex'}}>\n                    <div style={{flex: '50%', marginRight: '10px'}}>\n                        <input type=\"text\"\n                               value={formatWika(this.context.balance.wika)}\n                               readOnly={true}\n                               style={{textAlign: 'right'}}\n                        />\n                    </div>\n                    <div style={{flex: '50%', marginLeft: '10px'}}>\n                        <input type=\"text\"\n                               value={formatUsd(this.context.balance.usd)}\n                               readOnly={true}\n                               style={{textAlign: 'right'}}\n                        />\n                    </div>\n                </div>\n\n                <strong>\n                    Public Address (Substrate format)\n                    &nbsp;&nbsp;\n                    <a href=\"/#\" onClick={this.copyElement(\"account_address_element\")}>\n                        <i className=\"far fa-copy\"></i>\n                    </a>\n                </strong>\n                <input id=\"account_address_element\"\n                       type=\"text\"\n                       value={this.context.account.address}\n                       readOnly={true}\n                       style={this.styleInputBox}\n                />\n\n                <strong>\n                    Public Address (Raw hex format)\n                    &nbsp;&nbsp;\n                    <a href=\"/#\" onClick={this.copyElement(\"account_address_raw_element\")}>\n                        <i className=\"far fa-copy\"></i>\n                    </a>\n                </strong>\n                <input id=\"account_address_raw_element\"\n                       type=\"text\"\n                       value={this.context.account.addressRaw}\n                       readOnly={true}\n                       style={this.styleInputBox}\n                />\n\n                <button onClick={this.disconnect} className=\"contrast\">\n                    Disconnect this account\n                    &nbsp;&nbsp;&nbsp;\n                    <i className=\"fas fa-sign-out-alt\"></i>\n                </button>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Account;\n\n\n","import React from \"react\";\n\n\nimport AppContext from \"../../utils/context\";\nimport AccountConnectModes from \"./AccountConnectModes\";\nimport AccountConnectSelectWeb3 from \"./AccountConnectSelectWeb3\";\nimport AccountConnectSelectLocal from \"./AccountConnectSelectLocal\";\nimport Account from \"./Account\";\n\n\n\nclass AccountConnect extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedMode: null,\n            data: null,\n        }\n    }\n\n    cancelMode = () => {\n        this.setState({selectedMode: null}) ;\n    }\n\n    selectMode = (mode, data) => {\n        this.setState({\n            selectedMode: mode,\n            data: data\n        }) ;\n    }\n\n    selectAccount = (account) => {\n        this.context.selectAccount(account) ;\n    }\n\n    render = () => {\n        if (this.context.account) {\n            return <Account /> ;\n        } else {\n            if (!this.state.selectedMode) {\n                return <AccountConnectModes next={this.selectMode} /> ;\n            } else {\n                if (this.state.selectedMode==='web3') {\n                    return <AccountConnectSelectWeb3 providers={this.state.data}\n                                back={this.cancelMode}\n                                next={this.selectAccount}\n                           /> ;\n                } else {\n                    return <AccountConnectSelectLocal accounts={this.state.data}\n                                back={this.cancelMode}\n                                next={this.selectAccount}\n                           /> ;\n                }\n            }\n        }\n    }\n\n}\n\nexport default AccountConnect ;\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass LikedPages extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {urls: null};\n    }\n\n    componentDidMount = () => {\n        this.queryApi() ;\n    }\n\n    queryApi = () => {\n        const self = this;\n        const address = this.context.account.address;\n        const url = this.context.apiEndpoint.url + '/user/' + address + '/liked_urls' ;\n        console.log(url) ;\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {self.setState({urls: data});});\n    }\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h5>Liked pages</h5>\n                {JSON.stringify(this.context.apiEndpoint)}\n                <br/>\n                {JSON.stringify(this.state.urls)}\n            </div>\n        );\n    }\n\n}\n\nexport default LikedPages ;\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass OwnedPages extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {urls: null};\n    }\n\n    componentDidMount = () => {\n        this.queryApi() ;\n    }\n\n    queryApi = () => {\n        const self = this;\n        const address = this.context.account.address;\n        const url = this.context.apiEndpoint.url + '/user/' + address + '/owned_urls' ;\n        console.log(url) ;\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {self.setState({urls: data});});\n    }\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h2>Owned pages</h2>\n                {JSON.stringify(this.context.apiEndpoint)}\n                <br/>\n                {JSON.stringify(this.state.urls)}\n            </div>\n        );\n    }\n\n}\n\nexport default OwnedPages ;\n\n\n","import React from \"react\";\nimport {web3FromSource} from \"@polkadot/extension-dapp\";\n\n\nimport AppContext from \"../../utils/context\";\nimport {bytesToString, convertToWika, copyToClipboard, parseError} from \"../../utils/misc\";\n\n\nclass ClaimPage extends React.Component {\n\n    static contextType = AppContext;\n\n    DEFAULT_ACCOUNT = \"5C4hrfjw9DjXZTzV3MwzrrAr9P1MJhSrvWGWqi1eSuyUpnhM\" ;\n\n    NUM_BLOCKS_TO_WAIT = 10 ;\n\n    styleTextArea = {\n        fontFamily: 'monospace',\n        fontSize: '9px'\n    }\n\n    styleButton = {\n        padding: 0,\n        marginBottom: '4px'\n    }\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lookedUp:false,\n            url: \"\",\n            requestPrice: null,\n            owner: null,\n            requestBlock: null,\n            requestAccount: null,\n            currentBlock: null,\n            txStatus: null,\n            testResult: null\n        } ;\n    }\n\n\n    // INITIALIZATION\n    // --------------------------------\n\n    componentDidMount = () => {\n        this.getOwnersRequestPrice() ;\n        this.subscribeToBlockNumber() ;\n    }\n\n    getOwnersRequestPrice = () => {\n        let self = this;\n        self.context.wikaNetwork.getOwnersRequestPrice((result) => {\n            let price = convertToWika(result) ;\n            self.setState({requestPrice:price}) ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    subscribeToBlockNumber = () => {\n        let self = this;\n        if (self.unsubBlockNumber) {\n            self.unsubBlockNumber() ;\n            self.unsubBlockNumber = null ;\n        }\n        self.context.wikaNetwork.getBlockNumber((result) => {\n            self.setState({\n                currentBlock:Number(result)\n            }) ;\n        }).then((s) => {\n            self.unsubBlockNumber = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n\n\n\n    // Lookup URL\n    // --------------------------------\n\n    handleUrlChange = (event) => {\n        this.setState({url: event.target.value}) ;\n    }\n\n    lookupUrl = () => {\n        this.setState({\n            lookedUp: true\n        }) ;\n        this.subscribeToUrlOwner() ;\n        this.subscribeToOwnerRequest() ;\n        this.subscribeToOwnerResult() ;\n    }\n\n    subscribeToUrlOwner = () => {\n        let self = this;\n        if (self.unsubUrlOwner) {\n            self.unsubUrlOwner() ;\n            self.unsubUrlOwner = null ;\n        }\n        let url = self.state.url;\n        this.setState({owner:null}, () => {\n            self.context.wikaNetwork.getUrlOwner(url, (result) => {\n                self.setState({\n                    owner: \"\" + result\n                });\n            }).then((s) => {\n                self.unsubUrlOwner = s;\n            }).catch((err) => {\n                alert(err);\n            });\n        }) ;\n    }\n\n    subscribeToOwnerRequest = () => {\n        let self = this;\n        if (self.unsubOwnerRequest) {\n            self.unsubOwnerRequest() ;\n            self.unsubOwnerRequest = null ;\n        }\n        let url = self.state.url;\n        let clearState = {\n            requestBlock: null,\n            requestAccount: null\n        } ;\n        this.setState(clearState, () => {\n            self.context.wikaNetwork.getOwnerRequest(url, (result) => {\n                self.setState({\n                    requestBlock: Number(result[0]),\n                    requestAccount: \"\"+result[1]\n                });\n            }).then((s) => {\n                self.unsubOwnerRequest = s;\n            }).catch((err) => {\n                alert(err);\n            });\n        }) ;\n    }\n\n    subscribeToOwnerResult = () => {\n        let self = this;\n        if (self.unsubOwnerResult) {\n            self.unsubOwnerResult() ;\n            self.unsubOwnerResult = null ;\n        }\n        let url = self.state.url;\n        let clearState = {\n            resultBlock: null,\n            resultNumVotes: null,\n            resultNumVotesYes: null,\n            resultNumVotesMajority: null,\n            resultIntro: null,\n            resultMark: null,\n            resultOutcome: null\n        } ;\n        this.setState(clearState, () => {\n            self.context.wikaNetwork.getOwnerResult(url, (result) => {\n                let data = {\n                    resultBlock: Number(result[0]),\n                    resultNumVotes: Number(result[1]),\n                    resultNumVotesYes: Number(result[2]),\n                    resultNumVotesMajority: Number(result[3]),\n                    resultIntro: result[4],\n                    resultMark: result[5],\n                    resultOutcome: result[6]\n                };\n                self.setState(data);\n            }).then((s) => {\n                self.unsubOwnerResult = s;\n            });\n        }) ;\n    }\n\n    unsubscribeUrl = () => {\n        if (this.unsubUrlOwner) {\n            this.unsubUrlOwner() ;\n        }\n        if (this.unsubOwnerRequest) {\n            this.unsubOwnerRequest() ;\n        }\n        if (this.unsubOwnerResult) {\n            this.unsubOwnerResult() ;\n        }\n    }\n\n    clearUrl = () => {\n        this.unsubscribeUrl() ;\n        this.setState({\n            lookedUp:false,\n            url:\"\",\n            owner: null\n        }) ;\n    }\n\n\n\n    // Submit and monitor the request\n    // --------------------------------\n\n    submitRequest = () => {\n        let self = this;\n        let url = self.state.url ;\n        let source = self.context.account.source ;\n        let address = self.context.account.address ;\n        web3FromSource(source).then((injector) => {\n            self.setState({txStatus: 'Sending...'}, () => {\n                self.context.wikaNetwork.txOwnerRequest(address, injector, url, self.monitorRequest).then((s) => {\n                    self.unsubTransaction = s;\n                }).catch((err) => {\n                    self.setState({txStatus: null}) ;\n                    alert(err) ;\n                }) ;\n            })\n        });\n    }\n\n    monitorRequest = (result) => {\n        let status = result.status ;\n        if (status.isInBlock) {\n            this.setState({txStatus: 'In block...'}) ;\n        } else if (status.isFinalized) {\n            this.setState({txStatus: null}) ;\n            this.unsubTransaction();\n            let err = parseError(result) ;\n            if (err) {\n                alert(err) ;\n            }\n        }\n    }\n\n\n    // Test the webpage ownership off-chain\n    // --------------------------------------\n\n    testUrl = () => {\n        /*let self = this;\n        let url = self.context.url ;\n        fetch(url, {\n              method: \"GET\",\n            })\n            .then(response => console.log(response))\n            .catch(err => console.log(err));*/\n    };\n\n\n    // Utils\n    // --------------------------------------\n\n    copyMark = () => {\n        copyToClipboard(\"wika_mark_element\") ;\n    };\n\n\n    // Clean-up when done\n    // --------------------------------------\n\n    componentWillUnmount = () => {\n        if (this.unsubUrlOwner) {\n            this.unsubUrlOwner() ;\n        }\n        if (this.unsubOwnerRequest) {\n            this.unsubOwnerRequest() ;\n        }\n        if (this.unsubOwnerResult) {\n            this.unsubOwnerResult() ;\n        }\n        if (this.unsubBlockNumber) {\n            this.unsubBlockNumber() ;\n        }\n    }\n\n\n\n\n\n\n\n\n    // FRONT-END Part 1\n    // --------------------------------------\n\n    renderPart1 = () => {\n        return (\n            <React.Fragment>\n                <label>URL</label>\n                <input type=\"text\"\n                       value={this.state.url}\n                       onChange={this.handleUrlChange}\n                       disabled={this.state.lookedUp}\n                />\n                {this.state.lookedUp?\n                <button onClick={this.clearUrl} className=\"contrast\">Clear</button>\n                :<button onClick={this.lookupUrl}>Lookup URL status</button>}\n            </React.Fragment>\n        ) ;\n    }\n\n\n\n\n\n\n    // FRONT-END Part 2\n    // --------------------------------------\n\n    renderPart2 = () => {\n        if (this.state.lookedUp && this.state.owner!=null) {\n            return (\n                 <React.Fragment>\n                     <hr/>\n                    <label>Current Owner</label>\n                    <input type=\"text\" readOnly defaultValue={this.formatOwner(this.state.owner)}/>\n                 </React.Fragment>\n            ) ;\n        } else {\n            return \"\";\n        }\n    }\n\n    formatOwner = (owner) => {\n        if (owner===this.DEFAULT_ACCOUNT) {\n            return \"-\" ;\n        } else if (owner===this.context.account.address) {\n            return \"You are the owner!\" ;\n        } else {\n            return owner ;\n        }\n    }\n\n\n\n\n\n\n    // FRONT-END Part 3\n    // --------------------------------------\n\n    renderPart3 = () => {\n        if (this.state.lookedUp && this.state.owner!=null && this.state.owner!==this.context.account.address) {\n           return (\n                 <React.Fragment>\n                    <hr/>\n                    <label>Preparation</label>\n                    <div style={{display: 'flex'}}>\n                        <div style={{flex: '33%', paddingRight: '10px', textAlign: 'center'}}>\n                            <button style={this.styleButton}\n                                    className=\"outline\"\n                                    onClick={this.copyMark}>\n                                1. Copy this\n                            </button>\n                            <input id=\"wika_mark_element\"\n                                   type=\"text\"\n                                   readOnly\n                                   defaultValue={\"wika.network/author/\" + this.context.account.addressRaw}/>\n                        </div>\n                        <div style={{flex: '33%', textAlign: 'center'}}>\n                            <button disabled={true}\n                                    style={this.styleButton}\n                                    className=\"outline\">2. Insert it</button>\n                            <small>(Use an invisible img or link for example.)</small>\n                        </div>\n                        <div style={{flex: '33%', paddingLeft: '10px', textAlign: 'center'}}>\n                            <button disabled={true}\n                                    style={this.styleButton}\n                                    className=\"outline\"\n                                    onClick={this.testUrl}>\n                                3. Test it\n                            </button>\n                            <small>{this.renderTestResult()}</small>\n                        </div>\n                    </div>\n                </React.Fragment>\n            ) ;\n        } else {\n            return \"\";\n        }\n    }\n\n    renderTestResult = () => {\n        if (this.state.testResult==null) {\n            return \"\" ;\n        } else if (this.state.testResult===true) {\n            return \"YES\" ;\n        } else {\n            return \"NO\" ;\n        }\n    }\n\n\n\n    // FRONT-END Part 4\n    // --------------------------------------\n\n    renderPart4 = () => {\n        if (this.state.lookedUp) {\n            let currentRequester = this.state.requestAccount ;\n            if (currentRequester==null || currentRequester===this.DEFAULT_ACCOUNT) {\n                return this.renderSubmitRequest() ;\n            } else if (currentRequester===this.context.account.address) {\n                return this.renderMyRequest() ;\n            } else {\n                return this.renderOtherRequest() ;\n            }\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderSubmitRequest = () => {\n        if (this.state.owner!==this.context.address) {\n            return (\n                <React.Fragment>\n                    {\n                        this.state.txStatus==null?\n                            <button onClick={this.submitRequest} style={{marginBottom:'2px'}}>Submit your request</button>\n                        :\n                            <button disabled={true} style={{marginBottom:'2px'}}><i className=\"fas fa-spinner\"></i>&nbsp;&nbsp;{this.state.txStatus}</button>\n                    }\n                    <small>Note that the request fee is {this.state.requestPrice} W</small>\n                </React.Fragment>\n            ) ;\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderMyRequestProgress = () => {\n        let blocks_done = this.state.currentBlock - this.state.requestBlock ;\n        return (\n            <React.Fragment>\n                <hr/>\n                <br/>\n                <label>Waiting for verification results ({blocks_done}/{this.NUM_BLOCKS_TO_WAIT})...</label>\n                <progress value={blocks_done} max={this.NUM_BLOCKS_TO_WAIT}></progress>\n            </React.Fragment>\n        )\n    }\n\n    renderMyRequestResult = () => {\n        let icon = this.state.resultOutcome?\"fas fa-vote-yea\":\"fas fa-times\" ;\n        return (\n            <React.Fragment>\n                <hr/>\n                <br/>\n                <div style={{fontSize:'18px', marginBottom:'15px'}}>\n                    <i className={icon}></i>\n                    &nbsp;&nbsp;\n                    Your request was {this.state.resultOutcome?\"approved\":\"rejected\"}.\n                </div>\n                <br/>\n                <label>Verifications: {this.state.resultNumVotes}</label>\n                <br/>\n                <label>Approvals: {this.state.resultNumVotesYes}</label>\n                <br/>\n                <label>Page intro</label>\n                <textarea style={this.styleTextArea}\n                          defaultValue={bytesToString(this.state.resultIntro)}\n                          readOnly={true} />\n                <label>Mark found</label>\n                <textarea style={this.styleTextArea}\n                          defaultValue={bytesToString(this.state.resultMark)}\n                          readOnly={true} />\n            </React.Fragment>\n        )\n    }\n\n    renderMyRequest = () => {\n        if (this.state.resultBlock===0) {\n            return this.renderMyRequestProgress() ;\n        } else {\n            return this.renderMyRequestResult() ;\n        }\n    }\n\n    renderOtherRequest = () => {\n        return (\n            <p>\n                <i className=\"fas fa-exclamation-triangle\"></i> &nbsp;\n                There is currently another user trying to claim ownership for this URL.\n            </p>\n        )\n    }\n\n\n\n\n\n\n    // And finally the render function!\n    // --------------------------------------\n\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h2>Claim Page Ownership</h2>\n                {this.renderPart1()}\n                {this.renderPart2()}\n                {this.renderPart3()}\n                {this.renderPart4()}\n            </div>\n        );\n    }\n\n}\n\n\nexport default ClaimPage ;\n\n\n","import React from \"react\";\nimport {keccakAsHex} from \"@polkadot/util-crypto\";\n\n\nimport {copyToClipboard} from \"../../utils/misc\";\n\n\nclass Keccak extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state={\n            text:\"\",\n            hash:\"\"\n        }\n    }\n\n    updateText = (event) => {\n        this.setState({text:event.target.value}) ;\n    }\n\n    generateHash = () => {\n        let text = this.state.text ;\n        let hash = keccakAsHex(text) ;\n        this.setState({\n            hash:hash\n        }) ;\n    }\n\n    copy = () => {\n        copyToClipboard(\"keccak_hash_element\") ;\n    }\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h2>Keccak</h2>\n                <label>Text</label>\n                <textarea value={this.state.text} onChange={this.updateText}/>\n                <button onClick={this.generateHash}>Hash</button>\n                <input id=\"keccak_hash_element\"\n                       type=\"text\"\n                       value={this.state.hash}\n                       readOnly={true}\n                       style={{\n                           fontSize: '10px',\n                           textAlign: 'center'\n                       }}\n                />\n                <button onClick={this.copy}>Copy to clipboard</button>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Keccak ;\n\n","import React from 'react';\n\n\nclass Wip extends React.Component {\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h2>WIP</h2>\n            </div>\n        );\n    }\n\n}\n\nexport default Wip ;\n\n\n","import React from \"react\";\n\n\nimport AppContext from '../utils/context' ;\n\n\nimport Splash from \"./Splash\";\nimport Like from \"./like/Like\";\nimport Recommend from \"./recommend/Recommend\";\nimport Wallet from \"./wallet/Wallet\";\nimport AccountConnect from \"./account/AccountConnect\";\nimport LikedPages from \"./like/LikedPages\";\nimport OwnedPages from \"./authors/OwnedPages\";\nimport ClaimPage from \"./authors/ClaimPage\";\nimport Keccak from \"./debug/Keccak\";\nimport Wip from \"./debug/Wip\";\n\n\n\n\nclass MainContent extends React.Component {\n\n    static contextType = AppContext;\n\n    render = () => {\n        switch (this.context.tab) {\n            case \"splash\":\n                return <Splash />;\n            case \"like\":\n                return <Like />;\n            case \"recommend\":\n                return <Recommend />;\n            case \"wallet\":\n                return <Wallet />;\n            case \"account\":\n                return <AccountConnect />;\n            case \"liked_pages\":\n                return <LikedPages />;\n            case \"owned_pages\":\n                return <OwnedPages />;\n            case \"claim_page\":\n                return <ClaimPage />;\n            case \"keccak\":\n                return <Keccak />;\n            case \"blockchains\":\n                return <Wip />;\n            default:\n                return <Wip />;\n        }\n    }\n\n}\n\nexport default MainContent ;\n","import {generateAccount} from '../utils/misc' ;\n\n\nclass StorageWeb {\n\n  constructor() {\n    this.memory = {} ;\n    let account1 = generateAccount() ;\n    account1.accountName = 'Test1' ;\n    let account2 = generateAccount() ;\n    account2.accountName = 'Test2' ;\n    this.memory['accounts'] = [\n        account1, account2\n    ]\n  }\n\n  get = (key) => {\n    return Promise.resolve(this.memory[key]) ;\n  }\n\n  set = (key, value) => {\n    this.memory[key] = value ;\n    return Promise.resolve() ;\n  }\n\n}\n\nexport default StorageWeb;","import StorageExtension from './StorageExtension'\nimport StorageWeb from './StorageWeb'\n\n\nconst StorageClasses = {\n  'extension': StorageWeb,\n  'web': StorageWeb\n}\n\nfunction getStorageInterface() {\n    const url = window.location.href\n    const env = (url.split(':')[0] === 'chrome-extension') ? 'extension' : 'web'\n    const storage = new StorageClasses[env]()\n    return storage ;\n}\n\n\nexport default getStorageInterface;","import React from \"react\";\nimport {cryptoWaitReady} from '@polkadot/util-crypto';\n\n\nimport WikaNetwork from './utils/network' ;\nimport AppContext from './utils/context' ;\nimport {convertToWika, wikaToUsd} from \"./utils/misc\";\nimport NavBar from './components/NavBar' ;\nimport ButtonBar from './components/ButtonBar' ;\nimport MainContent from './components/MainContent' ;\nimport getStorageInterface from './storage/StorageFactory' ;\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tab: \"splash\",\n            crypto: {\n                status: 'loading'\n            },\n            network: {\n                type: \"Test Net\",\n                url: \"wss://testnode3.wika.network:443\",\n                status: 'connecting'\n            },\n            api: {\n                type: \"Test API\",\n                url: \"https://api-test.wika.network\"\n            },\n            account: null,\n            balance: {\n                wika:null,\n                usd:null\n            },\n            storage: null\n        };\n    }\n\n    componentDidMount = () => {\n        this.loadCrypto() ;\n    }\n\n    loadCrypto = () => {\n        let self = this ;\n        let cryptoState = self.state.crypto ;\n        cryptoState.status = 'loading' ;\n        self.setState({crypto:cryptoState}, () => {\n            cryptoWaitReady().then(() => {\n                cryptoState.status = 'ready' ;\n                self.setState({crypto: cryptoState}, self.connectNetwork) ;\n            }) ;\n        }) ;\n    }\n\n    connectNetwork = (callback) => {\n        let self = this ;\n        let networkState = self.state.network ;\n        networkState.status = 'connecting' ;\n        self.setState({network:networkState}, () => {\n            let network = new WikaNetwork(self.state.network.url) ;\n            network.connect(() => {\n                self.wikaNetwork = network ;\n                networkState.status = 'connected' ;\n                self.setState({network:networkState}, this.initLocalStorage) ;\n            }) ;\n        }) ;\n    }\n\n    initLocalStorage = () => {\n        let storage = getStorageInterface() ;\n        this.setState({storage: storage}, this.subscribeToBalance) ;\n    }\n\n    subscribeToBalance = () => {\n        let self = this;\n        if (self.unsubGetBalance) {\n            self.unsubGetBalance() ;\n            self.unsubGetBalance = null ;\n        }\n        let clearBalance = {\n            wika:null,\n            usd:null\n        } ;\n        self.setState({balance:clearBalance}, () => {\n            if (self.state.account && self.state.network.status==='connected') {\n            let address = self.state.account.address;\n            self.wikaNetwork.getBalance(address, (result) => {\n                let balanceWika = convertToWika(result.data.free) ;\n                let balanceUsd = wikaToUsd(balanceWika) ;\n                self.setState({\n                    balance:{\n                        wika:balanceWika,\n                        usd:balanceUsd\n                    }\n                });\n            }).then((s) => {\n                self.unsubGetBalance = s ;\n            });\n        }\n        }) ;\n    }\n\n    selectAccount = (account) => {\n        this.setState({account: account}, this.subscribeToBalance) ;\n    }\n\n    navigate = (tab) => {\n        this.setState({tab: tab});\n    }\n\n    componentWillUnmount = () => {\n        if (this.unsubGetBalance) {\n            this.unsubGetBalance() ;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wika-app\">\n                <AppContext.Provider value={{\n                    // Context data\n                    tab: this.state.tab,\n                    network: this.state.network,\n                    account: this.state.account,\n                    balance: this.state.balance,\n                    // Context functions\n                    navigate: this.navigate,\n                    selectAccount: this.selectAccount,\n                    // Endpoints configuration\n                    wikaNetwork: this.wikaNetwork,\n                    apiEndpoint: this.state.api,\n                    // Local storage\n                    storage: this.state.storage\n                }}>\n                    <NavBar/>\n\n                    <MainContent />\n\n                    <ButtonBar/>\n                </AppContext.Provider>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/wika.css';\nimport './css/awesome.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App ref={(x) => {window.wikaReactApp = x;}}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}