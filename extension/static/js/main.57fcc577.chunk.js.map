{"version":3,"sources":["utils/misc.js","utils/network.js","utils/context.js","components/NetworkButton.jsx","components/AccountButton.jsx","components/NavBar.jsx","components/ButtonBar.jsx","components/Splash.jsx","components/like/Like1.jsx","components/like/Like2.jsx","components/like/Like.jsx","components/recommend/Recommend.jsx","components/wallet/Wallet.jsx","components/account/AccountConnectEnablingWeb3.jsx","components/account/AccountConnectSelect.jsx","components/account/Account.jsx","components/account/AccountConnect.jsx","components/like/LikedPages.jsx","components/authors/OwnedPages.jsx","components/authors/ClaimPage.jsx","components/debug/Keccak.jsx","components/debug/Wip.jsx","components/MainContent.jsx","App.jsx","index.js"],"names":["copyToClipboard","inputId","document","getElementById","select","execCommand","convertToWika","value","formatWika","toFixed","formatUsd","bytesToString","array","out","i","len","c","char2","char3","length","String","fromCharCode","parseError","result","console","log","JSON","stringify","dispatchError","data","asModule","index","error","err","WikaNetwork","endpoint","connect","callback","self","wsProvider","WsProvider","ApiPromise","create","provider","then","api","disconnect","getBalance","address","query","system","account","getUrl","url","likes","urls","getLike","getLikePrice","likePrice","getOwnersRequestPrice","owners","requestPrice","getUrlOwner","getOwnerRequest","requests","getOwnerResult","results","getBlockNumber","number","getUrlInfo","Promise","all","ans","urlLikes","Number","likesSubmittedAt","likesSubmittedCount","likesSubmittedRemaining","txLike","injector","referrer","numLikes","tx","like","signAndSend","signer","txOwnerRequest","requestUrlCheck","txLikeExt","source","memory","monitor","status","isInBlock","isFinalized","unsubTransaction","web3FromSource","s","catch","setState","txStatus","this","AppContext","React","createContext","NetworkButton","buttonStyle","height","backgroundColor","context","network","style","color","className","fontSize","type","renderStatus","Component","contextType","AccountButton","padding","onClick","navigate","display","marginRight","size","marginBottom","name","balance","wika","renderConnected","renderDisconnected","NavBar","tab","href","src","alt","width","ButtonBar","props","styleBox","textAlign","styleButton","borderRadius","styleButtonText","styleMenu","position","bottom","right","opacity","toggleMenu","toggle","state","menuOpened","renderMenu","buttonClass","renderButton","text","icon","navigateTo","action","role","Splash","layoutStyle","gridAutoColumns","gridAutoFlow","columnStyle","imageStyle","Like1","handleNumLikeChange","event","target","update","submitLike","wikaNetwork","monitorLike","alert","disabled","render","Fragment","marginTop","min","max","onChange","marginLeft","readOnly","Like2","rewardWaitFactor","Like","price","handleUrlChange","lookupUrl","subscribeToUrl","subscribeToLike","lookedUp","clearUrl","unsubscribe","unsubUrl","unsubLike","componentWillUnmount","renderPart1","renderPart2","rewardPrct","rewardTarget","Recommend","Wallet","AccountConnectEnablingWeb3","componentDidMount","enableWeb3","wallets","web3Enable","renderSwitch","renderWait","renderNone","renderOk","renderWalletsTable","next","renderWalletsRows","wallet","push","version","AccountConnectSelect","styleItem","margin","styleBox1","flex","styleBox2","styleBox3","alignItems","getAccounts","accounts","web3Accounts","selectAccount","meta","addressU8","decodeAddress","addressRaw","u8aToHex","renderListAccounts","Account","styleInputBox","copyElement","element","usd","id","AccountConnect","web3Enabled","LikedPages","queryApi","apiEndpoint","fetch","response","json","OwnedPages","ClaimPage","DEFAULT_ACCOUNT","NUM_BLOCKS_TO_WAIT","styleTextArea","fontFamily","subscribeToBlockNumber","unsubBlockNumber","currentBlock","subscribeToUrlOwner","subscribeToOwnerRequest","subscribeToOwnerResult","unsubUrlOwner","owner","unsubOwnerRequest","requestBlock","requestAccount","unsubOwnerResult","resultBlock","resultNumVotes","resultNumVotesYes","resultNumVotesMajority","resultIntro","resultMark","resultOutcome","unsubscribeUrl","submitRequest","monitorRequest","testUrl","copyMark","defaultValue","formatOwner","renderPart3","paddingRight","paddingLeft","renderTestResult","testResult","renderPart4","currentRequester","renderSubmitRequest","renderMyRequest","renderOtherRequest","renderMyRequestProgress","blocks_done","renderMyRequestResult","Keccak","updateText","generateHash","hash","keccakAsHex","copy","Wip","MainContent","App","loadCrypto","cryptoState","crypto","cryptoWaitReady","connectNetwork","networkState","subscribeToBalance","unsubGetBalance","balanceWika","free","balanceUsd","Provider","ReactDOM","StrictMode","ref","x","window","wikaReactApp"],"mappings":"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","file":"static/js/main.57fcc577.chunk.js","sourcesContent":["const BALANCE_UNIT = 1000000000000;\nconst WIKA_TO_USD = 0.02 ;\n\n\nfunction copyToClipboard(inputId) {\n    var copyText = document.getElementById(inputId);\n    copyText.select();\n    document.execCommand(\"copy\");\n}\n\nfunction convertToWika(value) {\n    return value / BALANCE_UNIT;\n}\n\nfunction formatWika(value) {\n    if (value != null) {\n        return value.toFixed(4) + ' W';\n    } else {\n        return '-';\n    }\n}\n\nfunction wikaToUsd(value) {\n    if (value!=null) {\n        return value * WIKA_TO_USD ;\n    } else {\n        return null;\n    }\n}\n\nfunction formatUsd(value) {\n    if (value != null) {\n        return value.toFixed(2) + ' US$';\n    } else {\n        return '-';\n    }\n}\n\nfunction shortenText(text) {\n    const maxLength = 50;\n    if (text == null) {\n        return \"\";\n    } else if (text.length > maxLength) {\n        return text.substr(0, maxLength) + '...';\n    } else {\n        return text;\n    }\n}\n\nfunction hexToBytes(hex) {\n    if (hex == null) {\n        return null;\n    }\n    if (hex.substr(0, 2) === '0x') {\n        hex = hex.substr(2);\n    }\n    for (var bytes = [], c = 0; c < hex.length; c += 2) {\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    }\n    return bytes;\n}\n\nfunction bytesToString(array) {\n    if (array==null) return null ;\n    var out, i, len, c;\n    var char2, char3;\n\n    out = \"\";\n    len = array.length;\n    i = 0;\n    while (i < len) {\n        c = array[i++];\n        switch (c >> 4) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                // 0xxxxxxx\n                out += String.fromCharCode(c);\n                break;\n            case 12:\n            case 13:\n                // 110x xxxx   10xx xxxx\n                char2 = array[i++];\n                out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n                break;\n            case 14:\n                // 1110 xxxx  10xx xxxx  10xx xxxx\n                char2 = array[i++];\n                char3 = array[i++];\n                out += String.fromCharCode(((c & 0x0F) << 12) |\n                    ((char2 & 0x3F) << 6) |\n                    ((char3 & 0x3F) << 0));\n                break;\n            default:\n                break;\n        }\n    }\n    return out;\n}\n\nfunction parseError(result) {\n    console.log(JSON.stringify(result));\n    if (result.dispatchError) {\n        try {\n            let data = result.dispatchError.asModule;\n            let index = data.index;\n            let error = data.error;\n            return \"Transaction error (\" + index + \",\" + error + \")\";\n        } catch (err) {\n            return \"Transaction error\";\n        }\n    } else {\n        return null;\n    }\n}\n\n\nexport {copyToClipboard, convertToWika, formatWika, wikaToUsd, formatUsd, shortenText, hexToBytes, bytesToString, parseError} ;\n","import {ApiPromise, WsProvider} from '@polkadot/api';\nimport {web3FromSource} from '@polkadot/extension-dapp';\nimport {parseError} from \"./misc\";\n\n\nclass WikaNetwork {\n\n    constructor(endpoint) {\n        this.endpoint = endpoint ;\n        this.api = null ;\n    }\n\n    connect = (callback) => {\n        let self = this ;\n        self.wsProvider = new WsProvider(self.endpoint) ;\n        return ApiPromise.create({ provider: self.wsProvider })\n            .then((api) => {\n                self.api = api ;\n                callback() ;\n            }) ;\n    }\n\n    disconnect = (callback) => {\n        return this.api.disconnect().then(callback) ;\n    }\n\n    getBalance = (address, callback) => {\n        return this.api.query.system.account(address, callback) ;\n    }\n\n    getUrl = (url, callback) => {\n        return this.api.query.likes.urls(url, callback) ;\n    }\n\n    getLike = (address, url, callback) => {\n        return this.api.query.likes.likes(address, url, callback) ;\n    }\n\n    getLikePrice = (callback) => {\n        return this.api.query.likes.likePrice(callback) ;\n    }\n\n    getOwnersRequestPrice = (callback) => {\n        return this.api.query.owners.requestPrice(callback) ;\n    }\n\n    getUrlOwner = (url, callback) => {\n        return this.api.query.owners.owners(url, callback) ;\n    }\n\n    getOwnerRequest = (url, callback) => {\n        return this.api.query.owners.requests(url, callback) ;\n    }\n\n    getOwnerResult = (url, callback) => {\n        return this.api.query.owners.results(url, callback) ;\n    }\n\n    getBlockNumber = (callback) => {\n        return this.api.query.system.number(callback) ;\n    }\n\n    getUrlInfo = (address, url, callback) => {\n        Promise.all([this.api.query.likes.urls(url),this.api.query.likes.likes(address, url)])\n            .then((result) => {\n                let ans = {\n                    urlLikes: Number(result[0][0]),\n                    likesSubmittedAt: Number(result[1][0]),\n                    likesSubmittedCount:Number(result[1][1]),\n                    likesSubmittedRemaining:Number(result[1][2])\n                } ;\n                callback(ans) ;\n            }) ;\n    }\n\n\n\n\n    txLike = (address, injector, url, referrer, numLikes, callback) => {\n        let tx = this.api.tx.likes.like(url, referrer, numLikes) ;\n        return tx.signAndSend(address, {signer: injector.signer}, callback) ;\n    }\n\n    txOwnerRequest = (address, injector, url, callback) => {\n        let tx = this.api.tx.owners.requestUrlCheck(url) ;\n        return tx.signAndSend(address, {signer: injector.signer}, callback) ;\n    }\n\n    txLikeExt = (source, address, url, referrer, numLikes, callback) => {\n        console.log(source, address, url, referrer, numLikes);\n        let self = this;\n        let memory = {} ;\n        let monitor = (result) => {\n            let status = result.status ;\n            if (status.isInBlock) {\n                callback({status:'In block'}) ;\n            } else if (status.isFinalized) {\n                memory.unsubTransaction();\n                let err = parseError(result) ;\n                if (err) {\n                    callback({status:'Error', err: err}) ;\n                } else {\n                    callback({status:'Done'}) ;\n                }\n            }\n        }\n        web3FromSource(source).then((injector) => {\n            callback({status:'Sending'}) ;\n            self.txLike(address, injector, url, referrer, numLikes, monitor).then((s) => {\n                memory.unsubTransaction = s;\n            }).catch((err) => {\n                self.setState({txStatus: null}) ;\n                callback({status:'Error', err: err}) ;\n            }) ;\n        });\n    }\n\n\n\n}\n\nexport default WikaNetwork ;\n","import React from \"react\";\n\nconst AppContext = React.createContext();\n\nexport default AppContext ;\n","import React from 'react';\n\nimport AppContext from '../utils/context' ;\n\n\n\nclass NetworkButton extends React.Component {\n\n    static contextType = AppContext;\n\n    buttonStyle = {\n        height: '45px',\n        backgroundColor: 'rgb(80 80 80)'\n    }\n\n    renderStatus() {\n        switch (this.context.network.status) {\n            case 'connected': return <i style={{color:'green'}} className=\"fas fa-check\"></i> ;\n            case 'disconnected': return <i style={{color:'red'}} className=\"fas fa-times\"></i> ;\n            case 'connecting': return <i style={{color:'orange'}} className=\"fas fa-spinner\"></i> ;\n            default: return \"\" ;\n        }\n    }\n\n    render() {\n        return (\n            <button style={this.buttonStyle}>\n                <span style={{color: 'lightgray', fontSize:'18px'}}>\n                    <i className=\"fas fa-network-wired\"></i>\n                    &nbsp;&nbsp;\n                    {this.context.network.type}\n                    &nbsp;&nbsp;\n                    {this.renderStatus()}\n                </span>\n            </button>\n        );\n    }\n\n}\n\n\nexport default NetworkButton ;\n\n\n\n","import React from 'react';\nimport Identicon from \"@polkadot/react-identicon\";\n\n\nimport AppContext from '../utils/context' ;\nimport {formatWika} from \"../utils/misc\";\n\n\n\nclass AccountButton extends React.Component {\n\n    static contextType = AppContext;\n\n    buttonStyle = {\n        height: '45px',\n        padding: '2px 10px',\n        backgroundColor: 'rgb(80 80 80)'\n    }\n\n    renderDisconnected() {\n        return (\n            <button style={this.buttonStyle} onClick={() => this.context.navigate('account')}>\n                <span style={{color: 'lightgray', fontSize:'18px'}}>\n                    <i className=\"far fa-user-circle\"></i>\n                    &nbsp;&nbsp;\n                    Connect account\n                </span>\n            </button>\n        );\n    }\n\n    renderConnected() {\n        return (\n            <button className=\"outline secondary\" style={this.buttonStyle} onClick={() => this.context.navigate('account')}>\n                <div style={{display:'flex'}}>\n                    <div style={{marginRight:'15px'}}>\n                        <Identicon size={40} value={this.context.account.address}/>\n                    </div>\n                    <div style={{color: 'lightgray', fontSize:'14px'}}>\n                        <div style={{marginBottom:'5px'}}>{this.context.account.name}</div>\n                        <div>{formatWika(this.context.balance.wika)}</div>\n                    </div>\n                </div>\n            </button>\n        );\n    }\n\n    render() {\n        if (this.context.account) {\n            return this.renderConnected() ;\n        } else {\n            return this.renderDisconnected() ;\n        }\n    }\n\n}\n\n\nexport default AccountButton ;\n\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../utils/context\";\n\n\nimport NetworkButton from \"./NetworkButton\";\nimport AccountButton from \"./AccountButton\";\n\n\n\nclass NavBar extends React.Component {\n\n    static contextType = AppContext;\n\n    navigate = (tab) => {\n        this.context.navigate(tab);\n    }\n\n    render() {\n        return (\n            <div className=\"main-navbar\">\n                <div>\n                    <a href=\"/#\" onClick={() => this.context.navigate('splash')}>\n                        <img src=\"images/logo_alt1.png\" alt=\"\" width=\"40\" height=\"40\"/>\n                    </a>\n                </div>\n                <div><NetworkButton /></div>\n                <div><AccountButton /></div>\n            </div>\n        );\n    }\n\n}\n\n\nexport default NavBar ;\n\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../utils/context\";\n\n\n\n\n\nclass ButtonBar extends React.Component {\n\n    static contextType = AppContext;\n\n    styleBox = {\n        textAlign: 'center',\n        width: '80px'\n    }\n\n    styleButton = {\n        borderRadius: '50px',\n        padding: '5px 10px'\n    }\n\n    styleButtonText = {\n        fontSize: '12px',\n        color: '#1095c1'\n    }\n\n    styleMenu = {\n        position: 'absolute',\n        bottom: '5px',\n        right: '5px',\n        backgroundColor: 'aliceblue',\n        padding: '10px',\n        borderRadius: '10px',\n        opacity: '90%'\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {menuOpened: false};\n    }\n\n    toggleMenu = () => {\n        let toggle = !this.state.menuOpened ;\n        this.setState({menuOpened:toggle}) ;\n    }\n\n    navigate = (tab) => {\n        this.setState({menuOpened:false}) ;\n        this.context.navigate(tab);\n    }\n\n    renderMenu = () => {\n        if (this.state.menuOpened) {\n            return (\n                <aside style={this.styleMenu}>\n                    <nav>\n                        <ul>\n                            <li><a href=\"/#\" onClick={() => this.navigate('account')}>Account</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('liked_pages')}>Liked pages</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('owned_pages')}>Owned pages</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('claim_page')}>Claim page ownership</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('keccak')}>Keccak 256</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('blockchains')}>Blockchains</a></li>\n                            <li><a href=\"/#\" onClick={() => this.navigate('about')}>About</a></li>\n                        </ul>\n                    </nav>\n                </aside>\n            );\n        } else {\n            return \"\" ;\n        }\n    }\n\n    buttonClass = (tab) => {\n        if (this.context.tab === tab) {\n            return \"contrast\" ;\n        } else {\n            return \"primary\" ;\n        }\n    }\n\n    renderButton = (text, icon, navigateTo) => {\n        let action = () => {this.context.navigate(navigateTo)} ;\n        if (navigateTo==='toggleMenu') {\n            action = this.toggleMenu ;\n        }\n        return (\n            <div style={this.styleBox}>\n                <a href=\"/#\" role=\"button\"\n                   style={this.styleButton}\n                   className={this.buttonClass(navigateTo)}\n                   onClick={action}>\n                        <i className={'far '+icon}></i>\n                </a>\n                <br/>\n                <span style={this.styleButtonText}>\n                    {text}\n                </span>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.context.account) {\n            return (\n                <div className=\"main-buttonbar\">\n                    {this.renderButton('Like', 'fa-thumbs-up', 'like')}\n                    {this.renderButton('Buy', 'fa-credit-card', 'buy')}\n                    {this.renderButton('Send', 'fa-paper-plane', 'wallet')}\n                    {this.renderButton('Claim', 'fa-registered', 'claim_page')}\n                    {this.renderButton('More', 'fa-caret-square-down', 'toggleMenu')}\n                    {this.renderMenu()}\n                </div>\n            ) ;\n        } else {\n            return \"\" ;\n        }\n    }\n\n}\n\n\nexport default ButtonBar ;\n\n\n\n","import React from \"react\";\n\n\nimport AppContext from \"../utils/context\";\n\n\nclass Splash extends React.Component {\n\n    static contextType = AppContext;\n\n    layoutStyle = {display: \"grid\", gridAutoColumns: \"1fr\", gridAutoFlow: \"column\"};\n\n    columnStyle = {padding: \"20px\", fontSize: \"15px\", textAlign: \"center\"};\n\n    imageStyle = {width: \"125px\", height: \"80px\"}\n\n    render() {\n        return (\n            <div className=\"main-content\" style={{textAlign: \"center\"}}>\n                <h5>Welcome to the Wika Network!</h5>\n                <div style={this.layoutStyle}>\n                    <div style={this.columnStyle}>\n                        <h6>If you're a generous internet consumer</h6>\n                        <img src=\"images/splash1.png\" alt=\"\" style={this.imageStyle} /> <br/><br/>\n                        Like your favorite pages and reward the authors and previous likers.\n                    </div>\n                    <div style={this.columnStyle}>\n                        <h6>If you authored a cool web page</h6>\n                        <img src=\"images/splash2.png\" alt=\"\" style={this.imageStyle} /> <br/><br/>\n                        Register it in one public decentralized database, and whether your content\n                        lives in youtube, facebook, medium or any other internet place,\n                        Wika users will be able to reward you directly.\n                    </div>\n                    <div style={this.columnStyle}>\n                        <h6>If you want a better internet</h6>\n                        <img src=\"images/splash3.png\" alt=\"\" style={this.imageStyle} /> <br/><br/>\n                        Join and use the Wika Network to build a clean, public and non-intrusive database.\n                        The Wika Blockchain will empower new search engines and recommendation systems\n                        that respect your privacy and are 100% transparent.\n                    </div>\n                </div>\n                <br/>\n                <h6>Together, let's make the internet a better place and spread quality content.</h6>\n                {this.context.account==null?\n                    <button className=\"primary\" onClick={() => this.context.navigate('account')}>\n                        Connect your account and get started now!\n                    </button>\n                 :\"\"}\n            </div>\n        );\n    }\n\n}\n\n\nexport default Splash ;\n\n\n","import React from 'react';\nimport {web3FromSource} from '@polkadot/extension-dapp';\n\n\nimport AppContext from \"../../utils/context\";\nimport {formatWika, parseError} from \"../../utils/misc\";\n\n\nclass Like1 extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            numLikes: 1\n        };\n    }\n\n    handleNumLikeChange = (event) => {\n        this.setState({numLikes: event.target.value}, this.update) ;\n    }\n\n    submitLike = () => {\n        let self = this;\n        let url = self.props.url ;\n        let referrer = self.state.referrer ;\n        let numLikes = self.state.numLikes ;\n        let source = self.context.account.source ;\n        let address = self.context.account.address ;\n        web3FromSource(source).then((injector) => {\n            self.setState({txStatus: 'Sending...'}, () => {\n                self.context.wikaNetwork.txLike(address, injector, url, referrer, numLikes, self.monitorLike).then((s) => {\n                    self.unsubTransaction = s;\n                }).catch((err) => {\n                    self.setState({txStatus: null}) ;\n                    alert(err) ;\n                }) ;\n            });\n        }) ;\n    }\n\n    monitorLike = (result) => {\n        let status = result.status ;\n        if (status.isInBlock) {\n            this.setState({txStatus: 'In block...'}) ;\n        } else if (status.isFinalized) {\n            this.setState({txStatus: null}) ;\n            this.unsubTransaction();\n            let err = parseError(result) ;\n            if (err) {\n                alert(err) ;\n            }\n        }\n    }\n\n    renderButton = () => {\n        if (this.state.txStatus==null) {\n            return (\n                <button onClick={this.submitLike}>\n                    Send {this.state.numLikes} <i className=\"fas fa-thumbs-up\"></i>\n                </button>\n            );\n        } else {\n            return (\n                <button disabled>\n                    <i className=\"fas fa-spinner\"></i> {this.state.txStatus}\n                </button>\n            ) ;\n        }\n    }\n\n    render = () => {\n        return (\n            <React.Fragment>\n\n                <p>\n                    This page received <strong>{this.props.urlLikes} likes</strong>.\n                </p>\n\n                <hr/>\n\n                <h5>Send likes to this page:</h5>\n\n                <strong>Which URL referred you to the page?</strong>\n                <input type=\"text\" />\n\n                <strong>How much do you like it?</strong>\n                <div style={{display:'flex'}}>\n                    <div style={{marginTop:'15px'}}>\n                        <input style={{width:'250px'}}\n                               type=\"range\" min=\"1\" max=\"100\"\n                               value={this.state.numLikes}\n                               onChange={this.handleNumLikeChange} />\n                    </div>\n                    <div style={{marginTop:'10px', marginLeft:'15px'}}>\n                        <strong>{this.state.numLikes} <i className=\"fas fa-thumbs-up\"></i></strong>\n                    </div>\n                </div>\n\n                <strong>Cost of this transaction</strong>\n                <input style={{textAlign:\"right\"}}\n                       type=\"text\"\n                       readOnly\n                       value={formatWika(this.props.likePrice*this.state.numLikes)}\n                />\n\n                {this.renderButton()}\n\n            </React.Fragment>\n        );\n    }\n\n}\n\n\nexport default Like1 ;\n","import React from 'react';\n\n\nclass Like2 extends React.Component {\n\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <p>\n                    This page received <strong>{this.props.urlLikes} likes</strong>.\n                </p>\n                <p>\n                    You sent it <strong>{this.props.likesSubmittedCount} likes</strong>.\n                </p>\n                <p>\n                    You are ranked <strong>#{this.props.likesSubmittedAt+1}</strong> on the queue of people who liked this page,\n                    therefore, you will start receiving rewards when it hits {(this.props.likesSubmittedAt*this.props.rewardWaitFactor)+2} likes.\n                </p>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default Like2 ;\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../../utils/context\";\nimport {convertToWika} from \"../../utils/misc\";\n\n\nimport Like1 from \"./Like1\";\nimport Like2 from \"./Like2\";\n\n\n\nclass Like extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lookedUp:false,\n            url: \"\",\n            referrer: null,\n            likePrice: null,\n            rewardPrct: '33%',\n            rewardTarget: 1.33,\n            rewardWaitFactor: 4,\n            urlLikes: null,\n            likesSubmittedAt: null,\n            likesSubmittedCount: null,\n            likesSubmittedRemaining: null\n        }\n    }\n\n    componentDidMount() {\n        this.getLikePrice() ;\n    }\n\n    getLikePrice = () => {\n        let self = this;\n        self.context.wikaNetwork.getLikePrice((result) => {\n            let price = convertToWika(result) ;\n            self.setState({likePrice:price}) ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    handleUrlChange = (event) => {\n        this.setState({url: event.target.value}) ;\n    }\n\n    lookupUrl = () => {\n        this.subscribeToUrl() ;\n        this.subscribeToLike() ;\n        this.setState({lookedUp:true}) ;\n    }\n\n    clearUrl = () => {\n        this.unsubscribe() ;\n        this.setState({\n            lookedUp:false,\n            url:\"\",\n            likesSubmittedCount:null,\n        }) ;\n    }\n\n    subscribeToUrl = () => {\n        let self = this;\n        if (self.unsubUrl) {\n            self.unsubUrl() ;\n            self.unsubUrl = null ;\n        }\n        let url = this.state.url;\n        self.context.wikaNetwork.getUrl(url, (result) => {\n            let urlLikes = Number(result[0]) ;\n            self.setState({urlLikes:urlLikes}) ;\n        }).then((s) => {\n            self.unsubUrl = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    subscribeToLike = () => {\n        let self = this;\n        if (self.unsubLike) {\n            self.unsubLike() ;\n            self.unsubLike = null ;\n        }\n        let address = this.context.account.address;\n        let url = this.state.url;\n        self.context.wikaNetwork.getLike(address, url, (result) => {\n            self.setState({\n                likesSubmittedAt:Number(result[0]),\n                likesSubmittedCount:Number(result[1]),\n                likesSubmittedRemaining:Number(result[2])\n            }) ;\n        }).then((s) => {\n            self.unsubLike = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    componentWillUnmount = () => {\n        this.unsubscribe() ;\n    }\n\n    unsubscribe = () => {\n        if (this.unsubUrl) {\n            this.unsubUrl() ;\n        }\n        if (this.unsubLike) {\n            this.unsubLike() ;\n        }\n    }\n\n    renderPart1 = () => {\n        return (\n            <React.Fragment>\n                <label>URL</label>\n                <input type=\"text\"\n                       value={this.state.url}\n                       onChange={this.handleUrlChange}\n                       disabled={this.state.lookedUp}\n                />\n                {this.state.lookedUp?\n                <button onClick={this.clearUrl} className=\"contrast\">Clear</button>\n                :<button onClick={this.lookupUrl}>Lookup URL status</button>}\n            </React.Fragment>\n        ) ;\n    }\n\n    renderPart2 = () => {\n        if (this.state.lookedUp && this.state.likesSubmittedCount!=null) {\n            if (this.state.likesSubmittedCount>0) {\n                return <Like2\n                    urlLikes={this.state.urlLikes}\n                    likesSubmittedCount={this.state.likesSubmittedCount}\n                    likesSubmittedAt={this.state.likesSubmittedAt}\n                    rewardWaitFactor={this.state.rewardWaitFactor}\n                />\n            } else {\n                return <Like1\n                    url={this.state.url}\n                    urlLikes={this.state.urlLikes}\n                    likePrice={this.state.likePrice}\n                />\n            }\n        }\n    }\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <h2>Like</h2>\n                {this.renderPart1()}\n                <hr/>\n                {this.renderPart2()}\n            </div>\n        ) ;\n    }\n\n}\n\nexport default Like ;\n\n\n\n","import React from 'react';\n\n\nclass Recommend extends React.Component {\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h2>Recommend</h2>\n            </div>\n        );\n    }\n\n}\n\nexport default Recommend ;\n\n\n","import React from 'react';\n\n\nclass Wallet extends React.Component {\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h2>Wallet</h2>\n            </div>\n        );\n    }\n\n}\n\nexport default Wallet ;\n\n\n","import React from \"react\";\nimport {web3Enable} from '@polkadot/extension-dapp';\n\n\nclass AccountConnectEnablingWeb3 extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {wallets: null};\n    }\n\n    componentDidMount = () => {\n        this.enableWeb3();\n    }\n\n    enableWeb3 = () => {\n        this.setState({wallets: null}, () => {\n            web3Enable(\"Wika Network\").then((result) => {\n                this.setState({wallets: result});\n            });\n        });\n    }\n\n    renderSwitch = () => {\n        if (this.state.wallets === null) {\n            return this.renderWait();\n        } else if (this.state.wallets.length === 0) {\n            return this.renderNone();\n        } else {\n            return this.renderOk();\n        }\n    }\n\n    renderWait = () => {\n        return (\n            <p>\n                <i className=\"fas fa-spinner\"></i>\n                Waiting for wallet's authorization...\n            </p>\n        );\n    }\n\n    renderNone = () => {\n        return (\n            <React.Fragment>\n                <p>\n                    <strong>No Polkadot wallets detected.</strong>\n                    <br/>\n                    Please install one and make sure you authorize this app to use it.\n                </p>\n                <div style={{textAlign: 'right'}}>\n                    <a href=\"/#\" role=\"button\" className=\"secondary\" >Install Pokadot-JS Extension</a>\n                    &nbsp;&nbsp;\n                    <a href=\"/#\" role=\"button\" className=\"primary\" onClick={this.enableWeb3}>Retry</a>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    renderOk = () => {\n        return (\n            <React.Fragment>\n                <strong>Polkadot wallets detected:</strong>\n                {this.renderWalletsTable()}\n                <button onClick={this.props.next}>Continue</button>\n            </React.Fragment>\n        );\n    }\n\n    renderWalletsTable = () => {\n        return (\n           <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Version</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.renderWalletsRows()}\n              </tbody>\n            </table>\n        ) ;\n    }\n\n    renderWalletsRows = () => {\n        let ans = [] ;\n        for (let i in this.state.wallets) {\n            let wallet = this.state.wallets[i] ;\n            ans.push(\n                <tr key={i}>\n                  <td>{wallet.name}</td>\n                  <td>{wallet.version}</td>\n                </tr>\n            ) ;\n        }\n        return ans ;\n    }\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <h5>Enabling Polkadot Wallets</h5>\n                {this.renderSwitch()}\n            </div>\n        );\n    }\n\n}\n\nexport default AccountConnectEnablingWeb3;\n\n\n","import React from \"react\";\nimport {web3Accounts} from '@polkadot/extension-dapp';\nimport Identicon from '@polkadot/react-identicon';\nimport {decodeAddress} from '@polkadot/util-crypto';\nimport {u8aToHex} from '@polkadot/util';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass AccountConnectSelect extends React.Component {\n\n    static contextType = AppContext;\n\n    styleItem = {\n        padding: 0,\n        margin: \"15px\"\n    }\n\n    styleBox1 = {\n        flex: \"40px\",\n        padding: \"15px\",\n    }\n\n    styleBox2 = {\n        flex: \"100%\",\n        padding: \"15px\"\n    }\n\n    styleBox3 = {\n        flex: '100px',\n        display: \"flex\",\n        padding: \"15px\",\n        textAlign: \"center\",\n        alignItems: \"center\",\n        fontSize: \"32px\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {accounts: []};\n    }\n\n    componentDidMount = () => {\n        this.getAccounts();\n    }\n\n    getAccounts = () => {\n        this.setState({accounts: []}, () => {\n            web3Accounts().then((result) => {\n                this.setState({accounts: result});\n            });\n        });\n    }\n\n    selectAccount = (account) => () => {\n        let address = account.address ;\n        let name = account.meta.name ;\n        let source = account.meta.source ;\n        let addressU8 = decodeAddress(address) ;\n        let addressRaw = u8aToHex(addressU8) ;\n        let data = {\n            name: name,\n            address: address,\n            addressRaw: addressRaw,\n            source: source\n        };\n        this.context.selectAccount(data) ;\n    }\n\n    renderListAccounts = () => {\n        let ans = [] ;\n        for (let i in this.state.accounts) {\n            let account = this.state.accounts[i] ;\n            ans.push(\n                <article key={i} style={this.styleItem}>\n                    <div style={{display:'flex'}} onClick={this.selectAccount(account)}>\n                        <div style={this.styleBox1}>\n                            <Identicon value={account.address}/>\n                        </div>\n                        <div style={this.styleBox2}>\n                            <strong>{account.meta.name}</strong>\n                            <br/>\n                            <span style={{fontSize:'12px'}}>{account.address}</span>\n                        </div>\n                        <div style={this.styleBox3}>\n                            <a href=\"/#\" onClick={this.selectAccount(account)}>\n                                <i className=\"fas fa-arrow-alt-circle-right\"></i>\n                            </a>\n                        </div>\n                    </div>\n                </article>\n            ) ;\n        }\n        return ans ;\n    }\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <h5>Select the account to work with</h5>\n                {this.renderListAccounts()}\n            </div>\n        );\n    }\n\n}\n\nexport default AccountConnectSelect;\n\n\n","import React from \"react\";\nimport Identicon from '@polkadot/react-identicon';\n\n\nimport AppContext from \"../../utils/context\";\nimport {copyToClipboard, formatWika, formatUsd} from \"../../utils/misc\";\n\n\nclass Account extends React.Component {\n\n    static contextType = AppContext;\n\n    styleInputBox = {\n        fontSize: '16px',\n        textAlign: 'center'\n    } ;\n\n    copyElement = (element) => () => {\n        copyToClipboard(element) ;\n    }\n\n    disconnect = () => {\n        this.context.selectAccount(null) ;\n    }\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <h2>Account</h2>\n\n                <div style={{textAlign:'center', marginBottom:'35px'}}>\n                    <Identicon value={this.context.account.address}/>\n                    <br/>\n                    <strong>{this.context.account.name}</strong>\n                </div>\n\n                <strong>Balance</strong>\n                <div style={{display: 'flex'}}>\n                    <div style={{flex: '50%', marginRight: '10px'}}>\n                        <input type=\"text\"\n                               value={formatWika(this.context.balance.wika)}\n                               readOnly={true}\n                               style={{textAlign: 'right'}}\n                        />\n                    </div>\n                    <div style={{flex: '50%', marginLeft: '10px'}}>\n                        <input type=\"text\"\n                               value={formatUsd(this.context.balance.usd)}\n                               readOnly={true}\n                               style={{textAlign: 'right'}}\n                        />\n                    </div>\n                </div>\n\n                <strong>\n                    Public Address (Substrate format)\n                    &nbsp;&nbsp;\n                    <a href=\"/#\" onClick={this.copyElement(\"account_address_element\")}>\n                        <i className=\"far fa-copy\"></i>\n                    </a>\n                </strong>\n                <input id=\"account_address_element\"\n                       type=\"text\"\n                       value={this.context.account.address}\n                       readOnly={true}\n                       style={this.styleInputBox}\n                />\n\n                <strong>\n                    Public Address (Raw hex format)\n                    &nbsp;&nbsp;\n                    <a href=\"/#\" onClick={this.copyElement(\"account_address_raw_element\")}>\n                        <i className=\"far fa-copy\"></i>\n                    </a>\n                </strong>\n                <input id=\"account_address_raw_element\"\n                       type=\"text\"\n                       value={this.context.account.addressRaw}\n                       readOnly={true}\n                       style={this.styleInputBox}\n                />\n\n                <button onClick={this.disconnect} className=\"contrast\">\n                    Disconnect this account\n                    &nbsp;&nbsp;&nbsp;\n                    <i className=\"fas fa-sign-out-alt\"></i>\n                </button>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Account;\n\n\n","import React from \"react\";\n\n\nimport AppContext from \"../../utils/context\";\n\n\nimport AccountConnectEnablingWeb3 from \"./AccountConnectEnablingWeb3\";\nimport AccountConnectSelect from \"./AccountConnectSelect\";\nimport Account from \"./Account\";\n\n\n\nclass AccountConnect extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            web3Enabled: false\n        }\n    }\n\n    web3Enabled = () => {\n        this.setState({web3Enabled: true}) ;\n    }\n\n    render = () => {\n        if (this.context.account) {\n            return <Account /> ;\n        } else {\n            if (this.state.web3Enabled) {\n                return <AccountConnectSelect /> ;\n            } else {\n                return <AccountConnectEnablingWeb3 next={this.web3Enabled}/> ;\n            }\n        }\n    }\n\n}\n\nexport default AccountConnect ;\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass LikedPages extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {urls: null};\n    }\n\n    componentDidMount = () => {\n        this.queryApi() ;\n    }\n\n    queryApi = () => {\n        const self = this;\n        const address = this.context.account.address;\n        const url = this.context.apiEndpoint.url + '/user/' + address + '/liked_urls' ;\n        console.log(url) ;\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {self.setState({urls: data});});\n    }\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h5>Liked pages</h5>\n                {JSON.stringify(this.context.apiEndpoint)}\n                <br/>\n                {JSON.stringify(this.state.urls)}\n            </div>\n        );\n    }\n\n}\n\nexport default LikedPages ;\n\n\n","import React from 'react';\n\n\nimport AppContext from \"../../utils/context\";\n\n\nclass OwnedPages extends React.Component {\n\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {urls: null};\n    }\n\n    componentDidMount = () => {\n        this.queryApi() ;\n    }\n\n    queryApi = () => {\n        const self = this;\n        const address = this.context.account.address;\n        const url = this.context.apiEndpoint.url + '/user/' + address + '/owned_urls' ;\n        console.log(url) ;\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {self.setState({urls: data});});\n    }\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h2>Owned pages</h2>\n                {JSON.stringify(this.context.apiEndpoint)}\n                <br/>\n                {JSON.stringify(this.state.urls)}\n            </div>\n        );\n    }\n\n}\n\nexport default OwnedPages ;\n\n\n","import React from \"react\";\nimport {web3FromSource} from \"@polkadot/extension-dapp\";\n\n\nimport AppContext from \"../../utils/context\";\nimport {bytesToString, convertToWika, copyToClipboard, parseError} from \"../../utils/misc\";\n\n\nclass ClaimPage extends React.Component {\n\n    static contextType = AppContext;\n\n    DEFAULT_ACCOUNT = \"5C4hrfjw9DjXZTzV3MwzrrAr9P1MJhSrvWGWqi1eSuyUpnhM\" ;\n\n    NUM_BLOCKS_TO_WAIT = 10 ;\n\n    styleTextArea = {\n        fontFamily: 'monospace',\n        fontSize: '9px'\n    }\n\n    styleButton = {\n        padding: 0,\n        marginBottom: '4px'\n    }\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lookedUp:false,\n            url: \"\",\n            requestPrice: null,\n            owner: null,\n            requestBlock: null,\n            requestAccount: null,\n            currentBlock: null,\n            txStatus: null,\n            testResult: null\n        } ;\n    }\n\n\n    // INITIALIZATION\n    // --------------------------------\n\n    componentDidMount = () => {\n        this.getOwnersRequestPrice() ;\n        this.subscribeToBlockNumber() ;\n    }\n\n    getOwnersRequestPrice = () => {\n        let self = this;\n        self.context.wikaNetwork.getOwnersRequestPrice((result) => {\n            let price = convertToWika(result) ;\n            self.setState({requestPrice:price}) ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n    subscribeToBlockNumber = () => {\n        let self = this;\n        if (self.unsubBlockNumber) {\n            self.unsubBlockNumber() ;\n            self.unsubBlockNumber = null ;\n        }\n        self.context.wikaNetwork.getBlockNumber((result) => {\n            self.setState({\n                currentBlock:Number(result)\n            }) ;\n        }).then((s) => {\n            self.unsubBlockNumber = s ;\n        }).catch((err) => {\n            alert(err) ;\n        }) ;\n    }\n\n\n\n\n    // Lookup URL\n    // --------------------------------\n\n    handleUrlChange = (event) => {\n        this.setState({url: event.target.value}) ;\n    }\n\n    lookupUrl = () => {\n        this.setState({\n            lookedUp: true\n        }) ;\n        this.subscribeToUrlOwner() ;\n        this.subscribeToOwnerRequest() ;\n        this.subscribeToOwnerResult() ;\n    }\n\n    subscribeToUrlOwner = () => {\n        let self = this;\n        if (self.unsubUrlOwner) {\n            self.unsubUrlOwner() ;\n            self.unsubUrlOwner = null ;\n        }\n        let url = self.state.url;\n        this.setState({owner:null}, () => {\n            self.context.wikaNetwork.getUrlOwner(url, (result) => {\n                self.setState({\n                    owner: \"\" + result\n                });\n            }).then((s) => {\n                self.unsubUrlOwner = s;\n            }).catch((err) => {\n                alert(err);\n            });\n        }) ;\n    }\n\n    subscribeToOwnerRequest = () => {\n        let self = this;\n        if (self.unsubOwnerRequest) {\n            self.unsubOwnerRequest() ;\n            self.unsubOwnerRequest = null ;\n        }\n        let url = self.state.url;\n        let clearState = {\n            requestBlock: null,\n            requestAccount: null\n        } ;\n        this.setState(clearState, () => {\n            self.context.wikaNetwork.getOwnerRequest(url, (result) => {\n                self.setState({\n                    requestBlock: Number(result[0]),\n                    requestAccount: \"\"+result[1]\n                });\n            }).then((s) => {\n                self.unsubOwnerRequest = s;\n            }).catch((err) => {\n                alert(err);\n            });\n        }) ;\n    }\n\n    subscribeToOwnerResult = () => {\n        let self = this;\n        if (self.unsubOwnerResult) {\n            self.unsubOwnerResult() ;\n            self.unsubOwnerResult = null ;\n        }\n        let url = self.state.url;\n        let clearState = {\n            resultBlock: null,\n            resultNumVotes: null,\n            resultNumVotesYes: null,\n            resultNumVotesMajority: null,\n            resultIntro: null,\n            resultMark: null,\n            resultOutcome: null\n        } ;\n        this.setState(clearState, () => {\n            self.context.wikaNetwork.getOwnerResult(url, (result) => {\n                let data = {\n                    resultBlock: Number(result[0]),\n                    resultNumVotes: Number(result[1]),\n                    resultNumVotesYes: Number(result[2]),\n                    resultNumVotesMajority: Number(result[3]),\n                    resultIntro: result[4],\n                    resultMark: result[5],\n                    resultOutcome: result[6]\n                };\n                self.setState(data);\n            }).then((s) => {\n                self.unsubOwnerResult = s;\n            });\n        }) ;\n    }\n\n    unsubscribeUrl = () => {\n        if (this.unsubUrlOwner) {\n            this.unsubUrlOwner() ;\n        }\n        if (this.unsubOwnerRequest) {\n            this.unsubOwnerRequest() ;\n        }\n        if (this.unsubOwnerResult) {\n            this.unsubOwnerResult() ;\n        }\n    }\n\n    clearUrl = () => {\n        this.unsubscribeUrl() ;\n        this.setState({\n            lookedUp:false,\n            url:\"\",\n            owner: null\n        }) ;\n    }\n\n\n\n    // Submit and monitor the request\n    // --------------------------------\n\n    submitRequest = () => {\n        let self = this;\n        let url = self.state.url ;\n        let source = self.context.account.source ;\n        let address = self.context.account.address ;\n        web3FromSource(source).then((injector) => {\n            self.setState({txStatus: 'Sending...'}, () => {\n                self.context.wikaNetwork.txOwnerRequest(address, injector, url, self.monitorRequest).then((s) => {\n                    self.unsubTransaction = s;\n                }).catch((err) => {\n                    self.setState({txStatus: null}) ;\n                    alert(err) ;\n                }) ;\n            })\n        });\n    }\n\n    monitorRequest = (result) => {\n        let status = result.status ;\n        if (status.isInBlock) {\n            this.setState({txStatus: 'In block...'}) ;\n        } else if (status.isFinalized) {\n            this.setState({txStatus: null}) ;\n            this.unsubTransaction();\n            let err = parseError(result) ;\n            if (err) {\n                alert(err) ;\n            }\n        }\n    }\n\n\n    // Test the webpage ownership off-chain\n    // --------------------------------------\n\n    testUrl = () => {\n        /*let self = this;\n        let url = self.context.url ;\n        fetch(url, {\n              method: \"GET\",\n            })\n            .then(response => console.log(response))\n            .catch(err => console.log(err));*/\n    };\n\n\n    // Utils\n    // --------------------------------------\n\n    copyMark = () => {\n        copyToClipboard(\"wika_mark_element\") ;\n    };\n\n\n    // Clean-up when done\n    // --------------------------------------\n\n    componentWillUnmount = () => {\n        if (this.unsubUrlOwner) {\n            this.unsubUrlOwner() ;\n        }\n        if (this.unsubOwnerRequest) {\n            this.unsubOwnerRequest() ;\n        }\n        if (this.unsubOwnerResult) {\n            this.unsubOwnerResult() ;\n        }\n        if (this.unsubBlockNumber) {\n            this.unsubBlockNumber() ;\n        }\n    }\n\n\n\n\n\n\n\n\n    // FRONT-END Part 1\n    // --------------------------------------\n\n    renderPart1 = () => {\n        return (\n            <React.Fragment>\n                <label>URL</label>\n                <input type=\"text\"\n                       value={this.state.url}\n                       onChange={this.handleUrlChange}\n                       disabled={this.state.lookedUp}\n                />\n                {this.state.lookedUp?\n                <button onClick={this.clearUrl} className=\"contrast\">Clear</button>\n                :<button onClick={this.lookupUrl}>Lookup URL status</button>}\n            </React.Fragment>\n        ) ;\n    }\n\n\n\n\n\n\n    // FRONT-END Part 2\n    // --------------------------------------\n\n    renderPart2 = () => {\n        if (this.state.lookedUp && this.state.owner!=null) {\n            return (\n                 <React.Fragment>\n                     <hr/>\n                    <label>Current Owner</label>\n                    <input type=\"text\" readOnly defaultValue={this.formatOwner(this.state.owner)}/>\n                 </React.Fragment>\n            ) ;\n        } else {\n            return \"\";\n        }\n    }\n\n    formatOwner = (owner) => {\n        if (owner===this.DEFAULT_ACCOUNT) {\n            return \"-\" ;\n        } else if (owner===this.context.account.address) {\n            return \"You are the owner!\" ;\n        } else {\n            return owner ;\n        }\n    }\n\n\n\n\n\n\n    // FRONT-END Part 3\n    // --------------------------------------\n\n    renderPart3 = () => {\n        if (this.state.lookedUp && this.state.owner!=null && this.state.owner!==this.context.account.address) {\n           return (\n                 <React.Fragment>\n                    <hr/>\n                    <label>Preparation</label>\n                    <div style={{display: 'flex'}}>\n                        <div style={{flex: '33%', paddingRight: '10px', textAlign: 'center'}}>\n                            <button style={this.styleButton}\n                                    className=\"outline\"\n                                    onClick={this.copyMark}>\n                                1. Copy this\n                            </button>\n                            <input id=\"wika_mark_element\"\n                                   type=\"text\"\n                                   readOnly\n                                   defaultValue={\"wika.network/author/\" + this.context.account.addressRaw}/>\n                        </div>\n                        <div style={{flex: '33%', textAlign: 'center'}}>\n                            <button disabled={true}\n                                    style={this.styleButton}\n                                    className=\"outline\">2. Insert it</button>\n                            <small>(Use an invisible img or link for example.)</small>\n                        </div>\n                        <div style={{flex: '33%', paddingLeft: '10px', textAlign: 'center'}}>\n                            <button disabled={true}\n                                    style={this.styleButton}\n                                    className=\"outline\"\n                                    onClick={this.testUrl}>\n                                3. Test it\n                            </button>\n                            <small>{this.renderTestResult()}</small>\n                        </div>\n                    </div>\n                </React.Fragment>\n            ) ;\n        } else {\n            return \"\";\n        }\n    }\n\n    renderTestResult = () => {\n        if (this.state.testResult==null) {\n            return \"\" ;\n        } else if (this.state.testResult===true) {\n            return \"YES\" ;\n        } else {\n            return \"NO\" ;\n        }\n    }\n\n\n\n    // FRONT-END Part 4\n    // --------------------------------------\n\n    renderPart4 = () => {\n        if (this.state.lookedUp) {\n            let currentRequester = this.state.requestAccount ;\n            if (currentRequester==null || currentRequester===this.DEFAULT_ACCOUNT) {\n                return this.renderSubmitRequest() ;\n            } else if (currentRequester===this.context.account.address) {\n                return this.renderMyRequest() ;\n            } else {\n                return this.renderOtherRequest() ;\n            }\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderSubmitRequest = () => {\n        if (this.state.owner!==this.context.address) {\n            return (\n                <React.Fragment>\n                    {\n                        this.state.txStatus==null?\n                            <button onClick={this.submitRequest} style={{marginBottom:'2px'}}>Submit your request</button>\n                        :\n                            <button disabled={true} style={{marginBottom:'2px'}}><i className=\"fas fa-spinner\"></i>&nbsp;&nbsp;{this.state.txStatus}</button>\n                    }\n                    <small>Note that the request fee is {this.state.requestPrice} W</small>\n                </React.Fragment>\n            ) ;\n        } else {\n            return \"\" ;\n        }\n    }\n\n    renderMyRequestProgress = () => {\n        let blocks_done = this.state.currentBlock - this.state.requestBlock ;\n        return (\n            <React.Fragment>\n                <hr/>\n                <br/>\n                <label>Waiting for verification results ({blocks_done}/{this.NUM_BLOCKS_TO_WAIT})...</label>\n                <progress value={blocks_done} max={this.NUM_BLOCKS_TO_WAIT}></progress>\n            </React.Fragment>\n        )\n    }\n\n    renderMyRequestResult = () => {\n        let icon = this.state.resultOutcome?\"fas fa-vote-yea\":\"fas fa-times\" ;\n        return (\n            <React.Fragment>\n                <hr/>\n                <br/>\n                <div style={{fontSize:'18px', marginBottom:'15px'}}>\n                    <i className={icon}></i>\n                    &nbsp;&nbsp;\n                    Your request was {this.state.resultOutcome?\"approved\":\"rejected\"}.\n                </div>\n                <br/>\n                <label>Verifications: {this.state.resultNumVotes}</label>\n                <br/>\n                <label>Approvals: {this.state.resultNumVotesYes}</label>\n                <br/>\n                <label>Page intro</label>\n                <textarea style={this.styleTextArea}\n                          defaultValue={bytesToString(this.state.resultIntro)}\n                          readOnly={true} />\n                <label>Mark found</label>\n                <textarea style={this.styleTextArea}\n                          defaultValue={bytesToString(this.state.resultMark)}\n                          readOnly={true} />\n            </React.Fragment>\n        )\n    }\n\n    renderMyRequest = () => {\n        if (this.state.resultBlock===0) {\n            return this.renderMyRequestProgress() ;\n        } else {\n            return this.renderMyRequestResult() ;\n        }\n    }\n\n    renderOtherRequest = () => {\n        return (\n            <p>\n                <i className=\"fas fa-exclamation-triangle\"></i> &nbsp;\n                There is currently another user trying to claim ownership for this URL.\n            </p>\n        )\n    }\n\n\n\n\n\n\n    // And finally the render function!\n    // --------------------------------------\n\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h2>Claim Page Ownership</h2>\n                {this.renderPart1()}\n                {this.renderPart2()}\n                {this.renderPart3()}\n                {this.renderPart4()}\n            </div>\n        );\n    }\n\n}\n\n\nexport default ClaimPage ;\n\n\n","import React from \"react\";\nimport {keccakAsHex} from \"@polkadot/util-crypto\";\n\n\nimport {copyToClipboard} from \"../../utils/misc\";\n\n\nclass Keccak extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state={\n            text:\"\",\n            hash:\"\"\n        }\n    }\n\n    updateText = (event) => {\n        this.setState({text:event.target.value}) ;\n    }\n\n    generateHash = () => {\n        let text = this.state.text ;\n        let hash = keccakAsHex(text) ;\n        this.setState({\n            hash:hash\n        }) ;\n    }\n\n    copy = () => {\n        copyToClipboard(\"keccak_hash_element\") ;\n    }\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h2>Keccak</h2>\n                <label>Text</label>\n                <textarea value={this.state.text} onChange={this.updateText}/>\n                <button onClick={this.generateHash}>Hash</button>\n                <input id=\"keccak_hash_element\"\n                       type=\"text\"\n                       value={this.state.hash}\n                       readOnly={true}\n                       style={{\n                           fontSize: '10px',\n                           textAlign: 'center'\n                       }}\n                />\n                <button onClick={this.copy}>Copy to clipboard</button>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Keccak ;\n\n","import React from 'react';\n\n\nclass Wip extends React.Component {\n\n    render() {\n        return (\n            <div className=\"main-content\">\n                <h2>WIP</h2>\n            </div>\n        );\n    }\n\n}\n\nexport default Wip ;\n\n\n","import React from \"react\";\n\n\nimport AppContext from '../utils/context' ;\n\n\nimport Splash from \"./Splash\";\nimport Like from \"./like/Like\";\nimport Recommend from \"./recommend/Recommend\";\nimport Wallet from \"./wallet/Wallet\";\nimport AccountConnect from \"./account/AccountConnect\";\nimport LikedPages from \"./like/LikedPages\";\nimport OwnedPages from \"./authors/OwnedPages\";\nimport ClaimPage from \"./authors/ClaimPage\";\nimport Keccak from \"./debug/Keccak\";\nimport Wip from \"./debug/Wip\";\n\n\n\n\nclass MainContent extends React.Component {\n\n    static contextType = AppContext;\n\n    render = () => {\n        switch (this.context.tab) {\n            case \"splash\":\n                return <Splash />;\n            case \"like\":\n                return <Like />;\n            case \"recommend\":\n                return <Recommend />;\n            case \"wallet\":\n                return <Wallet />;\n            case \"account\":\n                return <AccountConnect />;\n            case \"liked_pages\":\n                return <LikedPages />;\n            case \"owned_pages\":\n                return <OwnedPages />;\n            case \"claim_page\":\n                return <ClaimPage />;\n            case \"keccak\":\n                return <Keccak />;\n            case \"blockchains\":\n                return <Wip />;\n            default:\n                return <Wip />;\n        }\n    }\n\n}\n\nexport default MainContent ;\n","import React from \"react\";\nimport {cryptoWaitReady} from '@polkadot/util-crypto';\n\n\nimport WikaNetwork from './utils/network' ;\nimport AppContext from './utils/context' ;\nimport {convertToWika, wikaToUsd} from \"./utils/misc\";\n\n\nimport NavBar from './components/NavBar' ;\nimport ButtonBar from './components/ButtonBar' ;\nimport MainContent from './components/MainContent' ;\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tab: \"splash\",\n            crypto: {\n                status: 'loading'\n            },\n            network: {\n                type: \"Test Net\",\n                url: \"wss://testnode3.wika.network:443\",\n                status: 'connecting'\n            },\n            api: {\n                type: \"Test API\",\n                url: \"https://api-test.wika.network\"\n            },\n            account: null,\n            balance: {\n                wika:null,\n                usd:null\n            }\n        };\n    }\n\n    componentDidMount = () => {\n        this.loadCrypto() ;\n    }\n\n    loadCrypto = () => {\n        let self = this ;\n        let cryptoState = self.state.crypto ;\n        cryptoState.status = 'loading' ;\n        self.setState({crypto:cryptoState}, () => {\n            cryptoWaitReady().then(() => {\n                cryptoState.status = 'ready' ;\n                self.setState({crypto: cryptoState}, self.connectNetwork) ;\n            }) ;\n        }) ;\n    }\n\n    connectNetwork = (callback) => {\n        let self = this ;\n        let networkState = self.state.network ;\n        networkState.status = 'connecting' ;\n        self.setState({network:networkState}, () => {\n            let network = new WikaNetwork(self.state.network.url) ;\n            network.connect(() => {\n                self.wikaNetwork = network ;\n                networkState.status = 'connected' ;\n                self.setState({network:networkState}, this.subscribeToBalance) ;\n            }) ;\n        }) ;\n    }\n\n    subscribeToBalance = () => {\n        let self = this;\n        if (self.unsubGetBalance) {\n            self.unsubGetBalance() ;\n            self.unsubGetBalance = null ;\n        }\n        let clearBalance = {\n            wika:null,\n            usd:null\n        } ;\n        self.setState({balance:clearBalance}, () => {\n            if (self.state.account && self.state.network.status==='connected') {\n            let address = self.state.account.address;\n            self.wikaNetwork.getBalance(address, (result) => {\n                let balanceWika = convertToWika(result.data.free) ;\n                let balanceUsd = wikaToUsd(balanceWika) ;\n                self.setState({\n                    balance:{\n                        wika:balanceWika,\n                        usd:balanceUsd\n                    }\n                });\n            }).then((s) => {\n                self.unsubGetBalance = s ;\n            });\n        }\n        }) ;\n    }\n\n    selectAccount = (account) => {\n        this.setState({account: account}, this.subscribeToBalance) ;\n    }\n\n    navigate = (tab) => {\n        this.setState({tab: tab});\n    }\n\n    componentWillUnmount = () => {\n        if (this.unsubGetBalance) {\n            this.unsubGetBalance() ;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wika-app\">\n                <AppContext.Provider value={{\n                    // Context data\n                    tab: this.state.tab,\n                    network: this.state.network,\n                    account: this.state.account,\n                    balance: this.state.balance,\n                    // Context functions\n                    navigate: this.navigate,\n                    selectAccount: this.selectAccount,\n                    // Endpoints configuration\n                    wikaNetwork: this.wikaNetwork,\n                    apiEndpoint: this.state.api\n                }}>\n                    <NavBar/>\n\n                    <MainContent />\n\n                    <ButtonBar/>\n                </AppContext.Provider>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/wika.css';\n//import './css/pico.min.css';\n//import './css/mvp.css';\n//import './css/bamboo.min.css';\nimport './css/awesome.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App ref={(x) => {window.wikaReactApp = x;}}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}